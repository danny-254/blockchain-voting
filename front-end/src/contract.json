{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "candidatesNames",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "voterAddresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AnnounceWinner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "votePercentage",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct President.Candidate[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "name": "ShowCandidates",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "votersAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "voted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "vote",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct President.Voter[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "name": "ShowVoters",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "candidates",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votePercentage",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_candidate",
          "type": "uint256"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCandidatesResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotersResults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registeredVoters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sendData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tally",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "voterRegister",
      "outputs": [
        {
          "internalType": "address",
          "name": "votersAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "vote",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "address",
          "name": "votersAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "vote",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Voting.sol"
  },
  "ast": {
    "absolutePath": "contracts/Voting.sol",
    "exportedSymbols": {
      "President": [623]
    },
    "id": 624,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "President",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 623,
        "linearizedBaseContracts": [623],
        "name": "President",
        "nameLocation": "66:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "totalVotes",
            "nameLocation": "90:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "82:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "82:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "totalVoters",
            "nameLocation": "114:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "106:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "106:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "3477ee2e",
            "id": 9,
            "mutability": "mutable",
            "name": "candidates",
            "nameLocation": "150:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "131:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
              "typeString": "struct President.Candidate[]"
            },
            "typeName": {
              "baseType": {
                "id": 7,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6,
                  "name": "Candidate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32,
                  "src": "131:9:0"
                },
                "referencedDeclaration": 32,
                "src": "131:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Candidate_$32_storage_ptr",
                  "typeString": "struct President.Candidate"
                }
              },
              "id": 8,
              "nodeType": "ArrayTypeName",
              "src": "131:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_ptr",
                "typeString": "struct President.Candidate[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 14,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "199:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "166:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
              "typeString": "mapping(address => struct President.Voter)"
            },
            "typeName": {
              "id": 13,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "174:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "166:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                "typeString": "mapping(address => struct President.Voter)"
              },
              "valueType": {
                "id": 12,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "185:5:0"
                },
                "referencedDeclaration": 39,
                "src": "185:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$39_storage_ptr",
                  "typeString": "struct President.Voter"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed8b6b31",
            "id": 18,
            "mutability": "mutable",
            "name": "tally",
            "nameLocation": "246:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "211:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "211:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 16,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2436e06b",
            "id": 21,
            "mutability": "mutable",
            "name": "registeredVoters",
            "nameLocation": "275:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "257:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 19,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "257:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 20,
              "nodeType": "ArrayTypeName",
              "src": "257:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e8f7d8f6",
            "id": 25,
            "mutability": "mutable",
            "name": "voterRegister",
            "nameLocation": "312:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 623,
            "src": "297:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage",
              "typeString": "struct President.Voter[]"
            },
            "typeName": {
              "baseType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Voter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "297:5:0"
                },
                "referencedDeclaration": 39,
                "src": "297:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Voter_$39_storage_ptr",
                  "typeString": "struct President.Voter"
                }
              },
              "id": 24,
              "nodeType": "ArrayTypeName",
              "src": "297:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage_ptr",
                "typeString": "struct President.Voter[]"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "President.Candidate",
            "id": 32,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "370:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "363:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 26,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "363:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "voteCount",
                "nameLocation": "392:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "384:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "384:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "votePercentage",
                "nameLocation": "419:14:0",
                "nodeType": "VariableDeclaration",
                "scope": 32,
                "src": "411:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "411:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Candidate",
            "nameLocation": "343:9:0",
            "nodeType": "StructDefinition",
            "scope": 623,
            "src": "336:104:0",
            "visibility": "public"
          },
          {
            "canonicalName": "President.Voter",
            "id": 39,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "votersAddress",
                "nameLocation": "477:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "469:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 33,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 36,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "505:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "500:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 35,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "500:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "vote",
                "nameLocation": "528:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 39,
                "src": "520:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "520:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Voter",
            "nameLocation": "453:5:0",
            "nodeType": "StructDefinition",
            "scope": 623,
            "src": "446:93:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 47,
            "name": "AnnounceWinner",
            "nameLocation": "551:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "566:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "574:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "583:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "565:26:0"
            },
            "src": "545:47:0"
          },
          {
            "anonymous": false,
            "id": 53,
            "name": "ShowVoters",
            "nameLocation": "666:10:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "677:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct President.Voter[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 49,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 48,
                        "name": "Voter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39,
                        "src": "677:5:0"
                      },
                      "referencedDeclaration": 39,
                      "src": "677:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$39_storage_ptr",
                        "typeString": "struct President.Voter"
                      }
                    },
                    "id": 50,
                    "nodeType": "ArrayTypeName",
                    "src": "677:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage_ptr",
                      "typeString": "struct President.Voter[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "676:9:0"
            },
            "src": "660:26:0"
          },
          {
            "anonymous": false,
            "id": 59,
            "name": "ShowCandidates",
            "nameLocation": "697:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "712:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct President.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 54,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 32,
                        "src": "712:9:0"
                      },
                      "referencedDeclaration": 32,
                      "src": "712:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$32_storage_ptr",
                        "typeString": "struct President.Candidate"
                      }
                    },
                    "id": 56,
                    "nodeType": "ArrayTypeName",
                    "src": "712:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_ptr",
                      "typeString": "struct President.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:13:0"
            },
            "src": "691:34:0"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "915:76:0",
              "statements": [
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 64,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "925:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                            "typeString": "mapping(address => struct President.Voter storage ref)"
                          }
                        },
                        "id": 66,
                        "indexExpression": {
                          "id": 65,
                          "name": "voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "932:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "925:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$39_storage",
                          "typeString": "struct President.Voter storage ref"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "925:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "947:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "925:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "925:27:0"
                },
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 71,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "962:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                            "typeString": "mapping(address => struct President.Voter storage ref)"
                          }
                        },
                        "id": 73,
                        "indexExpression": {
                          "id": 72,
                          "name": "voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "969:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "962:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$39_storage",
                          "typeString": "struct President.Voter storage ref"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "962:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "983:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "962:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "962:22:0"
                }
              ]
            },
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addVoter",
            "nameLocation": "883:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "900:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "892:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:15:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:0"
            },
            "scope": 623,
            "src": "874:117:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 110,
              "nodeType": "Block",
              "src": "1062:203:0",
              "statements": [
                {
                  "body": {
                    "id": 106,
                    "nodeType": "Block",
                    "src": "1126:110:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 97,
                              "name": "registeredVoters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1144:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 99,
                            "indexExpression": {
                              "id": 98,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87,
                              "src": "1161:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1144:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 100,
                            "name": "voterAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "1167:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1144:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 105,
                        "nodeType": "IfStatement",
                        "src": "1140:85:0",
                        "trueBody": {
                          "id": 104,
                          "nodeType": "Block",
                          "src": "1181:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1206:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 85,
                              "id": 103,
                              "nodeType": "Return",
                              "src": "1199:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 90,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "1092:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 91,
                        "name": "registeredVoters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "1096:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1096:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1092:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 107,
                  "initializationExpression": {
                    "assignments": [87],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1085:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 107,
                        "src": "1077:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1077:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 89,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1089:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1077:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1121:3:0",
                      "subExpression": {
                        "id": 94,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "1121:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 96,
                    "nodeType": "ExpressionStatement",
                    "src": "1121:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1072:164:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1253:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 85,
                  "id": 109,
                  "nodeType": "Return",
                  "src": "1246:12:0"
                }
              ]
            },
            "id": 111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exist",
            "nameLocation": "1006:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "voterAddress",
                  "nameLocation": "1020:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1012:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:22:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 111,
                  "src": "1056:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:6:0"
            },
            "scope": 623,
            "src": "997:268:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "1351:410:0",
              "statements": [
                {
                  "body": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "1414:174:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 135,
                                    "name": "candidatesNames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 114,
                                    "src": "1478:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "string memory[] memory"
                                    }
                                  },
                                  "id": 137,
                                  "indexExpression": {
                                    "id": 136,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 121,
                                    "src": "1494:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1478:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1525:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1560:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 134,
                                "name": "Candidate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1444:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Candidate_$32_storage_ptr_$",
                                  "typeString": "type(struct President.Candidate storage pointer)"
                                }
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": ["name", "voteCount", "votePercentage"],
                              "nodeType": "FunctionCall",
                              "src": "1444:132:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                "typeString": "struct President.Candidate memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                "typeString": "struct President.Candidate memory"
                              }
                            ],
                            "expression": {
                              "id": 131,
                              "name": "candidates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1428:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
                                "typeString": "struct President.Candidate storage ref[] storage ref"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1428:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_ptr_$_t_struct$_Candidate_$32_storage_$returns$__$bound_to$_t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct President.Candidate storage ref[] storage pointer,struct President.Candidate storage ref)"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1428:149:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 142,
                        "nodeType": "ExpressionStatement",
                        "src": "1428:149:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 124,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "1381:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 125,
                        "name": "candidatesNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "1385:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1385:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1381:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144,
                  "initializationExpression": {
                    "assignments": [121],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1374:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 144,
                        "src": "1366:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 123,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1378:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1366:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1409:3:0",
                      "subExpression": {
                        "id": 128,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "1409:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130,
                    "nodeType": "ExpressionStatement",
                    "src": "1409:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1361:227:0"
                },
                {
                  "body": {
                    "id": 170,
                    "nodeType": "Block",
                    "src": "1649:106:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 157,
                                "name": "voterAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 117,
                                "src": "1672:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 159,
                              "indexExpression": {
                                "id": 158,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "1687:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1672:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 156,
                            "name": "addVoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "1663:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1663:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 161,
                        "nodeType": "ExpressionStatement",
                        "src": "1663:27:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 165,
                                "name": "voterAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 117,
                                "src": "1726:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 167,
                              "indexExpression": {
                                "id": 166,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 146,
                                "src": "1741:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1726:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 162,
                              "name": "registeredVoters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1704:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1704:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "1704:40:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 149,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "1617:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 150,
                        "name": "voterAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 117,
                        "src": "1621:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1621:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1617:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 171,
                  "initializationExpression": {
                    "assignments": [146],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 146,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "1610:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 171,
                        "src": "1602:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1602:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 148,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1614:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1602:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1644:3:0",
                      "subExpression": {
                        "id": 153,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1644:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 155,
                    "nodeType": "ExpressionStatement",
                    "src": "1644:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1597:158:0"
                }
              ]
            },
            "id": 173,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "candidatesNames",
                  "nameLocation": "1300:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1283:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 112,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1283:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 113,
                    "nodeType": "ArrayTypeName",
                    "src": "1283:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "voterAddresses",
                  "nameLocation": "1335:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1317:32:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1317:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "1317:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:68:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:0"
            },
            "scope": 623,
            "src": "1271:490:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1802:136:0",
              "statements": [
                {
                  "assignments": [180],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "updatedRegister",
                      "nameLocation": "1827:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 192,
                      "src": "1812:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct President.Voter[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 178,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 177,
                            "name": "Voter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39,
                            "src": "1812:5:0"
                          },
                          "referencedDeclaration": 39,
                          "src": "1812:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$39_storage_ptr",
                            "typeString": "struct President.Voter"
                          }
                        },
                        "id": 179,
                        "nodeType": "ArrayTypeName",
                        "src": "1812:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage_ptr",
                          "typeString": "struct President.Voter[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1812:30:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 182,
                          "name": "updatedRegister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "1853:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct President.Voter memory[] memory"
                          }
                        },
                        null
                      ],
                      "id": 183,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1852:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$__$",
                        "typeString": "tuple(struct President.Voter memory[] memory,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 184,
                        "name": "tallyResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "1874:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function () returns (struct President.Voter memory[] memory,struct President.Candidate memory[] memory)"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1874:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(struct President.Voter memory[] memory,struct President.Candidate memory[] memory)"
                      }
                    },
                    "src": "1852:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "updatedRegister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "1915:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct President.Voter memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct President.Voter memory[] memory"
                        }
                      ],
                      "id": 188,
                      "name": "ShowVoters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1904:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct President.Voter memory[] memory)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1904:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "1899:32:0"
                }
              ]
            },
            "functionSelector": "875dea03",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVotersResults",
            "nameLocation": "1776:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:2:0"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1802:0:0"
            },
            "scope": 623,
            "src": "1767:171:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "1985:141:0",
              "statements": [
                {
                  "assignments": [200],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "updatedResults",
                      "nameLocation": "2014:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "1995:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct President.Candidate[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 198,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 197,
                            "name": "Candidate",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32,
                            "src": "1995:9:0"
                          },
                          "referencedDeclaration": 32,
                          "src": "1995:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$32_storage_ptr",
                            "typeString": "struct President.Candidate"
                          }
                        },
                        "id": 199,
                        "nodeType": "ArrayTypeName",
                        "src": "1995:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_ptr",
                          "typeString": "struct President.Candidate[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 201,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1995:33:0"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 202,
                          "name": "updatedResults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "2041:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct President.Candidate memory[] memory"
                          }
                        }
                      ],
                      "id": 203,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2038:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(,struct President.Candidate memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 204,
                        "name": "tallyResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "2059:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function () returns (struct President.Voter memory[] memory,struct President.Candidate memory[] memory)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2059:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(struct President.Voter memory[] memory,struct President.Candidate memory[] memory)"
                      }
                    },
                    "src": "2038:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "updatedResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "2104:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct President.Candidate memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct President.Candidate memory[] memory"
                        }
                      ],
                      "id": 208,
                      "name": "ShowCandidates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "2089:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct President.Candidate memory[] memory)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2089:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 211,
                  "nodeType": "EmitStatement",
                  "src": "2084:35:0"
                }
              ]
            },
            "functionSelector": "4df3a6fe",
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCandidatesResults",
            "nameLocation": "1955:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1975:2:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1985:0:0"
            },
            "scope": 623,
            "src": "1946:180:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "2252:620:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 222,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2276:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 221,
                          "name": "exist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "2270:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2270:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e20656c696769626c6520766f746572",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2285:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7564755949e8fdb66470fa9c6bdd0573ab798beddac490939a7128bc8389a24b",
                          "typeString": "literal_string \"Not an eligible voter\""
                        },
                        "value": "Not an eligible voter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7564755949e8fdb66470fa9c6bdd0573ab798beddac490939a7128bc8389a24b",
                          "typeString": "literal_string \"Not an eligible voter\""
                        }
                      ],
                      "id": 220,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2262:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2262:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "2262:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2327:21:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 228,
                              "name": "voters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2328:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                                "typeString": "mapping(address => struct President.Voter storage ref)"
                              }
                            },
                            "id": 230,
                            "indexExpression": {
                              "id": 229,
                              "name": "_voter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "2335:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2328:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voter_$39_storage",
                              "typeString": "struct President.Voter storage ref"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36,
                          "src": "2328:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920766f746564",
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2350:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        },
                        "value": "Already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
                          "typeString": "literal_string \"Already voted\""
                        }
                      ],
                      "id": 227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2319:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2319:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "2319:47:0"
                },
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 236,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "2377:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                            "typeString": "mapping(address => struct President.Voter storage ref)"
                          }
                        },
                        "id": 238,
                        "indexExpression": {
                          "id": 237,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "2384:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2377:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$39_storage",
                          "typeString": "struct President.Voter storage ref"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36,
                      "src": "2377:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2400:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2377:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2377:27:0"
                },
                {
                  "expression": {
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 243,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "2414:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                            "typeString": "mapping(address => struct President.Voter storage ref)"
                          }
                        },
                        "id": 245,
                        "indexExpression": {
                          "id": 244,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "2421:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2414:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$39_storage",
                          "typeString": "struct President.Voter storage ref"
                        }
                      },
                      "id": 246,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "2414:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 247,
                      "name": "_candidate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "2436:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2414:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 249,
                  "nodeType": "ExpressionStatement",
                  "src": "2414:32:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 250,
                          "name": "voters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "2509:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                            "typeString": "mapping(address => struct President.Voter storage ref)"
                          }
                        },
                        "id": 252,
                        "indexExpression": {
                          "id": 251,
                          "name": "_voter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "2516:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2509:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voter_$39_storage",
                          "typeString": "struct President.Voter storage ref"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38,
                      "src": "2509:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2532:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2509:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 278,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2673:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                              "typeString": "mapping(address => struct President.Voter storage ref)"
                            }
                          },
                          "id": 280,
                          "indexExpression": {
                            "id": 279,
                            "name": "_voter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 215,
                            "src": "2680:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2673:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voter_$39_storage",
                            "typeString": "struct President.Voter storage ref"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "vote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38,
                        "src": "2673:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2696:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2673:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 309,
                      "nodeType": "Block",
                      "src": "2833:33:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 306,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [-19, -19],
                              "referencedDeclaration": -19,
                              "src": "2847:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2847:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 308,
                          "nodeType": "ExpressionStatement",
                          "src": "2847:8:0"
                        }
                      ]
                    },
                    "id": 310,
                    "nodeType": "IfStatement",
                    "src": "2669:197:0",
                    "trueBody": {
                      "id": 305,
                      "nodeType": "Block",
                      "src": "2699:128:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 284,
                                "name": "tally",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "2713:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 286,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2719:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "2713:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "hexValue": "31",
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2725:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2713:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 289,
                          "nodeType": "ExpressionStatement",
                          "src": "2713:13:0"
                        },
                        {
                          "expression": {
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 290,
                              "name": "totalVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "2740:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 291,
                                "name": "totalVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "2753:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2766:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2753:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2740:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 295,
                          "nodeType": "ExpressionStatement",
                          "src": "2740:27:0"
                        },
                        {
                          "expression": {
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 296,
                                  "name": "candidates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9,
                                  "src": "2781:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
                                    "typeString": "struct President.Candidate storage ref[] storage ref"
                                  }
                                },
                                "id": 298,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2792:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2781:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Candidate_$32_storage",
                                  "typeString": "struct President.Candidate storage ref"
                                }
                              },
                              "id": 299,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "voteCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29,
                              "src": "2781:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "baseExpression": {
                                "id": 300,
                                "name": "tally",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18,
                                "src": "2807:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 302,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2813:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2807:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2781:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 304,
                          "nodeType": "ExpressionStatement",
                          "src": "2781:34:0"
                        }
                      ]
                    }
                  },
                  "id": 311,
                  "nodeType": "IfStatement",
                  "src": "2505:361:0",
                  "trueBody": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "2535:128:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 256,
                              "name": "tally",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "2549:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 258,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2555:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2549:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2561:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2549:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 261,
                        "nodeType": "ExpressionStatement",
                        "src": "2549:13:0"
                      },
                      {
                        "expression": {
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 262,
                            "name": "totalVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "2576:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 263,
                              "name": "totalVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "2589:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2602:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2589:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2576:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 267,
                        "nodeType": "ExpressionStatement",
                        "src": "2576:27:0"
                      },
                      {
                        "expression": {
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 268,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9,
                                "src": "2617:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
                                  "typeString": "struct President.Candidate storage ref[] storage ref"
                                }
                              },
                              "id": 270,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2628:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2617:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$32_storage",
                                "typeString": "struct President.Candidate storage ref"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "2617:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 272,
                              "name": "tally",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "2643:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 274,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2649:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2643:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2617:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 276,
                        "nodeType": "ExpressionStatement",
                        "src": "2617:34:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "ff91bb45",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "castVote",
            "nameLocation": "2200:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "2217:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2209:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "_candidate",
                  "nameLocation": "2233:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "2225:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2208:36:0"
            },
            "returnParameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2252:0:0"
            },
            "scope": 623,
            "src": "2191:681:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "2968:199:0",
              "statements": [
                {
                  "assignments": [319],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "percentageTurnout",
                      "nameLocation": "2986:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 338,
                      "src": "2978:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2978:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 320,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2978:25:0"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 321,
                      "name": "totalVoters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "3013:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 322,
                        "name": "registeredVoters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "3027:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3027:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3013:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "3013:37:0"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 326,
                      "name": "percentageTurnout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "3061:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 327,
                              "name": "totalVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "3082:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3095:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "3082:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 330,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3081:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 331,
                        "name": "totalVoters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "3102:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3081:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3061:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "3061:52:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 335,
                        "name": "percentageTurnout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "3141:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 336,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3140:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 317,
                  "id": 337,
                  "nodeType": "Return",
                  "src": "3133:26:0"
                }
              ]
            },
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voterTurnout",
            "nameLocation": "2928:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2940:2:0"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "2960:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2960:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2959:9:0"
            },
            "scope": 623,
            "src": "2919:248:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 425,
              "nodeType": "Block",
              "src": "3349:588:0",
              "statements": [
                {
                  "expression": {
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3359:20:0",
                    "subExpression": {
                      "id": 350,
                      "name": "voterRegister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "3366:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage",
                        "typeString": "struct President.Voter storage ref[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "3359:20:0"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 353,
                      "name": "totalVoters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "3389:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 354,
                        "name": "registeredVoters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "3403:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3403:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3389:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:37:0"
                },
                {
                  "body": {
                    "id": 391,
                    "nodeType": "Block",
                    "src": "3491:232:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 373,
                                    "name": "registeredVoters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21,
                                    "src": "3563:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 375,
                                  "indexExpression": {
                                    "id": 374,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 359,
                                    "src": "3580:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3563:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 376,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "3607:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                                        "typeString": "mapping(address => struct President.Voter storage ref)"
                                      }
                                    },
                                    "id": 380,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 377,
                                        "name": "registeredVoters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21,
                                        "src": "3614:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 379,
                                      "indexExpression": {
                                        "id": 378,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 359,
                                        "src": "3631:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3614:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3607:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$39_storage",
                                      "typeString": "struct President.Voter storage ref"
                                    }
                                  },
                                  "id": 381,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "3607:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 382,
                                      "name": "voters",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14,
                                      "src": "3664:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$39_storage_$",
                                        "typeString": "mapping(address => struct President.Voter storage ref)"
                                      }
                                    },
                                    "id": 386,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 383,
                                        "name": "registeredVoters",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 21,
                                        "src": "3671:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 385,
                                      "indexExpression": {
                                        "id": 384,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 359,
                                        "src": "3688:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3671:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3664:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Voter_$39_storage",
                                      "typeString": "struct President.Voter storage ref"
                                    }
                                  },
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "vote",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 38,
                                  "src": "3664:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 372,
                                "name": "Voter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39,
                                "src": "3524:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Voter_$39_storage_ptr_$",
                                  "typeString": "type(struct President.Voter storage pointer)"
                                }
                              },
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": ["votersAddress", "voted", "vote"],
                              "nodeType": "FunctionCall",
                              "src": "3524:187:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voter_$39_memory_ptr",
                                "typeString": "struct President.Voter memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Voter_$39_memory_ptr",
                                "typeString": "struct President.Voter memory"
                              }
                            ],
                            "expression": {
                              "id": 369,
                              "name": "voterRegister",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3505:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage",
                                "typeString": "struct President.Voter storage ref[] storage ref"
                              }
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3505:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Voter_$39_storage_$dyn_storage_ptr_$_t_struct$_Voter_$39_storage_$returns$__$bound_to$_t_array$_t_struct$_Voter_$39_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct President.Voter storage ref[] storage pointer,struct President.Voter storage ref)"
                            }
                          },
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3505:207:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 390,
                        "nodeType": "ExpressionStatement",
                        "src": "3505:207:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 362,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "3457:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 363,
                        "name": "registeredVoters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "3461:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3461:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3457:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 392,
                  "initializationExpression": {
                    "assignments": [359],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "3450:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "3442:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3442:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 361,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3454:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3442:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3486:3:0",
                      "subExpression": {
                        "id": 366,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "3486:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 368,
                    "nodeType": "ExpressionStatement",
                    "src": "3486:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3437:286:0"
                },
                {
                  "body": {
                    "id": 419,
                    "nodeType": "Block",
                    "src": "3789:97:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 404,
                                "name": "candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9,
                                "src": "3799:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
                                  "typeString": "struct President.Candidate storage ref[] storage ref"
                                }
                              },
                              "id": 406,
                              "indexExpression": {
                                "id": 405,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 394,
                                "src": "3810:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3799:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$32_storage",
                                "typeString": "struct President.Candidate storage ref"
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "votePercentage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "3799:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 413,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 408,
                                        "name": "candidates",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9,
                                        "src": "3831:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
                                          "typeString": "struct President.Candidate storage ref[] storage ref"
                                        }
                                      },
                                      "id": 410,
                                      "indexExpression": {
                                        "id": 409,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 394,
                                        "src": "3842:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3831:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Candidate_$32_storage",
                                        "typeString": "struct President.Candidate storage ref"
                                      }
                                    },
                                    "id": 411,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "voteCount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 29,
                                    "src": "3831:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 412,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3857:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "3831:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 414,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3830:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 415,
                              "name": "totalVoters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "3864:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3830:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3799:76:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 418,
                        "nodeType": "ExpressionStatement",
                        "src": "3799:76:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 397,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "3761:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 398,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "3765:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
                          "typeString": "struct President.Candidate storage ref[] storage ref"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3765:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3761:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 420,
                  "initializationExpression": {
                    "assignments": [394],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "3754:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 420,
                        "src": "3746:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3746:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 396,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3758:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3746:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3784:3:0",
                      "subExpression": {
                        "id": 401,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "3784:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 403,
                    "nodeType": "ExpressionStatement",
                    "src": "3784:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3741:145:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 421,
                        "name": "voterRegister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3903:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage",
                          "typeString": "struct President.Voter storage ref[] storage ref"
                        }
                      },
                      {
                        "id": 422,
                        "name": "candidates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "3918:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage",
                          "typeString": "struct President.Candidate storage ref[] storage ref"
                        }
                      }
                    ],
                    "id": 423,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3902:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Voter_$39_storage_$dyn_storage_$_t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_$",
                      "typeString": "tuple(struct President.Voter storage ref[] storage ref,struct President.Candidate storage ref[] storage ref)"
                    }
                  },
                  "functionReturnParameters": 349,
                  "id": 424,
                  "nodeType": "Return",
                  "src": "3896:33:0"
                }
              ]
            },
            "id": 426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tallyResults",
            "nameLocation": "3283:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3295:2:0"
            },
            "returnParameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "3314:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct President.Voter[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 342,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 341,
                        "name": "Voter",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39,
                        "src": "3314:5:0"
                      },
                      "referencedDeclaration": 39,
                      "src": "3314:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voter_$39_storage_ptr",
                        "typeString": "struct President.Voter"
                      }
                    },
                    "id": 343,
                    "nodeType": "ArrayTypeName",
                    "src": "3314:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Voter_$39_storage_$dyn_storage_ptr",
                      "typeString": "struct President.Voter[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 426,
                  "src": "3330:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct President.Candidate[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 346,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 345,
                        "name": "Candidate",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 32,
                        "src": "3330:9:0"
                      },
                      "referencedDeclaration": 32,
                      "src": "3330:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Candidate_$32_storage_ptr",
                        "typeString": "struct President.Candidate"
                      }
                    },
                    "id": 347,
                    "nodeType": "ArrayTypeName",
                    "src": "3330:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_ptr",
                      "typeString": "struct President.Candidate[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3313:36:0"
            },
            "scope": 623,
            "src": "3274:663:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 477,
              "nodeType": "Block",
              "src": "3991:320:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 432,
                              "name": "tally",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "4009:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 434,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4015:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4009:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 435,
                              "name": "tally",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "4020:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 437,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4026:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4020:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4009:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 439,
                          "name": "totalVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "4032:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4009:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e206e6f742066616972",
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4044:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7aa68e8ac60eedc00d47f92d7d8995d0875f6b3c612d857ab8bf475eacbf7a20",
                          "typeString": "literal_string \"Election not fair\""
                        },
                        "value": "Election not fair"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7aa68e8ac60eedc00d47f92d7d8995d0875f6b3c612d857ab8bf475eacbf7a20",
                          "typeString": "literal_string \"Election not fair\""
                        }
                      ],
                      "id": 431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4001:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "4001:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 445,
                            "name": "voterTurnout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "4082:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4082:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3630",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4100:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        "src": "4082:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420456e6f75676820766f74657273",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4104:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e064a67f595ce6b529cd585a1842347aeb32b3c233682ce27d6374e12ae1a47a",
                          "typeString": "literal_string \"Not Enough voters\""
                        },
                        "value": "Not Enough voters"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e064a67f595ce6b529cd585a1842347aeb32b3c233682ce27d6374e12ae1a47a",
                          "typeString": "literal_string \"Not Enough voters\""
                        }
                      ],
                      "id": 444,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4074:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4074:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "4074:50:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 452,
                        "name": "tally",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4148:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 454,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4154:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4148:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 455,
                        "name": "tally",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4159:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 457,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4165:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4159:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4148:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 462,
                          "name": "tally",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "4212:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 464,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4218:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4212:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 465,
                          "name": "tally",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "4223:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 467,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4229:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4223:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4212:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 474,
                      "nodeType": "Block",
                      "src": "4272:33:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "33",
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4293:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "functionReturnParameters": 430,
                          "id": 473,
                          "nodeType": "Return",
                          "src": "4286:8:0"
                        }
                      ]
                    },
                    "id": 475,
                    "nodeType": "IfStatement",
                    "src": "4208:97:0",
                    "trueBody": {
                      "id": 471,
                      "nodeType": "Block",
                      "src": "4233:33:0",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "32",
                            "id": 469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4254:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "functionReturnParameters": 430,
                          "id": 470,
                          "nodeType": "Return",
                          "src": "4247:8:0"
                        }
                      ]
                    }
                  },
                  "id": 476,
                  "nodeType": "IfStatement",
                  "src": "4144:161:0",
                  "trueBody": {
                    "id": 461,
                    "nodeType": "Block",
                    "src": "4169:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4190:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 430,
                        "id": 460,
                        "nodeType": "Return",
                        "src": "4183:8:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWinner",
            "nameLocation": "3953:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3962:2:0"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 478,
                  "src": "3982:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3981:9:0"
            },
            "scope": 623,
            "src": "3944:367:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "4421:1007:0",
              "statements": [
                {
                  "assignments": [488],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 488,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "4439:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "4431:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 487,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4431:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 491,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 489,
                      "name": "getWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "4448:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:11:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4431:28:0"
                },
                {
                  "assignments": [null, 496],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 496,
                      "mutability": "mutable",
                      "name": "_candidates",
                      "nameLocation": "4492:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "4473:30:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct President.Candidate[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 494,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 493,
                            "name": "Candidate",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32,
                            "src": "4473:9:0"
                          },
                          "referencedDeclaration": 32,
                          "src": "4473:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Candidate_$32_storage_ptr",
                            "typeString": "struct President.Candidate"
                          }
                        },
                        "id": 495,
                        "nodeType": "ArrayTypeName",
                        "src": "4473:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Candidate_$32_storage_$dyn_storage_ptr",
                          "typeString": "struct President.Candidate[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 499,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 497,
                      "name": "tallyResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "4507:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () returns (struct President.Voter memory[] memory,struct President.Candidate memory[] memory)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4507:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_struct$_Voter_$39_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr_$",
                      "typeString": "tuple(struct President.Voter memory[] memory,struct President.Candidate memory[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4469:52:0"
                },
                {
                  "assignments": [501],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "4545:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "4531:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 500,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:21:0"
                },
                {
                  "assignments": [504],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "winnerName",
                      "nameLocation": "4576:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "4562:24:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4562:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 505,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4562:24:0"
                },
                {
                  "assignments": [507],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 507,
                      "mutability": "mutable",
                      "name": "winnerVotes",
                      "nameLocation": "4604:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "4596:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 506,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4596:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 508,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4596:19:0"
                },
                {
                  "assignments": [510],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 510,
                      "mutability": "mutable",
                      "name": "winningMargin",
                      "nameLocation": "4633:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "4625:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4625:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 511,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4625:21:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 512,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "4661:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4671:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4661:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 542,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "4926:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4936:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "4926:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 572,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 488,
                          "src": "5193:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5203:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "5193:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 599,
                      "nodeType": "IfStatement",
                      "src": "5189:233:0",
                      "trueBody": {
                        "id": 598,
                        "nodeType": "Block",
                        "src": "5206:216:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 575,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 501,
                                "src": "5220:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "497473206120746965",
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5230:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7844915441ec97d5dec38ae8540a91a83a5f2022e04261ebbd0347066b0f4242",
                                  "typeString": "literal_string \"Its a tie\""
                                },
                                "value": "Its a tie"
                              },
                              "src": "5220:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "id": 578,
                            "nodeType": "ExpressionStatement",
                            "src": "5220:21:0"
                          },
                          {
                            "expression": {
                              "id": 584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 579,
                                "name": "winnerVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 507,
                                "src": "5255:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 580,
                                    "name": "_candidates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 496,
                                    "src": "5269:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct President.Candidate memory[] memory"
                                    }
                                  },
                                  "id": 582,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 581,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5281:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5269:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                    "typeString": "struct President.Candidate memory"
                                  }
                                },
                                "id": 583,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voteCount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29,
                                "src": "5269:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5255:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 585,
                            "nodeType": "ExpressionStatement",
                            "src": "5255:38:0"
                          },
                          {
                            "expression": {
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 586,
                                "name": "winningMargin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "5307:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 587,
                                    "name": "_candidates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 496,
                                    "src": "5323:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct President.Candidate memory[] memory"
                                    }
                                  },
                                  "id": 589,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5335:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5323:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                    "typeString": "struct President.Candidate memory"
                                  }
                                },
                                "id": 590,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "votePercentage",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31,
                                "src": "5323:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5307:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 592,
                            "nodeType": "ExpressionStatement",
                            "src": "5307:45:0"
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "id": 593,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 501,
                                  "src": "5375:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 594,
                                  "name": "winnerVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 507,
                                  "src": "5384:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 595,
                                  "name": "winningMargin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 510,
                                  "src": "5397:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 596,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5374:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
                                "typeString": "tuple(string memory,uint256,uint256)"
                              }
                            },
                            "functionReturnParameters": 486,
                            "id": 597,
                            "nodeType": "Return",
                            "src": "5367:44:0"
                          }
                        ]
                      }
                    },
                    "id": 600,
                    "nodeType": "IfStatement",
                    "src": "4922:500:0",
                    "trueBody": {
                      "id": 571,
                      "nodeType": "Block",
                      "src": "4939:244:0",
                      "statements": [
                        {
                          "expression": {
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 545,
                              "name": "winnerName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "4953:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 546,
                                  "name": "_candidates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "4966:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct President.Candidate memory[] memory"
                                  }
                                },
                                "id": 548,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4978:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4966:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                  "typeString": "struct President.Candidate memory"
                                }
                              },
                              "id": 549,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "name",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "4966:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "src": "4953:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "id": 551,
                          "nodeType": "ExpressionStatement",
                          "src": "4953:32:0"
                        },
                        {
                          "expression": {
                            "id": 557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 552,
                              "name": "winnerVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "4999:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 553,
                                  "name": "_candidates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "5013:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct President.Candidate memory[] memory"
                                  }
                                },
                                "id": 555,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5025:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5013:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                  "typeString": "struct President.Candidate memory"
                                }
                              },
                              "id": 556,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "voteCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29,
                              "src": "5013:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4999:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 558,
                          "nodeType": "ExpressionStatement",
                          "src": "4999:38:0"
                        },
                        {
                          "expression": {
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 559,
                              "name": "winningMargin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "5051:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 560,
                                  "name": "_candidates",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "5067:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct President.Candidate memory[] memory"
                                  }
                                },
                                "id": 562,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5079:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5067:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                  "typeString": "struct President.Candidate memory"
                                }
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votePercentage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "5067:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5051:45:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 565,
                          "nodeType": "ExpressionStatement",
                          "src": "5051:45:0"
                        },
                        {
                          "expression": {
                            "components": [
                              {
                                "id": 566,
                                "name": "winnerName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 504,
                                "src": "5131:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 567,
                                "name": "winnerVotes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 507,
                                "src": "5143:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 568,
                                "name": "winningMargin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "5156:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 569,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5130:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(string memory,uint256,uint256)"
                            }
                          },
                          "functionReturnParameters": 486,
                          "id": 570,
                          "nodeType": "Return",
                          "src": "5123:47:0"
                        }
                      ]
                    }
                  },
                  "id": 601,
                  "nodeType": "IfStatement",
                  "src": "4657:765:0",
                  "trueBody": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "4674:242:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 515,
                            "name": "winnerName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "4688:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 516,
                                "name": "_candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 496,
                                "src": "4701:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct President.Candidate memory[] memory"
                                }
                              },
                              "id": 518,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4713:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4701:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                "typeString": "struct President.Candidate memory"
                              }
                            },
                            "id": 519,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "4701:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4688:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "4688:32:0"
                      },
                      {
                        "expression": {
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 522,
                            "name": "winnerVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 507,
                            "src": "4734:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 523,
                                "name": "_candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 496,
                                "src": "4748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct President.Candidate memory[] memory"
                                }
                              },
                              "id": 525,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4760:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4748:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                "typeString": "struct President.Candidate memory"
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "4748:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4734:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 528,
                        "nodeType": "ExpressionStatement",
                        "src": "4734:38:0"
                      },
                      {
                        "expression": {
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 529,
                            "name": "winningMargin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "4786:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 530,
                                "name": "_candidates",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 496,
                                "src": "4802:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Candidate_$32_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct President.Candidate memory[] memory"
                                }
                              },
                              "id": 532,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4814:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4802:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Candidate_$32_memory_ptr",
                                "typeString": "struct President.Candidate memory"
                              }
                            },
                            "id": 533,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "votePercentage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "4802:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4786:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 535,
                        "nodeType": "ExpressionStatement",
                        "src": "4786:45:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 536,
                              "name": "winnerName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "4866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 537,
                              "name": "winnerVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 507,
                              "src": "4878:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 538,
                              "name": "winningMargin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "4891:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 539,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4865:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(string memory,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 486,
                        "id": 540,
                        "nodeType": "Return",
                        "src": "4858:47:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "announceWinner",
            "nameLocation": "4355:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4369:2:0"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "4389:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "4404:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4404:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 603,
                  "src": "4413:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4413:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4388:33:0"
            },
            "scope": 623,
            "src": "4346:1082:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "5461:150:0",
              "statements": [
                {
                  "assignments": [607, 609, 611],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "Name",
                      "nameLocation": "5486:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "5472:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5472:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "voteGot",
                      "nameLocation": "5500:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "5492:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5492:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 611,
                      "mutability": "mutable",
                      "name": "margin",
                      "nameLocation": "5517:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "5509:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 610,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5509:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 614,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 612,
                      "name": "announceWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 603,
                      "src": "5527:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () returns (string memory,uint256,uint256)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5527:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(string memory,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5471:72:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 616,
                        "name": "Name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "5573:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 617,
                        "name": "voteGot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "5579:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 618,
                        "name": "margin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "5588:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 615,
                      "name": "AnnounceWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "5558:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5558:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 620,
                  "nodeType": "EmitStatement",
                  "src": "5553:42:0"
                }
              ]
            },
            "functionSelector": "8911be30",
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendData",
            "nameLocation": "5443:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5451:2:0"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5461:0:0"
            },
            "scope": 623,
            "src": "5434:177:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 624,
        "src": "57:5556:0",
        "usedErrors": []
      }
    ],
    "src": "32:5581:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620015493803806200154983398101604081905262000034916200034a565b60005b8251811015620000d85760026040518060600160405280858481518110620000635762000063620004aa565b60209081029190910181015182526000828201819052604090920182905283546001810185559382529081902082518051939460030290910192620000ac9284920190620001ab565b506020820151600182015560409091015160029091015580620000cf81620004c0565b91505062000037565b5060005b81518110156200017a5762000113828281518110620000ff57620000ff620004aa565b60200260200101516200018360201b60201c565b60058282815181106200012a576200012a620004aa565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055806200017181620004c0565b915050620000dc565b50505062000527565b6001600160a01b03166000908152600360205260408120805460ff60a01b1916815560010155565b828054620001b990620004ea565b90600052602060002090601f016020900481019282620001dd576000855562000228565b82601f10620001f857805160ff191683800117855562000228565b8280016001018555821562000228579182015b82811115620002285782518255916020019190600101906200020b565b50620002369291506200023a565b5090565b5b808211156200023657600081556001016200023b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000292576200029262000251565b604052919050565b60006001600160401b03821115620002b657620002b662000251565b5060051b60200190565b600082601f830112620002d257600080fd5b81516020620002eb620002e5836200029a565b62000267565b82815260059290921b840181019181810190868411156200030b57600080fd5b8286015b848110156200033f5780516001600160a01b0381168114620003315760008081fd5b83529183019183016200030f565b509695505050505050565b60008060408084860312156200035f57600080fd5b83516001600160401b03808211156200037757600080fd5b8186019150601f87818401126200038d57600080fd5b82516020620003a0620002e5836200029a565b82815260059290921b8501810191818101908b841115620003c057600080fd5b8287015b848110156200047457805187811115620003de5760008081fd5b8801603f81018e13620003f15760008081fd5b848101518881111562000408576200040862000251565b6200041b818901601f1916870162000267565b8181528f8c838501011115620004315760008081fd5b60005b8281101562000451578381018d0151828201890152870162000434565b82811115620004635760008884840101525b5085525050918301918301620003c4565b50918a0151919850909550505050808311156200049057600080fd5b5050620004a085828601620002c0565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415620004e357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680620004ff57607f821691505b602082108114156200052157634e487b7160e01b600052602260045260246000fd5b50919050565b61101280620005376000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638911be30116100665780638911be30146100fc578063a3ec138d14610104578063e8f7d8f614610166578063ed8b6b3114610179578063ff91bb45146101a757600080fd5b80632436e06b146100985780633477ee2e146100c85780634df3a6fe146100ea578063875dea03146100f4575b600080fd5b6100ab6100a6366004610ce9565b6101ba565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610ce9565b6101e4565b6040516100bf93929190610d4f565b6100f26102a6565b005b6100f26102ef565b6100f261032d565b610141610112366004610d90565b600360205260009081526040902080546001909101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b0390941684529115156020840152908201526060016100bf565b610141610174366004610ce9565b610380565b610199610187366004610ce9565b60046020526000908152604090205481565b6040519081526020016100bf565b6100f26101b5366004610db2565b6103c3565b600581815481106101ca57600080fd5b6000918252602090912001546001600160a01b0316905081565b600281815481106101f457600080fd5b906000526020600020906003020160009150905080600001805461021790610ddc565b80601f016020809104026020016040519081016040528092919081815260200182805461024390610ddc565b80156102905780601f1061026557610100808354040283529160200191610290565b820191906000526020600020905b81548152906001019060200180831161027357829003601f168201915b5050505050908060010154908060020154905083565b60606102b06105cf565b6040519092507f0466d9fb4de5473511cc3bd190dfd3e522e783c9165f3d5cc44e6c2da140e98b91506102e4908390610e17565b60405180910390a150565b60606102f96105cf565b50809150507f1927b141f460490e7769a6039fdb226783cc07deb0b34b733289ffa4ed65fced816040516102e49190610e98565b600080600061033a610946565b9250925092507ff5a14047b2c5509302998b7da5ccbf90331d63e4d300467eeb31443c9ff640c983838360405161037393929190610d4f565b60405180910390a1505050565b6006818154811061039057600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b6103cc82610ad0565b6104155760405162461bcd60e51b81526020600482015260156024820152742737ba1030b71032b634b3b4b13632903b37ba32b960591b60448201526064015b60405180910390fd5b6001600160a01b038216600090815260036020526040902054600160a01b900460ff16156104755760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b604482015260640161040c565b6001600160a01b0382166000908152600360205260409020805460ff60a01b1916600160a01b178155600190810182905581141561053657600160008181526004602052600080516020610f9d83398151915280549091906104d8908490610f12565b90915550506000546104eb906001610f12565b6000908155600181526004602052600080516020610f9d83398151915254600280549192909161051d5761051d610f2a565b9060005260206000209060030201600101819055505050565b6001600160a01b0382166000908152600360205260409020600101546002141561009357600260009081526004602052600080516020610fbd833981519152805460019290610586908490610f12565b9091555050600054610599906001610f12565b60009081556002908190526004602052600080516020610fbd833981519152548154909190600190811061051d5761051d610f2a565b6060806105de60066000610c9b565b60055460015560005b60055481101561073257600660405180606001604052806005848154811061061157610611610f2a565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b03168152602001600360006005868154811061065457610654610f2a565b60009182526020808320909101546001600160a01b0316835282810193909352604090910181205460ff600160a01b909104161515835260058054939092019260039290879081106106a8576106a8610f2a565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220600190810154909552865480860188559682529081902085516002909702018054918601511515600160a01b026001600160a81b0319909216969093169590951794909417815591909201519101558061072a81610f40565b9150506105e7565b5060005b6002548110156107b7576001546002828154811061075657610756610f2a565b90600052602060002090600302016001015460646107749190610f5b565b61077e9190610f7a565b6002828154811061079157610791610f2a565b6000918252602090912060026003909202010155806107af81610f40565b915050610736565b506006600281805480602002602001604051908101604052809291908181526020016000905b82821015610839576000848152602090819020604080516060810182526002860290920180546001600160a01b0381168452600160a01b900460ff161515838501526001908101549183019190915290835290920191016107dd565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610938578382906000526020600020906003020160405180606001604052908160008201805461089390610ddc565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf90610ddc565b801561090c5780601f106108e15761010080835404028352916020019161090c565b820191906000526020600020905b8154815290600101906020018083116108ef57829003601f168201915b505050505081526020016001820154815260200160028201548152505081526020019060010190610860565b505050509050915091509091565b60606000806000610955610b3a565b905060006109616105cf565b91505060608060008085600114156109e7578460008151811061098657610986610f2a565b6020026020010151600001519250846000815181106109a7576109a7610f2a565b6020026020010151602001519150846000815181106109c8576109c8610f2a565b6020908102919091010151604001519299919850919650945050505050565b8560021415610a455784600181518110610a0357610a03610f2a565b602002602001015160000151925084600181518110610a2457610a24610f2a565b6020026020010151602001519150846001815181106109c8576109c8610f2a565b8560031415610ac5576040518060400160405280600981526020016849747320612074696560b81b815250935084600081518110610a8557610a85610f2a565b602002602001015160200151915084600081518110610aa657610aa6610f2a565b6020908102919091010151604001519399919850929650945050505050565b505050505050909192565b6000805b600554811015610b3157826001600160a01b031660058281548110610afb57610afb610f2a565b6000918252602090912001546001600160a01b03161415610b1f5750600192915050565b80610b2981610f40565b915050610ad4565b50600092915050565b600080546004602052600080516020610fbd8339815191525460018352600080516020610f9d83398151915254610b719190610f12565b14610bb25760405162461bcd60e51b815260206004820152601160248201527022b632b1ba34b7b7103737ba103330b4b960791b604482015260640161040c565b603c610bbc610c70565b1015610bfe5760405162461bcd60e51b81526020600482015260116024820152704e6f7420456e6f75676820766f7465727360781b604482015260640161040c565b6004602052600080516020610fbd833981519152546001600052600080516020610f9d833981519152541115610c345750600190565b6004602052600080516020610f9d833981519152546002600052600080516020610fbd833981519152541115610c6a5750600290565b50600390565b60055460018190556000805490918291610c8b906064610f5b565b610c959190610f7a565b92915050565b5080546000825560020290600052602060002090810190610cbc9190610cbf565b50565b5b80821115610ce55780546001600160a81b031916815560006001820155600201610cc0565b5090565b600060208284031215610cfb57600080fd5b5035919050565b6000815180845260005b81811015610d2857602081850181015186830182015201610d0c565b81811115610d3a576000602083870101525b50601f01601f19169290920160200192915050565b606081526000610d626060830186610d02565b60208301949094525060400152919050565b80356001600160a01b0381168114610d8b57600080fd5b919050565b600060208284031215610da257600080fd5b610dab82610d74565b9392505050565b60008060408385031215610dc557600080fd5b610dce83610d74565b946020939093013593505050565b600181811c90821680610df057607f821691505b60208210811415610e1157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e8a57603f19898403018552815160608151818652610e6482870182610d02565b838b0151878c015292890151958901959095525094870194925090860190600101610e3e565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015610eef57815180516001600160a01b03168552868101511515878601528501518585015260609093019290850190600101610eb5565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f2557610f25610efc565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610f5457610f54610efc565b5060010190565b6000816000190483118215151615610f7557610f75610efc565b500290565b600082610f9757634e487b7160e01b600052601260045260246000fd5b50049056feabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0591da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7a26469706673582212208e7e747c7df63f7613c04fa9d3fbd7d05d121cbca246675b54363fc5609e06cb64736f6c634300080b0033",
  "bytecodeSha1": "62479ace722a9d651ba4b19f18b681f351685d8b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "President",
  "coverageMap": {
    "branches": {
      "0": {
        "President.announceWinner": {
          "47": [4661, 4672, false],
          "48": [4926, 4937, false],
          "49": [5193, 5204, false]
        },
        "President.castVote": {
          "43": [2270, 2283, true],
          "44": [2327, 2348, true],
          "45": [2509, 2533, false],
          "46": [2673, 2697, false]
        },
        "President.exist": {
          "50": [1144, 1179, false]
        },
        "President.getWinner": {
          "51": [4009, 4042, true],
          "52": [4082, 4102, true],
          "53": [4148, 4167, false],
          "54": [4212, 4231, false]
        }
      }
    },
    "statements": {
      "0": {
        "President.announceWinner": {
          "22": [4688, 4720],
          "23": [4734, 4772],
          "24": [4786, 4831],
          "25": [4858, 4905],
          "26": [4953, 4985],
          "27": [4999, 5037],
          "28": [5051, 5096],
          "29": [5220, 5241],
          "30": [5255, 5293],
          "31": [5307, 5352],
          "32": [5367, 5411]
        },
        "President.castVote": {
          "5": [2262, 2309],
          "6": [2319, 2366],
          "7": [2377, 2404],
          "8": [2414, 2446],
          "9": [2549, 2562],
          "10": [2576, 2603],
          "11": [2617, 2651],
          "12": [2713, 2726],
          "13": [2740, 2767],
          "14": [2781, 2815]
        },
        "President.exist": {
          "33": [1199, 1210],
          "34": [1121, 1124],
          "35": [1246, 1258]
        },
        "President.getCandidatesResults": {
          "0": [2038, 2073],
          "1": [2084, 2119]
        },
        "President.getVotersResults": {
          "2": [1852, 1888],
          "3": [1899, 1931]
        },
        "President.getWinner": {
          "36": [4001, 4064],
          "37": [4074, 4124],
          "38": [4183, 4191],
          "39": [4247, 4255],
          "40": [4286, 4294]
        },
        "President.sendData": {
          "4": [5553, 5595]
        },
        "President.tallyResults": {
          "15": [3359, 3379],
          "16": [3389, 3426],
          "17": [3505, 3712],
          "18": [3486, 3489],
          "19": [3799, 3875],
          "20": [3784, 3787],
          "21": [3896, 3929]
        },
        "President.voterTurnout": {
          "41": [3013, 3050],
          "42": [3061, 3113]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c80638911be30116100665780638911be30146100fc578063a3ec138d14610104578063e8f7d8f614610166578063ed8b6b3114610179578063ff91bb45146101a757600080fd5b80632436e06b146100985780633477ee2e146100c85780634df3a6fe146100ea578063875dea03146100f4575b600080fd5b6100ab6100a6366004610ce9565b6101ba565b6040516001600160a01b0390911681526020015b60405180910390f35b6100db6100d6366004610ce9565b6101e4565b6040516100bf93929190610d4f565b6100f26102a6565b005b6100f26102ef565b6100f261032d565b610141610112366004610d90565b600360205260009081526040902080546001909101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b0390941684529115156020840152908201526060016100bf565b610141610174366004610ce9565b610380565b610199610187366004610ce9565b60046020526000908152604090205481565b6040519081526020016100bf565b6100f26101b5366004610db2565b6103c3565b600581815481106101ca57600080fd5b6000918252602090912001546001600160a01b0316905081565b600281815481106101f457600080fd5b906000526020600020906003020160009150905080600001805461021790610ddc565b80601f016020809104026020016040519081016040528092919081815260200182805461024390610ddc565b80156102905780601f1061026557610100808354040283529160200191610290565b820191906000526020600020905b81548152906001019060200180831161027357829003601f168201915b5050505050908060010154908060020154905083565b60606102b06105cf565b6040519092507f0466d9fb4de5473511cc3bd190dfd3e522e783c9165f3d5cc44e6c2da140e98b91506102e4908390610e17565b60405180910390a150565b60606102f96105cf565b50809150507f1927b141f460490e7769a6039fdb226783cc07deb0b34b733289ffa4ed65fced816040516102e49190610e98565b600080600061033a610946565b9250925092507ff5a14047b2c5509302998b7da5ccbf90331d63e4d300467eeb31443c9ff640c983838360405161037393929190610d4f565b60405180910390a1505050565b6006818154811061039057600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0382169250600160a01b90910460ff169083565b6103cc82610ad0565b6104155760405162461bcd60e51b81526020600482015260156024820152742737ba1030b71032b634b3b4b13632903b37ba32b960591b60448201526064015b60405180910390fd5b6001600160a01b038216600090815260036020526040902054600160a01b900460ff16156104755760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b604482015260640161040c565b6001600160a01b0382166000908152600360205260409020805460ff60a01b1916600160a01b178155600190810182905581141561053657600160008181526004602052600080516020610f9d83398151915280549091906104d8908490610f12565b90915550506000546104eb906001610f12565b6000908155600181526004602052600080516020610f9d83398151915254600280549192909161051d5761051d610f2a565b9060005260206000209060030201600101819055505050565b6001600160a01b0382166000908152600360205260409020600101546002141561009357600260009081526004602052600080516020610fbd833981519152805460019290610586908490610f12565b9091555050600054610599906001610f12565b60009081556002908190526004602052600080516020610fbd833981519152548154909190600190811061051d5761051d610f2a565b6060806105de60066000610c9b565b60055460015560005b60055481101561073257600660405180606001604052806005848154811061061157610611610f2a565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b03168152602001600360006005868154811061065457610654610f2a565b60009182526020808320909101546001600160a01b0316835282810193909352604090910181205460ff600160a01b909104161515835260058054939092019260039290879081106106a8576106a8610f2a565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283018220600190810154909552865480860188559682529081902085516002909702018054918601511515600160a01b026001600160a81b0319909216969093169590951794909417815591909201519101558061072a81610f40565b9150506105e7565b5060005b6002548110156107b7576001546002828154811061075657610756610f2a565b90600052602060002090600302016001015460646107749190610f5b565b61077e9190610f7a565b6002828154811061079157610791610f2a565b6000918252602090912060026003909202010155806107af81610f40565b915050610736565b506006600281805480602002602001604051908101604052809291908181526020016000905b82821015610839576000848152602090819020604080516060810182526002860290920180546001600160a01b0381168452600160a01b900460ff161515838501526001908101549183019190915290835290920191016107dd565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610938578382906000526020600020906003020160405180606001604052908160008201805461089390610ddc565b80601f01602080910402602001604051908101604052809291908181526020018280546108bf90610ddc565b801561090c5780601f106108e15761010080835404028352916020019161090c565b820191906000526020600020905b8154815290600101906020018083116108ef57829003601f168201915b505050505081526020016001820154815260200160028201548152505081526020019060010190610860565b505050509050915091509091565b60606000806000610955610b3a565b905060006109616105cf565b91505060608060008085600114156109e7578460008151811061098657610986610f2a565b6020026020010151600001519250846000815181106109a7576109a7610f2a565b6020026020010151602001519150846000815181106109c8576109c8610f2a565b6020908102919091010151604001519299919850919650945050505050565b8560021415610a455784600181518110610a0357610a03610f2a565b602002602001015160000151925084600181518110610a2457610a24610f2a565b6020026020010151602001519150846001815181106109c8576109c8610f2a565b8560031415610ac5576040518060400160405280600981526020016849747320612074696560b81b815250935084600081518110610a8557610a85610f2a565b602002602001015160200151915084600081518110610aa657610aa6610f2a565b6020908102919091010151604001519399919850929650945050505050565b505050505050909192565b6000805b600554811015610b3157826001600160a01b031660058281548110610afb57610afb610f2a565b6000918252602090912001546001600160a01b03161415610b1f5750600192915050565b80610b2981610f40565b915050610ad4565b50600092915050565b600080546004602052600080516020610fbd8339815191525460018352600080516020610f9d83398151915254610b719190610f12565b14610bb25760405162461bcd60e51b815260206004820152601160248201527022b632b1ba34b7b7103737ba103330b4b960791b604482015260640161040c565b603c610bbc610c70565b1015610bfe5760405162461bcd60e51b81526020600482015260116024820152704e6f7420456e6f75676820766f7465727360781b604482015260640161040c565b6004602052600080516020610fbd833981519152546001600052600080516020610f9d833981519152541115610c345750600190565b6004602052600080516020610f9d833981519152546002600052600080516020610fbd833981519152541115610c6a5750600290565b50600390565b60055460018190556000805490918291610c8b906064610f5b565b610c959190610f7a565b92915050565b5080546000825560020290600052602060002090810190610cbc9190610cbf565b50565b5b80821115610ce55780546001600160a81b031916815560006001820155600201610cc0565b5090565b600060208284031215610cfb57600080fd5b5035919050565b6000815180845260005b81811015610d2857602081850181015186830182015201610d0c565b81811115610d3a576000602083870101525b50601f01601f19169290920160200192915050565b606081526000610d626060830186610d02565b60208301949094525060400152919050565b80356001600160a01b0381168114610d8b57600080fd5b919050565b600060208284031215610da257600080fd5b610dab82610d74565b9392505050565b60008060408385031215610dc557600080fd5b610dce83610d74565b946020939093013593505050565b600181811c90821680610df057607f821691505b60208210811415610e1157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e8a57603f19898403018552815160608151818652610e6482870182610d02565b838b0151878c015292890151958901959095525094870194925090860190600101610e3e565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015610eef57815180516001600160a01b03168552868101511515878601528501518585015260609093019290850190600101610eb5565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f2557610f25610efc565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610f5457610f54610efc565b5060010190565b6000816000190483118215151615610f7557610f75610efc565b500290565b600082610f9757634e487b7160e01b600052601260045260246000fd5b50049056feabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0591da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7a26469706673582212208e7e747c7df63f7613c04fa9d3fbd7d05d121cbca246675b54363fc5609e06cb64736f6c634300080b0033",
  "deployedSourceMap": "57:5556:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:34;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:1;;;345:51;;333:2;318:18;257:34:0;;;;;;;;131:29;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1946:180::-;;;:::i;:::-;;1767:171;;;:::i;5434:177::-;;;:::i;166:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:39:0;;;-1:-1:-1;;;166:39:0;;;;;;;;;;;-1:-1:-1;;;;;1834:32:1;;;1816:51;;1910:14;;1903:22;1898:2;1883:18;;1876:50;1942:18;;;1935:34;1804:2;1789:18;166:39:0;1620:355:1;297:28:0;;;;;;:::i;:::-;;:::i;211:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2126:25:1;;;2114:2;2099:18;211:40:0;1980:177:1;2191:681:0;;;;;;:::i;:::-;;:::i;257:34::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;257:34:0;;-1:-1:-1;257:34:0;:::o;131:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1946:180::-;1995:33;2059:14;:12;:14::i;:::-;2089:30;;2038:35;;-1:-1:-1;2089:30:0;;-1:-1:-1;2089:30:0;;2038:35;;2089:30;:::i;:::-;;;;;;;;1985:141;1946:180::o;1767:171::-;1812:30;1874:14;:12;:14::i;:::-;1852:36;;;;;1904:27;1915:15;1904:27;;;;;;:::i;5434:177::-;5472:18;5492:15;5509:14;5527:16;:14;:16::i;:::-;5471:72;;;;;;5558:37;5573:4;5579:7;5588:6;5558:37;;;;;;;;:::i;:::-;;;;;;;;5461:150;;;5434:177::o;297:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;297:28:0;;;-1:-1:-1;;;;297:28:0;;;;;;;:::o;2191:681::-;2270:13;2276:6;2270:5;:13::i;:::-;2262:47;;;;-1:-1:-1;;;2262:47:0;;5038:2:1;2262:47:0;;;5020:21:1;5077:2;5057:18;;;5050:30;-1:-1:-1;;;5096:18:1;;;5089:51;5157:18;;2262:47:0;;;;;;;;;-1:-1:-1;;;;;2328:14:0;;;;;;:6;:14;;;;;:20;-1:-1:-1;;;2328:20:0;;;;2327:21;2319:47;;;;-1:-1:-1;;;2319:47:0;;5388:2:1;2319:47:0;;;5370:21:1;5427:2;5407:18;;;5400:30;-1:-1:-1;;;5446:18:1;;;5439:43;5499:18;;2319:47:0;5186:337:1;2319:47:0;-1:-1:-1;;;;;2377:14:0;;;;;;:6;:14;;;;;:27;;-1:-1:-1;;;;2377:27:0;-1:-1:-1;;;2377:27:0;;;2400:4;2414:19;;;:32;;;2509:24;;2505:361;;;2561:1;2549:8;;;;:5;:8;;-1:-1:-1;;;;;;;;;;;2549:13:0;;:8;;;:13;;2561:1;;2549:13;:::i;:::-;;;;-1:-1:-1;;2589:10:0;;:14;;2602:1;2589:14;:::i;:::-;2576:10;:27;;;2649:1;2643:8;;:5;:8;;-1:-1:-1;;;;;;;;;;;2643:8:0;2617:10;:13;;2643:8;;2617:10;;:13;;;;:::i;:::-;;;;;;;;;;;:23;;:34;;;;2191:681;;:::o;2505:361::-;-1:-1:-1;;;;;2673:14:0;;;;;;:6;:14;;;;;:19;;;2696:1;2673:24;2669:197;;;2719:1;2713:8;;;;:5;:8;;-1:-1:-1;;;;;;;;;;;2713:13:0;;2725:1;;2713:8;:13;;2725:1;;2713:13;:::i;:::-;;;;-1:-1:-1;;2753:10:0;;:14;;2766:1;2753:14;:::i;:::-;2740:10;:27;;;2813:1;2807:8;;;;:5;:8;;-1:-1:-1;;;;;;;;;;;2807:8:0;2781:13;;2807:8;;2813:1;2792;;2781:13;;;;;;:::i;3274:663::-;3314:14;;3359:20;3366:13;;3359:20;:::i;:::-;3403:16;:23;3389:11;:37;-1:-1:-1;3437:286:0;3461:16;:23;3457:27;;3437:286;;;3505:13;3524:187;;;;;;;;3563:16;3580:1;3563:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3563:19:0;-1:-1:-1;;;;;3524:187:0;;;;;3607:6;:27;3614:16;3631:1;3614:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3614:19:0;3607:27;;;;;;;;;;;;;;;:33;;-1:-1:-1;;;3607:33:0;;;;3524:187;;;;3671:16;:19;;3524:187;;;;;3664:6;;3671:16;3688:1;;3671:19;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3671:19:0;;;3664:27;;;;;;;;;;;;;;;3671:19;3664:32;;;;3524:187;;;3505:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3505:207:0;-1:-1:-1;;;;;;3505:207:0;;;;;;;;;;;;;;;;;;;;;;;;;3486:3;;;;:::i;:::-;;;;3437:286;;;;3746:9;3741:145;3765:10;:17;3761:21;;3741:145;;;3864:11;;3831:10;3842:1;3831:13;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;3857:3;3831:29;;;;:::i;:::-;3830:45;;;;:::i;:::-;3799:10;3810:1;3799:13;;;;;;;;:::i;:::-;;;;;;;;;:28;:13;;;;;:28;:76;3784:3;;;;:::i;:::-;;;;3741:145;;;;3903:13;3918:10;3896:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3896:33:0;;;;-1:-1:-1;;;3896:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3274:663;;:::o;4346:1082::-;4389:13;4404:7;4413;4431:14;4448:11;:9;:11::i;:::-;4431:28;;4473:30;4507:14;:12;:14::i;:::-;4469:52;;;4531:21;4562:24;4596:19;4625:21;4661:6;4671:1;4661:11;4657:765;;;4701:11;4713:1;4701:14;;;;;;;;:::i;:::-;;;;;;;:19;;;4688:32;;4748:11;4760:1;4748:14;;;;;;;;:::i;:::-;;;;;;;:24;;;4734:38;;4802:11;4814:1;4802:14;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;;4866:10;;4878:11;;-1:-1:-1;4802:29:0;;-1:-1:-1;4346:1082:0;-1:-1:-1;;;;;4346:1082:0:o;4657:765::-;4926:6;4936:1;4926:11;4922:500;;;4966:11;4978:1;4966:14;;;;;;;;:::i;:::-;;;;;;;:19;;;4953:32;;5013:11;5025:1;5013:14;;;;;;;;:::i;:::-;;;;;;;:24;;;4999:38;;5067:11;5079:1;5067:14;;;;;;;;:::i;4922:500::-;5193:6;5203:1;5193:11;5189:233;;;5220:21;;;;;;;;;;;;;-1:-1:-1;;;5220:21:0;;;;;5269:11;5281:1;5269:14;;;;;;;;:::i;:::-;;;;;;;:24;;;5255:38;;5323:11;5335:1;5323:14;;;;;;;;:::i;:::-;;;;;;;;;;;:29;;;5375:7;;5384:11;;-1:-1:-1;5323:29:0;;-1:-1:-1;4346:1082:0;-1:-1:-1;;;;;4346:1082:0:o;5189:233::-;4421:1007;;;;;;4346:1082;;;:::o;997:268::-;1056:4;;1072:164;1096:16;:23;1092:27;;1072:164;;;1167:12;-1:-1:-1;;;;;1144:35:0;:16;1161:1;1144:19;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1144:19:0;:35;1140:85;;;-1:-1:-1;1206:4:0;;997:268;-1:-1:-1;;997:268:0:o;1140:85::-;1121:3;;;;:::i;:::-;;;;1072:164;;;-1:-1:-1;1253:5:0;;997:268;-1:-1:-1;;997:268:0:o;3944:367::-;3982:7;4032:10;;4020:5;:8;;-1:-1:-1;;;;;;;;;;;4020:8:0;4015:1;4009:8;;-1:-1:-1;;;;;;;;;;;4009:8:0;:19;;4020:8;4009:19;:::i;:::-;:33;4001:63;;;;-1:-1:-1;;;4001:63:0;;6662:2:1;4001:63:0;;;6644:21:1;6701:2;6681:18;;;6674:30;-1:-1:-1;;;6720:18:1;;;6713:47;6777:18;;4001:63:0;6460:341:1;4001:63:0;4100:2;4082:14;:12;:14::i;:::-;:20;;4074:50;;;;-1:-1:-1;;;4074:50:0;;7008:2:1;4074:50:0;;;6990:21:1;7047:2;7027:18;;;7020:30;-1:-1:-1;;;7066:18:1;;;7059:47;7123:18;;4074:50:0;6806:341:1;4074:50:0;4159:5;:8;;-1:-1:-1;;;;;;;;;;;4159:8:0;4154:1;4159:8;4148;-1:-1:-1;;;;;;;;;;;4148:8:0;:19;4144:161;;;-1:-1:-1;4190:1:0;;3944:367::o;4144:161::-;4223:5;:8;;-1:-1:-1;;;;;;;;;;;4223:8:0;4218:1;4223:8;4212;-1:-1:-1;;;;;;;;;;;4212:8:0;:19;4208:97;;;-1:-1:-1;4254:1:0;;3944:367::o;4208:97::-;-1:-1:-1;4293:1:0;;3944:367::o;2919:248::-;3027:16;:23;3013:11;:37;;;2960:7;3082:10;;2960:7;;;;3082:16;;3095:3;3082:16;:::i;:::-;3081:32;;;;:::i;:::-;3061:52;2919:248;-1:-1:-1;;2919:248:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;407:472::-;449:3;487:5;481:12;514:6;509:3;502:19;539:1;549:162;563:6;560:1;557:13;549:162;;;625:4;681:13;;;677:22;;671:29;653:11;;;649:20;;642:59;578:12;549:162;;;729:6;726:1;723:13;720:87;;;795:1;788:4;779:6;774:3;770:16;766:27;759:38;720:87;-1:-1:-1;861:2:1;840:15;-1:-1:-1;;836:29:1;827:39;;;;868:4;823:50;;407:472;-1:-1:-1;;407:472:1:o;884:362::-;1089:2;1078:9;1071:21;1052:4;1109:45;1150:2;1139:9;1135:18;1127:6;1109:45;:::i;:::-;1185:2;1170:18;;1163:34;;;;-1:-1:-1;1228:2:1;1213:18;1206:34;1101:53;884:362;-1:-1:-1;884:362:1:o;1251:173::-;1319:20;;-1:-1:-1;;;;;1368:31:1;;1358:42;;1348:70;;1414:1;1411;1404:12;1348:70;1251:173;;;:::o;1429:186::-;1488:6;1541:2;1529:9;1520:7;1516:23;1512:32;1509:52;;;1557:1;1554;1547:12;1509:52;1580:29;1599:9;1580:29;:::i;:::-;1570:39;1429:186;-1:-1:-1;;;1429:186:1:o;2162:254::-;2230:6;2238;2291:2;2279:9;2270:7;2266:23;2262:32;2259:52;;;2307:1;2304;2297:12;2259:52;2330:29;2349:9;2330:29;:::i;:::-;2320:39;2406:2;2391:18;;;;2378:32;;-1:-1:-1;;;2162:254:1:o;2421:380::-;2500:1;2496:12;;;;2543;;;2564:61;;2618:4;2610:6;2606:17;2596:27;;2564:61;2671:2;2663:6;2660:14;2640:18;2637:38;2634:161;;;2717:10;2712:3;2708:20;2705:1;2698:31;2752:4;2749:1;2742:15;2780:4;2777:1;2770:15;2634:161;;2421:380;;;:::o;2806:1143::-;2998:4;3027:2;3067;3056:9;3052:18;3097:2;3086:9;3079:21;3120:6;3155;3149:13;3186:6;3178;3171:22;3212:2;3202:12;;3245:2;3234:9;3230:18;3223:25;;3307:2;3297:6;3294:1;3290:14;3279:9;3275:30;3271:39;3345:2;3337:6;3333:15;3366:1;3376:544;3390:6;3387:1;3384:13;3376:544;;;3483:2;3479:7;3467:9;3459:6;3455:22;3451:36;3446:3;3439:49;3517:6;3511:13;3547:4;3590:2;3584:9;3621:2;3613:6;3606:18;3651:48;3695:2;3687:6;3683:15;3669:12;3651:48;:::i;:::-;3742:11;;;3736:18;3719:15;;;3712:43;3798:11;;;3792:18;3775:15;;;3768:43;;;;-1:-1:-1;3898:12:1;;;;3637:62;-1:-1:-1;3863:15:1;;;;3412:1;3405:9;3376:544;;;-1:-1:-1;3937:6:1;;2806:1143;-1:-1:-1;;;;;;;;2806:1143:1:o;3954:877::-;4167:2;4219:21;;;4289:13;;4192:18;;;4311:22;;;4138:4;;4167:2;4352;;4370:18;;;;4411:15;;;4138:4;4454:351;4468:6;4465:1;4462:13;4454:351;;;4527:13;;4569:9;;-1:-1:-1;;;;;4565:35:1;4553:48;;4655:11;;;4649:18;4642:26;4635:34;4621:12;;;4614:56;4710:11;;4704:18;4690:12;;;4683:40;4752:4;4743:14;;;;4780:15;;;;4597:1;4483:9;4454:351;;;-1:-1:-1;4822:3:1;;3954:877;-1:-1:-1;;;;;;;3954:877:1:o;5528:127::-;5589:10;5584:3;5580:20;5577:1;5570:31;5620:4;5617:1;5610:15;5644:4;5641:1;5634:15;5660:128;5700:3;5731:1;5727:6;5724:1;5721:13;5718:39;;;5737:18;;:::i;:::-;-1:-1:-1;5773:9:1;;5660:128::o;5793:127::-;5854:10;5849:3;5845:20;5842:1;5835:31;5885:4;5882:1;5875:15;5909:4;5906:1;5899:15;5925:135;5964:3;-1:-1:-1;;5985:17:1;;5982:43;;;6005:18;;:::i;:::-;-1:-1:-1;6052:1:1;6041:13;;5925:135::o;6065:168::-;6105:7;6171:1;6167;6163:6;6159:14;6156:1;6153:21;6148:1;6141:9;6134:17;6130:45;6127:71;;;6178:18;;:::i;:::-;-1:-1:-1;6218:9:1;;6065:168::o;6238:217::-;6278:1;6304;6294:132;;6348:10;6343:3;6339:20;6336:1;6329:31;6383:4;6380:1;6373:15;6411:4;6408:1;6401:15;6294:132;-1:-1:-1;6440:9:1;;6238:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [57, 5613],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8911BE30 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8911BE30 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xE8F7D8F6 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xED8B6B31 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0xFF91BB45 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2436E06B EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3477EE2E EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x4DF3A6FE EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x875DEA03 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x1E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x2A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x141 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xD90 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0x141 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xF2 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x217 SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x243 SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x290 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x265 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x290 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x273 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2B0 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP3 POP PUSH32 0x466D9FB4DE5473511CC3BD190DFD3E522E783C9165F3D5CC44E6C2DA140E98B SWAP2 POP PUSH2 0x2E4 SWAP1 DUP4 SWAP1 PUSH2 0xE17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2F9 PUSH2 0x5CF JUMP JUMPDEST POP DUP1 SWAP2 POP POP PUSH32 0x1927B141F460490E7769A6039FDB226783CC07DEB0B34B733289FFA4ED65FCED DUP2 PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x33A PUSH2 0x946 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH32 0xF5A14047B2C5509302998B7DA5CCBF90331D63E4D300467EEB31443C9FF640C9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x373 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP3 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x3CC DUP3 PUSH2 0xAD0 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA1030B71032B634B3B4B13632903B37BA32B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP3 SWAP1 SSTORE DUP2 EQ ISZERO PUSH2 0x536 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x4D8 SWAP1 DUP5 SWAP1 PUSH2 0xF12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 SLOAD PUSH2 0x4EB SWAP1 PUSH1 0x1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x2 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x51D JUMPI PUSH2 0x51D PUSH2 0xF2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x2 EQ ISZERO PUSH2 0x93 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFBD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x586 SWAP1 DUP5 SWAP1 PUSH2 0xF12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 SLOAD PUSH2 0x599 SWAP1 PUSH1 0x1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x2 SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFBD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x51D JUMPI PUSH2 0x51D PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x5DE PUSH1 0x6 PUSH1 0x0 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x732 JUMPI PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x611 JUMPI PUSH2 0x611 PUSH2 0xF2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0x0 PUSH1 0x5 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x654 JUMPI PUSH2 0x654 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD DUP2 KECCAK256 SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO DUP4 MSTORE PUSH1 0x5 DUP1 SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 PUSH1 0x3 SWAP3 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x6A8 JUMPI PUSH2 0x6A8 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD SWAP1 SWAP6 MSTORE DUP7 SLOAD DUP1 DUP7 ADD DUP9 SSTORE SWAP7 DUP3 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x2 SWAP1 SWAP8 MUL ADD DUP1 SLOAD SWAP2 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP7 SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR DUP2 SSTORE SWAP2 SWAP1 SWAP3 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x72A DUP2 PUSH2 0xF40 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5E7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x1 SLOAD PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x756 JUMPI PUSH2 0x756 PUSH2 0xF2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x64 PUSH2 0x774 SWAP2 SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x77E SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x791 JUMPI PUSH2 0x791 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 PUSH1 0x3 SWAP1 SWAP3 MUL ADD ADD SSTORE DUP1 PUSH2 0x7AF DUP2 PUSH2 0xF40 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x736 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x2 DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x839 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP4 DUP6 ADD MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7DD JUMP JUMPDEST POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x938 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x893 SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8BF SWAP1 PUSH2 0xDDC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x90C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x90C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x860 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x955 PUSH2 0xB3A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x961 PUSH2 0x5CF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 EQ ISZERO PUSH2 0x9E7 JUMPI DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x986 JUMPI PUSH2 0x986 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9A7 JUMPI PUSH2 0x9A7 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP2 POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x9C8 JUMPI PUSH2 0x9C8 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP3 SWAP10 SWAP2 SWAP9 POP SWAP2 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH1 0x2 EQ ISZERO PUSH2 0xA45 JUMPI DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA03 JUMPI PUSH2 0xA03 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP3 POP DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xA24 JUMPI PUSH2 0xA24 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP2 POP DUP5 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x9C8 JUMPI PUSH2 0x9C8 PUSH2 0xF2A JUMP JUMPDEST DUP6 PUSH1 0x3 EQ ISZERO PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x497473206120746965 PUSH1 0xB8 SHL DUP2 MSTORE POP SWAP4 POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA85 JUMPI PUSH2 0xA85 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP2 POP DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAA6 JUMPI PUSH2 0xAA6 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD SWAP4 SWAP10 SWAP2 SWAP9 POP SWAP3 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xB31 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAFB JUMPI PUSH2 0xAFB PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB1F JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xB29 DUP2 PUSH2 0xF40 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAD4 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFBD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x22B632B1BA34B7B7103737BA103330B4B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x3C PUSH2 0xBBC PUSH2 0xC70 JUMP JUMPDEST LT ISZERO PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7420456E6F75676820766F74657273 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x40C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFBD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD GT ISZERO PUSH2 0xC34 JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xF9D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xFBD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD GT ISZERO PUSH2 0xC6A JUMPI POP PUSH1 0x2 SWAP1 JUMP JUMPDEST POP PUSH1 0x3 SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0xC8B SWAP1 PUSH1 0x64 PUSH2 0xF5B JUMP JUMPDEST PUSH2 0xC95 SWAP2 SWAP1 PUSH2 0xF7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x2 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xCE5 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x0 PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x2 ADD PUSH2 0xCC0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD28 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xD0C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD62 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDAB DUP3 PUSH2 0xD74 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCE DUP4 PUSH2 0xD74 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDF0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xE11 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE8A JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0x60 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0xE64 DUP3 DUP8 ADD DUP3 PUSH2 0xD02 JUMP JUMPDEST DUP4 DUP12 ADD MLOAD DUP8 DUP13 ADD MSTORE SWAP3 DUP10 ADD MLOAD SWAP6 DUP10 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE3E JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEEF JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD ISZERO ISZERO DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEB5 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF25 JUMPI PUSH2 0xF25 PUSH2 0xEFC JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xF54 JUMPI PUSH2 0xF54 PUSH2 0xEFC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF75 JUMPI PUSH2 0xF75 PUSH2 0xEFC JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID 0xAB 0xD6 0xE7 0xCB POP SWAP9 0x4F 0xF9 0xC2 RETURN 0xE1 DUP11 0x26 PUSH1 0xC3 CALLDATALOAD RETURNDATASIZE 0xAD DELEGATECALL 0xE3 0x29 SAR 0xEE 0xB2 PUSH22 0xDAE2CD1E44FE0591DA3FD0782E51C6B3986E9E672FD5 PUSH7 0x868E71F3DBC2D6 0xC2 0xCD PUSH16 0xBB3E361AF2A7A2646970667358221220 DUP15 PUSH31 0x747C7DF63F7613C04FA9D3FBD7D05D121CBCA246675B54363FC5609E06CB64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [57, 5613],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [57, 5613],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [57, 5613],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [57, 5613],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [57, 5613],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [57, 5613],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [57, 5613],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [57, 5613],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [57, 5613],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8911BE30"
    },
    "38": {
      "fn": null,
      "offset": [57, 5613],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8911BE30"
    },
    "49": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "53": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA3EC138D"
    },
    "60": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "64": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE8F7D8F6"
    },
    "71": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x166"
    },
    "75": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0xED8B6B31"
    },
    "82": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x179"
    },
    "86": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFF91BB45"
    },
    "93": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A7"
    },
    "97": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [57, 5613],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2436E06B"
    },
    "109": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3477EE2E"
    },
    "120": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "124": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4DF3A6FE"
    },
    "131": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "135": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH4",
      "path": "0",
      "value": "0x875DEA03"
    },
    "142": {
      "fn": null,
      "offset": [57, 5613],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "146": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [57, 5613],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [57, 5613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [57, 5613],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [57, 5613],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "offset": [257, 291],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [257, 291],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "156": {
      "fn": null,
      "offset": [257, 291],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6"
    },
    "159": {
      "fn": null,
      "offset": [257, 291],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "160": {
      "fn": null,
      "offset": [257, 291],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "162": {
      "fn": null,
      "offset": [257, 291],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE9"
    },
    "165": {
      "fn": null,
      "jump": "i",
      "offset": [257, 291],
      "op": "JUMP",
      "path": "0"
    },
    "166": {
      "fn": null,
      "offset": [257, 291],
      "op": "JUMPDEST",
      "path": "0"
    },
    "167": {
      "fn": null,
      "offset": [257, 291],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA"
    },
    "170": {
      "fn": null,
      "jump": "i",
      "offset": [257, 291],
      "op": "JUMP",
      "path": "0"
    },
    "171": {
      "fn": null,
      "offset": [257, 291],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [257, 291],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "174": {
      "fn": null,
      "offset": [257, 291],
      "op": "MLOAD",
      "path": "0"
    },
    "175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "181": {
      "op": "SHL"
    },
    "182": {
      "op": "SUB"
    },
    "183": {
      "op": "SWAP1"
    },
    "184": {
      "op": "SWAP2"
    },
    "185": {
      "op": "AND"
    },
    "186": {
      "op": "DUP2"
    },
    "187": {
      "op": "MSTORE"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "190": {
      "op": "ADD"
    },
    "191": {
      "offset": [257, 291],
      "op": "JUMPDEST",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [257, 291],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "194": {
      "fn": null,
      "offset": [257, 291],
      "op": "MLOAD",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [257, 291],
      "op": "DUP1",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [257, 291],
      "op": "SWAP2",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [257, 291],
      "op": "SUB",
      "path": "0"
    },
    "198": {
      "fn": null,
      "offset": [257, 291],
      "op": "SWAP1",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [257, 291],
      "op": "RETURN",
      "path": "0"
    },
    "200": {
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB"
    },
    "204": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6"
    },
    "207": {
      "fn": null,
      "offset": [131, 160],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "210": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE9"
    },
    "213": {
      "fn": null,
      "jump": "i",
      "offset": [131, 160],
      "op": "JUMP",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "215": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E4"
    },
    "218": {
      "fn": null,
      "jump": "i",
      "offset": [131, 160],
      "op": "JUMP",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "220": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "222": {
      "fn": null,
      "offset": [131, 160],
      "op": "MLOAD",
      "path": "0"
    },
    "223": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF"
    },
    "226": {
      "fn": null,
      "offset": [131, 160],
      "op": "SWAP4",
      "path": "0"
    },
    "227": {
      "fn": null,
      "offset": [131, 160],
      "op": "SWAP3",
      "path": "0"
    },
    "228": {
      "fn": null,
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4F"
    },
    "233": {
      "fn": null,
      "jump": "i",
      "offset": [131, 160],
      "op": "JUMP",
      "path": "0"
    },
    "234": {
      "fn": "President.getCandidatesResults",
      "offset": [1946, 2126],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "President.getCandidatesResults",
      "offset": [1946, 2126],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "238": {
      "fn": "President.getCandidatesResults",
      "offset": [1946, 2126],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "241": {
      "fn": "President.getCandidatesResults",
      "jump": "i",
      "offset": [1946, 2126],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "President.getCandidatesResults",
      "offset": [1946, 2126],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "President.getCandidatesResults",
      "offset": [1946, 2126],
      "op": "STOP",
      "path": "0"
    },
    "244": {
      "fn": "President.getVotersResults",
      "offset": [1767, 1938],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "fn": "President.getVotersResults",
      "offset": [1767, 1938],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "248": {
      "fn": "President.getVotersResults",
      "offset": [1767, 1938],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EF"
    },
    "251": {
      "fn": "President.getVotersResults",
      "jump": "i",
      "offset": [1767, 1938],
      "op": "JUMP",
      "path": "0"
    },
    "252": {
      "fn": "President.sendData",
      "offset": [5434, 5611],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "President.sendData",
      "offset": [5434, 5611],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "256": {
      "fn": "President.sendData",
      "offset": [5434, 5611],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "259": {
      "fn": "President.sendData",
      "jump": "i",
      "offset": [5434, 5611],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "offset": [166, 205],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "264": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "267": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "268": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "270": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD90"
    },
    "273": {
      "fn": "President.sendData",
      "jump": "i",
      "offset": [166, 205],
      "op": "JUMP",
      "path": "0"
    },
    "274": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "JUMPDEST",
      "path": "0"
    },
    "275": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "277": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "279": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "MSTORE",
      "path": "0"
    },
    "280": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "282": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SWAP1",
      "path": "0"
    },
    "283": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "DUP2",
      "path": "0"
    },
    "284": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "MSTORE",
      "path": "0"
    },
    "285": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "287": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SWAP1",
      "path": "0"
    },
    "288": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "KECCAK256",
      "path": "0"
    },
    "289": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SLOAD",
      "path": "0"
    },
    "291": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "293": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SWAP1",
      "path": "0"
    },
    "294": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SWAP2",
      "path": "0"
    },
    "295": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "ADD",
      "path": "0"
    },
    "296": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SLOAD",
      "path": "0"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "offset": [166, 205],
      "op": "DUP3",
      "path": "0"
    },
    "306": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "AND",
      "path": "0"
    },
    "307": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SWAP2",
      "path": "0"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "312": {
      "op": "SHL"
    },
    "313": {
      "offset": [166, 205],
      "op": "SWAP1",
      "path": "0"
    },
    "314": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "DIV",
      "path": "0"
    },
    "315": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "317": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "AND",
      "path": "0"
    },
    "318": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "SWAP1",
      "path": "0"
    },
    "319": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "DUP4",
      "path": "0"
    },
    "320": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "JUMP",
      "path": "0"
    },
    "321": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "JUMPDEST",
      "path": "0"
    },
    "322": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "324": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "DUP1",
      "path": "0"
    },
    "325": {
      "fn": "President.sendData",
      "offset": [166, 205],
      "op": "MLOAD",
      "path": "0"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "332": {
      "op": "SHL"
    },
    "333": {
      "op": "SUB"
    },
    "334": {
      "op": "SWAP1"
    },
    "335": {
      "op": "SWAP5"
    },
    "336": {
      "op": "AND"
    },
    "337": {
      "op": "DUP5"
    },
    "338": {
      "op": "MSTORE"
    },
    "339": {
      "op": "SWAP2"
    },
    "340": {
      "op": "ISZERO"
    },
    "341": {
      "op": "ISZERO"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "344": {
      "op": "DUP5"
    },
    "345": {
      "op": "ADD"
    },
    "346": {
      "op": "MSTORE"
    },
    "347": {
      "op": "SWAP1"
    },
    "348": {
      "op": "DUP3"
    },
    "349": {
      "op": "ADD"
    },
    "350": {
      "op": "MSTORE"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "offset": [166, 205],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF"
    },
    "357": {
      "op": "JUMP"
    },
    "358": {
      "offset": [297, 325],
      "op": "JUMPDEST",
      "path": "0"
    },
    "359": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH2",
      "path": "0",
      "value": "0x141"
    },
    "362": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "365": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "366": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "368": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE9"
    },
    "371": {
      "fn": "President.sendData",
      "jump": "i",
      "offset": [297, 325],
      "op": "JUMP",
      "path": "0"
    },
    "372": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "JUMPDEST",
      "path": "0"
    },
    "373": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH2",
      "path": "0",
      "value": "0x380"
    },
    "376": {
      "fn": "President.sendData",
      "jump": "i",
      "offset": [297, 325],
      "op": "JUMP",
      "path": "0"
    },
    "377": {
      "offset": [211, 251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "378": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x199"
    },
    "381": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "384": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "385": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "387": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE9"
    },
    "390": {
      "fn": "President.sendData",
      "jump": "i",
      "offset": [211, 251],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "394": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "396": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "MSTORE",
      "path": "0"
    },
    "397": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "399": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "SWAP1",
      "path": "0"
    },
    "400": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "DUP2",
      "path": "0"
    },
    "401": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "MSTORE",
      "path": "0"
    },
    "402": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "404": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "SWAP1",
      "path": "0"
    },
    "405": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "KECCAK256",
      "path": "0"
    },
    "406": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "SLOAD",
      "path": "0"
    },
    "407": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "DUP2",
      "path": "0"
    },
    "408": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "JUMP",
      "path": "0"
    },
    "409": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "JUMPDEST",
      "path": "0"
    },
    "410": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "412": {
      "fn": "President.sendData",
      "offset": [211, 251],
      "op": "MLOAD",
      "path": "0"
    },
    "413": {
      "op": "SWAP1"
    },
    "414": {
      "op": "DUP2"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "418": {
      "op": "ADD"
    },
    "419": {
      "offset": [211, 251],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF"
    },
    "422": {
      "op": "JUMP"
    },
    "423": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "JUMPDEST",
      "path": "0"
    },
    "424": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "427": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "430": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "431": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "433": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB2"
    },
    "436": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2191, 2872],
      "op": "JUMP",
      "path": "0"
    },
    "437": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3"
    },
    "441": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2191, 2872],
      "op": "JUMP",
      "path": "0"
    },
    "442": {
      "offset": [257, 291],
      "op": "JUMPDEST",
      "path": "0"
    },
    "443": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "445": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "DUP2",
      "path": "0"
    },
    "446": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "DUP2",
      "path": "0"
    },
    "447": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "SLOAD",
      "path": "0"
    },
    "448": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "DUP2",
      "path": "0"
    },
    "449": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "LT",
      "path": "0"
    },
    "450": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA"
    },
    "453": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "JUMPI",
      "path": "0"
    },
    "454": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "456": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "DUP1",
      "path": "0"
    },
    "457": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "REVERT",
      "path": "0"
    },
    "458": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "JUMPDEST",
      "path": "0"
    },
    "459": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "461": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "SWAP2",
      "path": "0"
    },
    "462": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "DUP3",
      "path": "0"
    },
    "463": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "MSTORE",
      "path": "0"
    },
    "464": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "466": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "SWAP1",
      "path": "0"
    },
    "467": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "SWAP2",
      "path": "0"
    },
    "468": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "KECCAK256",
      "path": "0"
    },
    "469": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "ADD",
      "path": "0"
    },
    "470": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "SLOAD",
      "path": "0"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "477": {
      "op": "SHL"
    },
    "478": {
      "op": "SUB"
    },
    "479": {
      "offset": [257, 291],
      "op": "AND",
      "path": "0"
    },
    "480": {
      "fn": "President.castVote",
      "offset": [257, 291],
      "op": "SWAP1",
      "path": "0"
    },
    "481": {
      "op": "POP"
    },
    "482": {
      "offset": [257, 291],
      "op": "DUP2",
      "path": "0"
    },
    "483": {
      "fn": "President.castVote",
      "jump": "o",
      "offset": [257, 291],
      "op": "JUMP",
      "path": "0"
    },
    "484": {
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "485": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "487": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "488": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "489": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SLOAD",
      "path": "0"
    },
    "490": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "491": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "LT",
      "path": "0"
    },
    "492": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F4"
    },
    "495": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPI",
      "path": "0"
    },
    "496": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "498": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "499": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "REVERT",
      "path": "0"
    },
    "500": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "501": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "502": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "504": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MSTORE",
      "path": "0"
    },
    "505": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "507": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "509": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "KECCAK256",
      "path": "0"
    },
    "510": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "511": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "513": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MUL",
      "path": "0"
    },
    "514": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "515": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "517": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "518": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "519": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "520": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "521": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "522": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "524": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "525": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "526": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SLOAD",
      "path": "0"
    },
    "527": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x217"
    },
    "530": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "531": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDC"
    },
    "534": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [131, 160],
      "op": "JUMP",
      "path": "0"
    },
    "535": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "536": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "537": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "539": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "540": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "542": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "543": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "544": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DIV",
      "path": "0"
    },
    "545": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MUL",
      "path": "0"
    },
    "546": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "548": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "549": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "551": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MLOAD",
      "path": "0"
    },
    "552": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "553": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "554": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "555": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "557": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MSTORE",
      "path": "0"
    },
    "558": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "559": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP3",
      "path": "0"
    },
    "560": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "561": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "562": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "563": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "564": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MSTORE",
      "path": "0"
    },
    "565": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "567": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "568": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP3",
      "path": "0"
    },
    "569": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SLOAD",
      "path": "0"
    },
    "571": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "574": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "575": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDC"
    },
    "578": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [131, 160],
      "op": "JUMP",
      "path": "0"
    },
    "579": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "581": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ISZERO",
      "path": "0"
    },
    "582": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "585": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPI",
      "path": "0"
    },
    "586": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "587": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "589": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "LT",
      "path": "0"
    },
    "590": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x265"
    },
    "593": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPI",
      "path": "0"
    },
    "594": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "597": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "598": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP4",
      "path": "0"
    },
    "599": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SLOAD",
      "path": "0"
    },
    "600": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DIV",
      "path": "0"
    },
    "601": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MUL",
      "path": "0"
    },
    "602": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP4",
      "path": "0"
    },
    "603": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MSTORE",
      "path": "0"
    },
    "604": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "605": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "607": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "608": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "609": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290"
    },
    "612": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMP",
      "path": "0"
    },
    "613": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "614": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP3",
      "path": "0"
    },
    "615": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "616": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "617": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "618": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "620": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MSTORE",
      "path": "0"
    },
    "621": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "623": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "625": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "KECCAK256",
      "path": "0"
    },
    "626": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "627": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "628": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "629": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SLOAD",
      "path": "0"
    },
    "630": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP2",
      "path": "0"
    },
    "631": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "MSTORE",
      "path": "0"
    },
    "632": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "633": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "635": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "636": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "637": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "639": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "640": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "641": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP4",
      "path": "0"
    },
    "642": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "GT",
      "path": "0"
    },
    "643": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH2",
      "path": "0",
      "value": "0x273"
    },
    "646": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPI",
      "path": "0"
    },
    "647": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP3",
      "path": "0"
    },
    "648": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "649": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SUB",
      "path": "0"
    },
    "650": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "652": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "AND",
      "path": "0"
    },
    "653": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP3",
      "path": "0"
    },
    "654": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "655": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP2",
      "path": "0"
    },
    "656": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "JUMPDEST",
      "path": "0"
    },
    "657": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "658": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "659": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "660": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "661": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "662": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "663": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "664": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "666": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "667": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SLOAD",
      "path": "0"
    },
    "668": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "669": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP1",
      "path": "0"
    },
    "670": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "672": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "ADD",
      "path": "0"
    },
    "673": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SLOAD",
      "path": "0"
    },
    "674": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "SWAP1",
      "path": "0"
    },
    "675": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "POP",
      "path": "0"
    },
    "676": {
      "fn": "President.castVote",
      "offset": [131, 160],
      "op": "DUP4",
      "path": "0"
    },
    "677": {
      "fn": "President.castVote",
      "jump": "o",
      "offset": [131, 160],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "fn": "President.getCandidatesResults",
      "offset": [1946, 2126],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "President.getCandidatesResults",
      "offset": [1995, 2028],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "681": {
      "fn": "President.getCandidatesResults",
      "offset": [2059, 2073],
      "op": "PUSH2",
      "path": "0",
      "statement": 0,
      "value": "0x2B0"
    },
    "684": {
      "fn": "President.getCandidatesResults",
      "offset": [2059, 2071],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CF"
    },
    "687": {
      "fn": "President.getCandidatesResults",
      "jump": "i",
      "offset": [2059, 2073],
      "op": "JUMP",
      "path": "0"
    },
    "688": {
      "fn": "President.getCandidatesResults",
      "offset": [2059, 2073],
      "op": "JUMPDEST",
      "path": "0"
    },
    "689": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "691": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "MLOAD",
      "path": "0"
    },
    "692": {
      "fn": "President.getCandidatesResults",
      "offset": [2038, 2073],
      "op": "SWAP1",
      "path": "0"
    },
    "693": {
      "fn": "President.getCandidatesResults",
      "offset": [2038, 2073],
      "op": "SWAP3",
      "path": "0"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "PUSH32",
      "path": "0",
      "value": "0x466D9FB4DE5473511CC3BD190DFD3E522E783C9165F3D5CC44E6C2DA140E98B"
    },
    "728": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "op": "POP"
    },
    "730": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E4"
    },
    "733": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "SWAP1",
      "path": "0"
    },
    "734": {
      "fn": "President.getCandidatesResults",
      "offset": [2038, 2073],
      "op": "DUP4",
      "path": "0"
    },
    "735": {
      "fn": "President.getCandidatesResults",
      "offset": [2038, 2073],
      "op": "SWAP1",
      "path": "0"
    },
    "736": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE17"
    },
    "739": {
      "fn": "President.getCandidatesResults",
      "jump": "i",
      "offset": [2089, 2119],
      "op": "JUMP",
      "path": "0"
    },
    "740": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "JUMPDEST",
      "path": "0"
    },
    "741": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "743": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "MLOAD",
      "path": "0"
    },
    "744": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "DUP1",
      "path": "0"
    },
    "745": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "SWAP2",
      "path": "0"
    },
    "746": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "SUB",
      "path": "0"
    },
    "747": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "SWAP1",
      "path": "0"
    },
    "748": {
      "fn": "President.getCandidatesResults",
      "offset": [2089, 2119],
      "op": "LOG1",
      "path": "0"
    },
    "749": {
      "fn": "President.getCandidatesResults",
      "offset": [1985, 2126],
      "op": "POP",
      "path": "0"
    },
    "750": {
      "fn": "President.getCandidatesResults",
      "jump": "o",
      "offset": [1946, 2126],
      "op": "JUMP",
      "path": "0"
    },
    "751": {
      "fn": "President.getVotersResults",
      "offset": [1767, 1938],
      "op": "JUMPDEST",
      "path": "0"
    },
    "752": {
      "fn": "President.getVotersResults",
      "offset": [1812, 1842],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "754": {
      "fn": "President.getVotersResults",
      "offset": [1874, 1888],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x2F9"
    },
    "757": {
      "fn": "President.getVotersResults",
      "offset": [1874, 1886],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CF"
    },
    "760": {
      "fn": "President.getVotersResults",
      "jump": "i",
      "offset": [1874, 1888],
      "op": "JUMP",
      "path": "0"
    },
    "761": {
      "fn": "President.getVotersResults",
      "offset": [1874, 1888],
      "op": "JUMPDEST",
      "path": "0"
    },
    "762": {
      "fn": "President.getVotersResults",
      "offset": [1852, 1888],
      "op": "POP",
      "path": "0"
    },
    "763": {
      "fn": "President.getVotersResults",
      "offset": [1852, 1888],
      "op": "DUP1",
      "path": "0"
    },
    "764": {
      "fn": "President.getVotersResults",
      "offset": [1852, 1888],
      "op": "SWAP2",
      "path": "0"
    },
    "765": {
      "fn": "President.getVotersResults",
      "offset": [1852, 1888],
      "op": "POP",
      "path": "0"
    },
    "766": {
      "fn": "President.getVotersResults",
      "offset": [1852, 1888],
      "op": "POP",
      "path": "0"
    },
    "767": {
      "fn": "President.getVotersResults",
      "offset": [1904, 1931],
      "op": "PUSH32",
      "path": "0",
      "statement": 3,
      "value": "0x1927B141F460490E7769A6039FDB226783CC07DEB0B34B733289FFA4ED65FCED"
    },
    "800": {
      "fn": "President.getVotersResults",
      "offset": [1915, 1930],
      "op": "DUP2",
      "path": "0"
    },
    "801": {
      "fn": "President.getVotersResults",
      "offset": [1904, 1931],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "803": {
      "fn": "President.getVotersResults",
      "offset": [1904, 1931],
      "op": "MLOAD",
      "path": "0"
    },
    "804": {
      "fn": "President.getVotersResults",
      "offset": [1904, 1931],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E4"
    },
    "807": {
      "fn": "President.getVotersResults",
      "offset": [1904, 1931],
      "op": "SWAP2",
      "path": "0"
    },
    "808": {
      "fn": "President.getVotersResults",
      "offset": [1904, 1931],
      "op": "SWAP1",
      "path": "0"
    },
    "809": {
      "fn": "President.getVotersResults",
      "offset": [1904, 1931],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE98"
    },
    "812": {
      "fn": "President.getVotersResults",
      "jump": "i",
      "offset": [1904, 1931],
      "op": "JUMP",
      "path": "0"
    },
    "813": {
      "fn": "President.sendData",
      "offset": [5434, 5611],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "President.sendData",
      "offset": [5472, 5490],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "816": {
      "fn": "President.sendData",
      "offset": [5492, 5507],
      "op": "DUP1",
      "path": "0"
    },
    "817": {
      "fn": "President.sendData",
      "offset": [5509, 5523],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "819": {
      "fn": "President.sendData",
      "offset": [5527, 5543],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33A"
    },
    "822": {
      "fn": "President.sendData",
      "offset": [5527, 5541],
      "op": "PUSH2",
      "path": "0",
      "value": "0x946"
    },
    "825": {
      "fn": "President.sendData",
      "jump": "i",
      "offset": [5527, 5543],
      "op": "JUMP",
      "path": "0"
    },
    "826": {
      "fn": "President.sendData",
      "offset": [5527, 5543],
      "op": "JUMPDEST",
      "path": "0"
    },
    "827": {
      "fn": "President.sendData",
      "offset": [5471, 5543],
      "op": "SWAP3",
      "path": "0"
    },
    "828": {
      "fn": "President.sendData",
      "offset": [5471, 5543],
      "op": "POP",
      "path": "0"
    },
    "829": {
      "fn": "President.sendData",
      "offset": [5471, 5543],
      "op": "SWAP3",
      "path": "0"
    },
    "830": {
      "fn": "President.sendData",
      "offset": [5471, 5543],
      "op": "POP",
      "path": "0"
    },
    "831": {
      "fn": "President.sendData",
      "offset": [5471, 5543],
      "op": "SWAP3",
      "path": "0"
    },
    "832": {
      "fn": "President.sendData",
      "offset": [5471, 5543],
      "op": "POP",
      "path": "0"
    },
    "833": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "PUSH32",
      "path": "0",
      "statement": 4,
      "value": "0xF5A14047B2C5509302998B7DA5CCBF90331D63E4D300467EEB31443C9FF640C9"
    },
    "866": {
      "fn": "President.sendData",
      "offset": [5573, 5577],
      "op": "DUP4",
      "path": "0"
    },
    "867": {
      "fn": "President.sendData",
      "offset": [5579, 5586],
      "op": "DUP4",
      "path": "0"
    },
    "868": {
      "fn": "President.sendData",
      "offset": [5588, 5594],
      "op": "DUP4",
      "path": "0"
    },
    "869": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "871": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "MLOAD",
      "path": "0"
    },
    "872": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "PUSH2",
      "path": "0",
      "value": "0x373"
    },
    "875": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "SWAP4",
      "path": "0"
    },
    "876": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "SWAP3",
      "path": "0"
    },
    "877": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "SWAP2",
      "path": "0"
    },
    "878": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4F"
    },
    "882": {
      "fn": "President.sendData",
      "jump": "i",
      "offset": [5558, 5595],
      "op": "JUMP",
      "path": "0"
    },
    "883": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "JUMPDEST",
      "path": "0"
    },
    "884": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "886": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "MLOAD",
      "path": "0"
    },
    "887": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "DUP1",
      "path": "0"
    },
    "888": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "SWAP2",
      "path": "0"
    },
    "889": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "SUB",
      "path": "0"
    },
    "890": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "SWAP1",
      "path": "0"
    },
    "891": {
      "fn": "President.sendData",
      "offset": [5558, 5595],
      "op": "LOG1",
      "path": "0"
    },
    "892": {
      "fn": "President.sendData",
      "offset": [5461, 5611],
      "op": "POP",
      "path": "0"
    },
    "893": {
      "fn": "President.sendData",
      "offset": [5461, 5611],
      "op": "POP",
      "path": "0"
    },
    "894": {
      "fn": "President.sendData",
      "offset": [5461, 5611],
      "op": "POP",
      "path": "0"
    },
    "895": {
      "fn": "President.sendData",
      "jump": "o",
      "offset": [5434, 5611],
      "op": "JUMP",
      "path": "0"
    },
    "896": {
      "offset": [297, 325],
      "op": "JUMPDEST",
      "path": "0"
    },
    "897": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "899": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DUP2",
      "path": "0"
    },
    "900": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DUP2",
      "path": "0"
    },
    "901": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SLOAD",
      "path": "0"
    },
    "902": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DUP2",
      "path": "0"
    },
    "903": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "LT",
      "path": "0"
    },
    "904": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH2",
      "path": "0",
      "value": "0x390"
    },
    "907": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "JUMPI",
      "path": "0"
    },
    "908": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "910": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DUP1",
      "path": "0"
    },
    "911": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "REVERT",
      "path": "0"
    },
    "912": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "JUMPDEST",
      "path": "0"
    },
    "913": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "915": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP2",
      "path": "0"
    },
    "916": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DUP3",
      "path": "0"
    },
    "917": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "MSTORE",
      "path": "0"
    },
    "918": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "920": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP1",
      "path": "0"
    },
    "921": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP2",
      "path": "0"
    },
    "922": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "KECCAK256",
      "path": "0"
    },
    "923": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "925": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP1",
      "path": "0"
    },
    "926": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP2",
      "path": "0"
    },
    "927": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "MUL",
      "path": "0"
    },
    "928": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "ADD",
      "path": "0"
    },
    "929": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DUP1",
      "path": "0"
    },
    "930": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SLOAD",
      "path": "0"
    },
    "931": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "933": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP1",
      "path": "0"
    },
    "934": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP2",
      "path": "0"
    },
    "935": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "ADD",
      "path": "0"
    },
    "936": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SLOAD",
      "path": "0"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "offset": [297, 325],
      "op": "DUP3",
      "path": "0"
    },
    "946": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "AND",
      "path": "0"
    },
    "947": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP3",
      "path": "0"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "offset": [297, 325],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP2",
      "path": "0"
    },
    "956": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DIV",
      "path": "0"
    },
    "957": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "959": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "AND",
      "path": "0"
    },
    "960": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "SWAP1",
      "path": "0"
    },
    "961": {
      "fn": "President.sendData",
      "offset": [297, 325],
      "op": "DUP4",
      "path": "0"
    },
    "962": {
      "fn": "President.sendData",
      "jump": "o",
      "offset": [297, 325],
      "op": "JUMP",
      "path": "0"
    },
    "963": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "JUMPDEST",
      "path": "0"
    },
    "964": {
      "fn": "President.castVote",
      "offset": [2270, 2283],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x3CC"
    },
    "967": {
      "fn": "President.castVote",
      "offset": [2276, 2282],
      "op": "DUP3",
      "path": "0"
    },
    "968": {
      "fn": "President.castVote",
      "offset": [2270, 2275],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD0"
    },
    "971": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2270, 2283],
      "op": "JUMP",
      "path": "0"
    },
    "972": {
      "branch": 43,
      "fn": "President.castVote",
      "offset": [2270, 2283],
      "op": "JUMPDEST",
      "path": "0"
    },
    "973": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "PUSH2",
      "path": "0",
      "value": "0x415"
    },
    "976": {
      "branch": 43,
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "JUMPI",
      "path": "0"
    },
    "977": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "979": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "MLOAD",
      "path": "0"
    },
    "980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "DUP2",
      "path": "0"
    },
    "988": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "MSTORE",
      "path": "0"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "991": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "993": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "DUP3",
      "path": "0"
    },
    "994": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "ADD",
      "path": "0"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1000": {
      "op": "DUP3"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH21",
      "value": "0x2737BA1030B71032B634B3B4B13632903B37BA32B9"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "1027": {
      "op": "SHL"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1037": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1039": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "MLOAD",
      "path": "0"
    },
    "1040": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "SWAP2",
      "path": "0"
    },
    "1042": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "SUB",
      "path": "0"
    },
    "1043": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "SWAP1",
      "path": "0"
    },
    "1044": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1045": {
      "fn": "President.castVote",
      "offset": [2262, 2309],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "op": "SUB"
    },
    "1054": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "DUP3",
      "path": "0",
      "statement": 6
    },
    "1055": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "AND",
      "path": "0"
    },
    "1056": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1058": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "SWAP1",
      "path": "0"
    },
    "1059": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "DUP2",
      "path": "0"
    },
    "1060": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "MSTORE",
      "path": "0"
    },
    "1061": {
      "fn": "President.castVote",
      "offset": [2328, 2334],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1063": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1065": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "MSTORE",
      "path": "0"
    },
    "1066": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1068": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "SWAP1",
      "path": "0"
    },
    "1069": {
      "fn": "President.castVote",
      "offset": [2328, 2342],
      "op": "KECCAK256",
      "path": "0"
    },
    "1070": {
      "fn": "President.castVote",
      "offset": [2328, 2348],
      "op": "SLOAD",
      "path": "0"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "fn": "President.castVote",
      "offset": [2328, 2348],
      "op": "SWAP1",
      "path": "0"
    },
    "1077": {
      "fn": "President.castVote",
      "offset": [2328, 2348],
      "op": "DIV",
      "path": "0"
    },
    "1078": {
      "fn": "President.castVote",
      "offset": [2328, 2348],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1080": {
      "fn": "President.castVote",
      "offset": [2328, 2348],
      "op": "AND",
      "path": "0"
    },
    "1081": {
      "branch": 44,
      "fn": "President.castVote",
      "offset": [2327, 2348],
      "op": "ISZERO",
      "path": "0"
    },
    "1082": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "PUSH2",
      "path": "0",
      "value": "0x475"
    },
    "1085": {
      "branch": 44,
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "JUMPI",
      "path": "0"
    },
    "1086": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1088": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "MLOAD",
      "path": "0"
    },
    "1089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "DUP2",
      "path": "0"
    },
    "1097": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "MSTORE",
      "path": "0"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1100": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1102": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "DUP3",
      "path": "0"
    },
    "1103": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "ADD",
      "path": "0"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1109": {
      "op": "DUP3"
    },
    "1110": {
      "op": "ADD"
    },
    "1111": {
      "op": "MSTORE"
    },
    "1112": {
      "op": "PUSH13",
      "value": "0x105B1C9958591E481D9BDD1959"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "1128": {
      "op": "SHL"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1131": {
      "op": "DUP3"
    },
    "1132": {
      "op": "ADD"
    },
    "1133": {
      "op": "MSTORE"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40C"
    },
    "1140": {
      "op": "JUMP"
    },
    "1141": {
      "fn": "President.castVote",
      "offset": [2319, 2366],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "op": "SUB"
    },
    "1150": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "DUP3",
      "path": "0",
      "statement": 7
    },
    "1151": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "AND",
      "path": "0"
    },
    "1152": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1154": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "SWAP1",
      "path": "0"
    },
    "1155": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "DUP2",
      "path": "0"
    },
    "1156": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "MSTORE",
      "path": "0"
    },
    "1157": {
      "fn": "President.castVote",
      "offset": [2377, 2383],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1159": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1161": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "MSTORE",
      "path": "0"
    },
    "1162": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1164": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "SWAP1",
      "path": "0"
    },
    "1165": {
      "fn": "President.castVote",
      "offset": [2377, 2391],
      "op": "KECCAK256",
      "path": "0"
    },
    "1166": {
      "fn": "President.castVote",
      "offset": [2377, 2404],
      "op": "DUP1",
      "path": "0"
    },
    "1167": {
      "fn": "President.castVote",
      "offset": [2377, 2404],
      "op": "SLOAD",
      "path": "0"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "op": "NOT"
    },
    "1174": {
      "fn": "President.castVote",
      "offset": [2377, 2404],
      "op": "AND",
      "path": "0"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1179": {
      "op": "SHL"
    },
    "1180": {
      "fn": "President.castVote",
      "offset": [2377, 2404],
      "op": "OR",
      "path": "0"
    },
    "1181": {
      "fn": "President.castVote",
      "offset": [2377, 2404],
      "op": "DUP2",
      "path": "0"
    },
    "1182": {
      "fn": "President.castVote",
      "offset": [2377, 2404],
      "op": "SSTORE",
      "path": "0"
    },
    "1183": {
      "fn": "President.castVote",
      "offset": [2400, 2404],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1185": {
      "fn": "President.castVote",
      "offset": [2414, 2433],
      "op": "SWAP1",
      "path": "0",
      "statement": 8
    },
    "1186": {
      "fn": "President.castVote",
      "offset": [2414, 2433],
      "op": "DUP2",
      "path": "0"
    },
    "1187": {
      "fn": "President.castVote",
      "offset": [2414, 2433],
      "op": "ADD",
      "path": "0"
    },
    "1188": {
      "fn": "President.castVote",
      "offset": [2414, 2446],
      "op": "DUP3",
      "path": "0"
    },
    "1189": {
      "fn": "President.castVote",
      "offset": [2414, 2446],
      "op": "SWAP1",
      "path": "0"
    },
    "1190": {
      "fn": "President.castVote",
      "offset": [2414, 2446],
      "op": "SSTORE",
      "path": "0"
    },
    "1191": {
      "fn": "President.castVote",
      "offset": [2509, 2533],
      "op": "DUP2",
      "path": "0"
    },
    "1192": {
      "branch": 45,
      "fn": "President.castVote",
      "offset": [2509, 2533],
      "op": "EQ",
      "path": "0"
    },
    "1193": {
      "fn": "President.castVote",
      "offset": [2505, 2866],
      "op": "ISZERO",
      "path": "0"
    },
    "1194": {
      "fn": "President.castVote",
      "offset": [2505, 2866],
      "op": "PUSH2",
      "path": "0",
      "value": "0x536"
    },
    "1197": {
      "branch": 45,
      "fn": "President.castVote",
      "offset": [2505, 2866],
      "op": "JUMPI",
      "path": "0"
    },
    "1198": {
      "fn": "President.castVote",
      "offset": [2561, 2562],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "1200": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1202": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "DUP2",
      "path": "0"
    },
    "1203": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "DUP2",
      "path": "0"
    },
    "1204": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "MSTORE",
      "path": "0"
    },
    "1205": {
      "fn": "President.castVote",
      "offset": [2549, 2554],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1207": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1209": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "MSTORE",
      "path": "0"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1212": {
      "op": "DUP1"
    },
    "1213": {
      "op": "MLOAD"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1216": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "1219": {
      "op": "DUP4"
    },
    "1220": {
      "op": "CODECOPY"
    },
    "1221": {
      "op": "DUP2"
    },
    "1222": {
      "op": "MLOAD"
    },
    "1223": {
      "op": "SWAP2"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "DUP1",
      "path": "0"
    },
    "1226": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "SLOAD",
      "path": "0"
    },
    "1227": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "SWAP1",
      "path": "0"
    },
    "1228": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "SWAP2",
      "path": "0"
    },
    "1229": {
      "fn": "President.castVote",
      "offset": [2549, 2557],
      "op": "SWAP1",
      "path": "0"
    },
    "1230": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D8"
    },
    "1233": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "SWAP1",
      "path": "0"
    },
    "1234": {
      "fn": "President.castVote",
      "offset": [2561, 2562],
      "op": "DUP5",
      "path": "0"
    },
    "1235": {
      "fn": "President.castVote",
      "offset": [2561, 2562],
      "op": "SWAP1",
      "path": "0"
    },
    "1236": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF12"
    },
    "1239": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2549, 2562],
      "op": "JUMP",
      "path": "0"
    },
    "1240": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1241": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "SWAP2",
      "path": "0"
    },
    "1243": {
      "fn": "President.castVote",
      "offset": [2549, 2562],
      "op": "SSTORE",
      "path": "0"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "op": "POP"
    },
    "1246": {
      "fn": "President.castVote",
      "offset": [2589, 2599],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1248": {
      "fn": "President.castVote",
      "offset": [2589, 2599],
      "op": "SLOAD",
      "path": "0"
    },
    "1249": {
      "fn": "President.castVote",
      "offset": [2589, 2603],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EB"
    },
    "1252": {
      "fn": "President.castVote",
      "offset": [2589, 2603],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "President.castVote",
      "offset": [2602, 2603],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1255": {
      "fn": "President.castVote",
      "offset": [2589, 2603],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF12"
    },
    "1258": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2589, 2603],
      "op": "JUMP",
      "path": "0"
    },
    "1259": {
      "fn": "President.castVote",
      "offset": [2589, 2603],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1260": {
      "fn": "President.castVote",
      "offset": [2576, 2586],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1262": {
      "fn": "President.castVote",
      "offset": [2576, 2603],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "President.castVote",
      "offset": [2576, 2603],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "President.castVote",
      "offset": [2576, 2603],
      "op": "SSTORE",
      "path": "0"
    },
    "1265": {
      "fn": "President.castVote",
      "offset": [2649, 2650],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "1267": {
      "fn": "President.castVote",
      "offset": [2643, 2651],
      "op": "DUP2",
      "path": "0"
    },
    "1268": {
      "fn": "President.castVote",
      "offset": [2643, 2651],
      "op": "MSTORE",
      "path": "0"
    },
    "1269": {
      "fn": "President.castVote",
      "offset": [2643, 2648],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1271": {
      "fn": "President.castVote",
      "offset": [2643, 2651],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1273": {
      "fn": "President.castVote",
      "offset": [2643, 2651],
      "op": "MSTORE",
      "path": "0"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1276": {
      "op": "DUP1"
    },
    "1277": {
      "op": "MLOAD"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1280": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "1283": {
      "op": "DUP4"
    },
    "1284": {
      "op": "CODECOPY"
    },
    "1285": {
      "op": "DUP2"
    },
    "1286": {
      "op": "MLOAD"
    },
    "1287": {
      "op": "SWAP2"
    },
    "1288": {
      "op": "MSTORE"
    },
    "1289": {
      "fn": "President.castVote",
      "offset": [2643, 2651],
      "op": "SLOAD",
      "path": "0"
    },
    "1290": {
      "fn": "President.castVote",
      "offset": [2617, 2627],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1292": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "DUP1",
      "path": "0"
    },
    "1293": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "SLOAD",
      "path": "0"
    },
    "1294": {
      "fn": "President.castVote",
      "offset": [2643, 2651],
      "op": "SWAP2",
      "path": "0"
    },
    "1295": {
      "fn": "President.castVote",
      "offset": [2643, 2651],
      "op": "SWAP3",
      "path": "0"
    },
    "1296": {
      "fn": "President.castVote",
      "offset": [2617, 2627],
      "op": "SWAP1",
      "path": "0"
    },
    "1297": {
      "fn": "President.castVote",
      "offset": [2617, 2627],
      "op": "SWAP2",
      "path": "0"
    },
    "1298": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51D"
    },
    "1301": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "JUMPI",
      "path": "0"
    },
    "1302": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51D"
    },
    "1305": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "1308": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2617, 2630],
      "op": "JUMP",
      "path": "0"
    },
    "1309": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1310": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "SWAP1",
      "path": "0"
    },
    "1311": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1313": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "MSTORE",
      "path": "0"
    },
    "1314": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1316": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1318": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "KECCAK256",
      "path": "0"
    },
    "1319": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "SWAP1",
      "path": "0"
    },
    "1320": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1322": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "MUL",
      "path": "0"
    },
    "1323": {
      "fn": "President.castVote",
      "offset": [2617, 2630],
      "op": "ADD",
      "path": "0"
    },
    "1324": {
      "fn": "President.castVote",
      "offset": [2617, 2640],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1326": {
      "fn": "President.castVote",
      "offset": [2617, 2640],
      "op": "ADD",
      "path": "0"
    },
    "1327": {
      "fn": "President.castVote",
      "offset": [2617, 2651],
      "op": "DUP2",
      "path": "0"
    },
    "1328": {
      "fn": "President.castVote",
      "offset": [2617, 2651],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "President.castVote",
      "offset": [2617, 2651],
      "op": "SSTORE",
      "path": "0"
    },
    "1330": {
      "fn": "President.castVote",
      "offset": [2617, 2651],
      "op": "POP",
      "path": "0"
    },
    "1331": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "POP",
      "path": "0"
    },
    "1332": {
      "fn": "President.castVote",
      "offset": [2191, 2872],
      "op": "POP",
      "path": "0"
    },
    "1333": {
      "fn": "President.castVote",
      "jump": "o",
      "offset": [2191, 2872],
      "op": "JUMP",
      "path": "0"
    },
    "1334": {
      "fn": "President.castVote",
      "offset": [2505, 2866],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1341": {
      "op": "SHL"
    },
    "1342": {
      "op": "SUB"
    },
    "1343": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "DUP3",
      "path": "0"
    },
    "1344": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "AND",
      "path": "0"
    },
    "1345": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1347": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "SWAP1",
      "path": "0"
    },
    "1348": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "DUP2",
      "path": "0"
    },
    "1349": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "MSTORE",
      "path": "0"
    },
    "1350": {
      "fn": "President.castVote",
      "offset": [2673, 2679],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1352": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1354": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "MSTORE",
      "path": "0"
    },
    "1355": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1357": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "SWAP1",
      "path": "0"
    },
    "1358": {
      "fn": "President.castVote",
      "offset": [2673, 2687],
      "op": "KECCAK256",
      "path": "0"
    },
    "1359": {
      "fn": "President.castVote",
      "offset": [2673, 2692],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1361": {
      "fn": "President.castVote",
      "offset": [2673, 2692],
      "op": "ADD",
      "path": "0"
    },
    "1362": {
      "fn": "President.castVote",
      "offset": [2673, 2692],
      "op": "SLOAD",
      "path": "0"
    },
    "1363": {
      "fn": "President.castVote",
      "offset": [2696, 2697],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1365": {
      "branch": 46,
      "fn": "President.castVote",
      "offset": [2673, 2697],
      "op": "EQ",
      "path": "0"
    },
    "1366": {
      "fn": "President.castVote",
      "offset": [2669, 2866],
      "op": "ISZERO",
      "path": "0"
    },
    "1367": {
      "fn": "President.castVote",
      "offset": [2669, 2866],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "1370": {
      "branch": 46,
      "fn": "President.castVote",
      "jump_revert": true,
      "offset": [2847, 2855],
      "op": "JUMPI",
      "path": "0"
    },
    "1371": {
      "fn": "President.castVote",
      "offset": [2719, 2720],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x2"
    },
    "1373": {
      "fn": "President.castVote",
      "offset": [2713, 2721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1375": {
      "fn": "President.castVote",
      "offset": [2713, 2721],
      "op": "SWAP1",
      "path": "0"
    },
    "1376": {
      "fn": "President.castVote",
      "offset": [2713, 2721],
      "op": "DUP2",
      "path": "0"
    },
    "1377": {
      "fn": "President.castVote",
      "offset": [2713, 2721],
      "op": "MSTORE",
      "path": "0"
    },
    "1378": {
      "fn": "President.castVote",
      "offset": [2713, 2718],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1380": {
      "fn": "President.castVote",
      "offset": [2713, 2721],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1382": {
      "fn": "President.castVote",
      "offset": [2713, 2721],
      "op": "MSTORE",
      "path": "0"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1385": {
      "op": "DUP1"
    },
    "1386": {
      "op": "MLOAD"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1389": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "1392": {
      "op": "DUP4"
    },
    "1393": {
      "op": "CODECOPY"
    },
    "1394": {
      "op": "DUP2"
    },
    "1395": {
      "op": "MLOAD"
    },
    "1396": {
      "op": "SWAP2"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "SLOAD",
      "path": "0"
    },
    "1400": {
      "fn": "President.castVote",
      "offset": [2725, 2726],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1402": {
      "fn": "President.castVote",
      "offset": [2725, 2726],
      "op": "SWAP3",
      "path": "0"
    },
    "1403": {
      "fn": "President.castVote",
      "offset": [2713, 2721],
      "op": "SWAP1",
      "path": "0"
    },
    "1404": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "PUSH2",
      "path": "0",
      "value": "0x586"
    },
    "1407": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "SWAP1",
      "path": "0"
    },
    "1408": {
      "fn": "President.castVote",
      "offset": [2725, 2726],
      "op": "DUP5",
      "path": "0"
    },
    "1409": {
      "fn": "President.castVote",
      "offset": [2725, 2726],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF12"
    },
    "1413": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2713, 2726],
      "op": "JUMP",
      "path": "0"
    },
    "1414": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1415": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "SWAP1",
      "path": "0"
    },
    "1416": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "SWAP2",
      "path": "0"
    },
    "1417": {
      "fn": "President.castVote",
      "offset": [2713, 2726],
      "op": "SSTORE",
      "path": "0"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "op": "POP"
    },
    "1420": {
      "fn": "President.castVote",
      "offset": [2753, 2763],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "1422": {
      "fn": "President.castVote",
      "offset": [2753, 2763],
      "op": "SLOAD",
      "path": "0"
    },
    "1423": {
      "fn": "President.castVote",
      "offset": [2753, 2767],
      "op": "PUSH2",
      "path": "0",
      "value": "0x599"
    },
    "1426": {
      "fn": "President.castVote",
      "offset": [2753, 2767],
      "op": "SWAP1",
      "path": "0"
    },
    "1427": {
      "fn": "President.castVote",
      "offset": [2766, 2767],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1429": {
      "fn": "President.castVote",
      "offset": [2753, 2767],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF12"
    },
    "1432": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2753, 2767],
      "op": "JUMP",
      "path": "0"
    },
    "1433": {
      "fn": "President.castVote",
      "offset": [2753, 2767],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1434": {
      "fn": "President.castVote",
      "offset": [2740, 2750],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1436": {
      "fn": "President.castVote",
      "offset": [2740, 2767],
      "op": "SWAP1",
      "path": "0"
    },
    "1437": {
      "fn": "President.castVote",
      "offset": [2740, 2767],
      "op": "DUP2",
      "path": "0"
    },
    "1438": {
      "fn": "President.castVote",
      "offset": [2740, 2767],
      "op": "SSTORE",
      "path": "0"
    },
    "1439": {
      "fn": "President.castVote",
      "offset": [2813, 2814],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x2"
    },
    "1441": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "SWAP1",
      "path": "0"
    },
    "1442": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "DUP2",
      "path": "0"
    },
    "1443": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "SWAP1",
      "path": "0"
    },
    "1444": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "MSTORE",
      "path": "0"
    },
    "1445": {
      "fn": "President.castVote",
      "offset": [2807, 2812],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1447": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1449": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "MSTORE",
      "path": "0"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1452": {
      "op": "DUP1"
    },
    "1453": {
      "op": "MLOAD"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1456": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "1459": {
      "op": "DUP4"
    },
    "1460": {
      "op": "CODECOPY"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "MLOAD"
    },
    "1463": {
      "op": "SWAP2"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "SLOAD",
      "path": "0"
    },
    "1466": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "DUP2",
      "path": "0"
    },
    "1467": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "SLOAD",
      "path": "0"
    },
    "1468": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "SWAP1",
      "path": "0"
    },
    "1469": {
      "fn": "President.castVote",
      "offset": [2807, 2815],
      "op": "SWAP2",
      "path": "0"
    },
    "1470": {
      "fn": "President.castVote",
      "offset": [2813, 2814],
      "op": "SWAP1",
      "path": "0"
    },
    "1471": {
      "fn": "President.castVote",
      "offset": [2792, 2793],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1473": {
      "fn": "President.castVote",
      "offset": [2792, 2793],
      "op": "SWAP1",
      "path": "0"
    },
    "1474": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "DUP2",
      "path": "0"
    },
    "1475": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "LT",
      "path": "0"
    },
    "1476": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51D"
    },
    "1479": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "JUMPI",
      "path": "0"
    },
    "1480": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51D"
    },
    "1483": {
      "fn": "President.castVote",
      "offset": [2781, 2794],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "1486": {
      "fn": "President.castVote",
      "jump": "i",
      "offset": [2781, 2794],
      "op": "JUMP",
      "path": "0"
    },
    "1487": {
      "fn": "President.tallyResults",
      "offset": [3274, 3937],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1488": {
      "fn": "President.tallyResults",
      "offset": [3314, 3328],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1490": {
      "fn": "President.tallyResults",
      "offset": [3314, 3328],
      "op": "DUP1",
      "path": "0"
    },
    "1491": {
      "fn": "President.tallyResults",
      "offset": [3359, 3379],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x5DE"
    },
    "1494": {
      "fn": "President.tallyResults",
      "offset": [3366, 3379],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1496": {
      "fn": "President.tallyResults",
      "offset": [3366, 3379],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1498": {
      "fn": "President.tallyResults",
      "offset": [3359, 3379],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9B"
    },
    "1501": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3359, 3379],
      "op": "JUMP",
      "path": "0"
    },
    "1502": {
      "fn": "President.tallyResults",
      "offset": [3359, 3379],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1503": {
      "fn": "President.tallyResults",
      "offset": [3403, 3419],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x5"
    },
    "1505": {
      "fn": "President.tallyResults",
      "offset": [3403, 3426],
      "op": "SLOAD",
      "path": "0"
    },
    "1506": {
      "fn": "President.tallyResults",
      "offset": [3389, 3400],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1508": {
      "fn": "President.tallyResults",
      "offset": [3389, 3426],
      "op": "SSTORE",
      "path": "0"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1511": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1512": {
      "fn": "President.tallyResults",
      "offset": [3461, 3477],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1514": {
      "fn": "President.tallyResults",
      "offset": [3461, 3484],
      "op": "SLOAD",
      "path": "0"
    },
    "1515": {
      "fn": "President.tallyResults",
      "offset": [3457, 3484],
      "op": "DUP2",
      "path": "0"
    },
    "1516": {
      "fn": "President.tallyResults",
      "offset": [3457, 3484],
      "op": "LT",
      "path": "0"
    },
    "1517": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "ISZERO",
      "path": "0"
    },
    "1518": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "PUSH2",
      "path": "0",
      "value": "0x732"
    },
    "1521": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "JUMPI",
      "path": "0"
    },
    "1522": {
      "fn": "President.tallyResults",
      "offset": [3505, 3518],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x6"
    },
    "1524": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1526": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "MLOAD",
      "path": "0"
    },
    "1527": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "DUP1",
      "path": "0"
    },
    "1528": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1530": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "ADD",
      "path": "0"
    },
    "1531": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1533": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "MSTORE",
      "path": "0"
    },
    "1534": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "DUP1",
      "path": "0"
    },
    "1535": {
      "fn": "President.tallyResults",
      "offset": [3563, 3579],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1537": {
      "fn": "President.tallyResults",
      "offset": [3580, 3581],
      "op": "DUP5",
      "path": "0"
    },
    "1538": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "DUP2",
      "path": "0"
    },
    "1539": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "SLOAD",
      "path": "0"
    },
    "1540": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "DUP2",
      "path": "0"
    },
    "1541": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "LT",
      "path": "0"
    },
    "1542": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH2",
      "path": "0",
      "value": "0x611"
    },
    "1545": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "JUMPI",
      "path": "0"
    },
    "1546": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH2",
      "path": "0",
      "value": "0x611"
    },
    "1549": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "1552": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3563, 3582],
      "op": "JUMP",
      "path": "0"
    },
    "1553": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1554": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "SWAP1",
      "path": "0"
    },
    "1555": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1557": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "MSTORE",
      "path": "0"
    },
    "1558": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1560": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1562": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "KECCAK256",
      "path": "0"
    },
    "1563": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "ADD",
      "path": "0"
    },
    "1564": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1566": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "SWAP1",
      "path": "0"
    },
    "1567": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "SLOAD",
      "path": "0"
    },
    "1568": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "SWAP1",
      "path": "0"
    },
    "1569": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1572": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "EXP",
      "path": "0"
    },
    "1573": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "SWAP1",
      "path": "0"
    },
    "1574": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "DIV",
      "path": "0"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "op": "SUB"
    },
    "1583": {
      "fn": "President.tallyResults",
      "offset": [3563, 3582],
      "op": "AND",
      "path": "0"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "op": "SUB"
    },
    "1592": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "AND",
      "path": "0"
    },
    "1593": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "DUP2",
      "path": "0"
    },
    "1594": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "MSTORE",
      "path": "0"
    },
    "1595": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1597": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "ADD",
      "path": "0"
    },
    "1598": {
      "fn": "President.tallyResults",
      "offset": [3607, 3613],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1600": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1602": {
      "fn": "President.tallyResults",
      "offset": [3614, 3630],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1604": {
      "fn": "President.tallyResults",
      "offset": [3631, 3632],
      "op": "DUP7",
      "path": "0"
    },
    "1605": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "DUP2",
      "path": "0"
    },
    "1606": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "SLOAD",
      "path": "0"
    },
    "1607": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "DUP2",
      "path": "0"
    },
    "1608": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "LT",
      "path": "0"
    },
    "1609": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "PUSH2",
      "path": "0",
      "value": "0x654"
    },
    "1612": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "JUMPI",
      "path": "0"
    },
    "1613": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "PUSH2",
      "path": "0",
      "value": "0x654"
    },
    "1616": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "1619": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3614, 3633],
      "op": "JUMP",
      "path": "0"
    },
    "1620": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1621": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1623": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "SWAP2",
      "path": "0"
    },
    "1624": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "DUP3",
      "path": "0"
    },
    "1625": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "MSTORE",
      "path": "0"
    },
    "1626": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1628": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "DUP1",
      "path": "0"
    },
    "1629": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "DUP4",
      "path": "0"
    },
    "1630": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "KECCAK256",
      "path": "0"
    },
    "1631": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "SWAP1",
      "path": "0"
    },
    "1632": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "SWAP2",
      "path": "0"
    },
    "1633": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "ADD",
      "path": "0"
    },
    "1634": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "SLOAD",
      "path": "0"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "SUB"
    },
    "1643": {
      "fn": "President.tallyResults",
      "offset": [3614, 3633],
      "op": "AND",
      "path": "0"
    },
    "1644": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "DUP4",
      "path": "0"
    },
    "1645": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "MSTORE",
      "path": "0"
    },
    "1646": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "DUP3",
      "path": "0"
    },
    "1647": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "DUP2",
      "path": "0"
    },
    "1648": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "ADD",
      "path": "0"
    },
    "1649": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "SWAP4",
      "path": "0"
    },
    "1650": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "SWAP1",
      "path": "0"
    },
    "1651": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "SWAP4",
      "path": "0"
    },
    "1652": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "MSTORE",
      "path": "0"
    },
    "1653": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1655": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "SWAP1",
      "path": "0"
    },
    "1656": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "SWAP2",
      "path": "0"
    },
    "1657": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "ADD",
      "path": "0"
    },
    "1658": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "DUP2",
      "path": "0"
    },
    "1659": {
      "fn": "President.tallyResults",
      "offset": [3607, 3634],
      "op": "KECCAK256",
      "path": "0"
    },
    "1660": {
      "fn": "President.tallyResults",
      "offset": [3607, 3640],
      "op": "SLOAD",
      "path": "0"
    },
    "1661": {
      "fn": "President.tallyResults",
      "offset": [3607, 3640],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1667": {
      "op": "SHL"
    },
    "1668": {
      "fn": "President.tallyResults",
      "offset": [3607, 3640],
      "op": "SWAP1",
      "path": "0"
    },
    "1669": {
      "fn": "President.tallyResults",
      "offset": [3607, 3640],
      "op": "SWAP2",
      "path": "0"
    },
    "1670": {
      "fn": "President.tallyResults",
      "offset": [3607, 3640],
      "op": "DIV",
      "path": "0"
    },
    "1671": {
      "fn": "President.tallyResults",
      "offset": [3607, 3640],
      "op": "AND",
      "path": "0"
    },
    "1672": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "ISZERO",
      "path": "0"
    },
    "1673": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "ISZERO",
      "path": "0"
    },
    "1674": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "DUP4",
      "path": "0"
    },
    "1675": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "MSTORE",
      "path": "0"
    },
    "1676": {
      "fn": "President.tallyResults",
      "offset": [3671, 3687],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1678": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "DUP1",
      "path": "0"
    },
    "1679": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "SLOAD",
      "path": "0"
    },
    "1680": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "SWAP4",
      "path": "0"
    },
    "1681": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "SWAP1",
      "path": "0"
    },
    "1682": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "SWAP3",
      "path": "0"
    },
    "1683": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "ADD",
      "path": "0"
    },
    "1684": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "SWAP3",
      "path": "0"
    },
    "1685": {
      "fn": "President.tallyResults",
      "offset": [3664, 3670],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1687": {
      "fn": "President.tallyResults",
      "offset": [3664, 3670],
      "op": "SWAP3",
      "path": "0"
    },
    "1688": {
      "fn": "President.tallyResults",
      "offset": [3671, 3687],
      "op": "SWAP1",
      "path": "0"
    },
    "1689": {
      "fn": "President.tallyResults",
      "offset": [3688, 3689],
      "op": "DUP8",
      "path": "0"
    },
    "1690": {
      "fn": "President.tallyResults",
      "offset": [3688, 3689],
      "op": "SWAP1",
      "path": "0"
    },
    "1691": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "DUP2",
      "path": "0"
    },
    "1692": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "LT",
      "path": "0"
    },
    "1693": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A8"
    },
    "1696": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "JUMPI",
      "path": "0"
    },
    "1697": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A8"
    },
    "1700": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "1703": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3671, 3690],
      "op": "JUMP",
      "path": "0"
    },
    "1704": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1705": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1707": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "SWAP2",
      "path": "0"
    },
    "1708": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "DUP3",
      "path": "0"
    },
    "1709": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "MSTORE",
      "path": "0"
    },
    "1710": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1712": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "DUP1",
      "path": "0"
    },
    "1713": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "DUP4",
      "path": "0"
    },
    "1714": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "KECCAK256",
      "path": "0"
    },
    "1715": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "SWAP1",
      "path": "0"
    },
    "1716": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "SWAP2",
      "path": "0"
    },
    "1717": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "ADD",
      "path": "0"
    },
    "1718": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "SLOAD",
      "path": "0"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "op": "SUB"
    },
    "1727": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "SWAP1",
      "path": "0"
    },
    "1728": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "DUP2",
      "path": "0"
    },
    "1729": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "AND",
      "path": "0"
    },
    "1730": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "DUP5",
      "path": "0"
    },
    "1731": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "MSTORE",
      "path": "0"
    },
    "1732": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "DUP4",
      "path": "0"
    },
    "1733": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "DUP3",
      "path": "0"
    },
    "1734": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "ADD",
      "path": "0"
    },
    "1735": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "SWAP5",
      "path": "0"
    },
    "1736": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "SWAP1",
      "path": "0"
    },
    "1737": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "SWAP5",
      "path": "0"
    },
    "1738": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "MSTORE",
      "path": "0"
    },
    "1739": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1741": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "SWAP3",
      "path": "0"
    },
    "1742": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "DUP4",
      "path": "0"
    },
    "1743": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "ADD",
      "path": "0"
    },
    "1744": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "DUP3",
      "path": "0"
    },
    "1745": {
      "fn": "President.tallyResults",
      "offset": [3664, 3691],
      "op": "KECCAK256",
      "path": "0"
    },
    "1746": {
      "fn": "President.tallyResults",
      "offset": [3671, 3690],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1748": {
      "fn": "President.tallyResults",
      "offset": [3664, 3696],
      "op": "SWAP1",
      "path": "0"
    },
    "1749": {
      "fn": "President.tallyResults",
      "offset": [3664, 3696],
      "op": "DUP2",
      "path": "0"
    },
    "1750": {
      "fn": "President.tallyResults",
      "offset": [3664, 3696],
      "op": "ADD",
      "path": "0"
    },
    "1751": {
      "fn": "President.tallyResults",
      "offset": [3664, 3696],
      "op": "SLOAD",
      "path": "0"
    },
    "1752": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "SWAP1",
      "path": "0"
    },
    "1753": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "SWAP6",
      "path": "0"
    },
    "1754": {
      "fn": "President.tallyResults",
      "offset": [3524, 3711],
      "op": "MSTORE",
      "path": "0"
    },
    "1755": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP7",
      "path": "0"
    },
    "1756": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SLOAD",
      "path": "0"
    },
    "1757": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP1",
      "path": "0"
    },
    "1758": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP7",
      "path": "0"
    },
    "1759": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "ADD",
      "path": "0"
    },
    "1760": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP9",
      "path": "0"
    },
    "1761": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SSTORE",
      "path": "0"
    },
    "1762": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP7",
      "path": "0"
    },
    "1763": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP3",
      "path": "0"
    },
    "1764": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "MSTORE",
      "path": "0"
    },
    "1765": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1766": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP2",
      "path": "0"
    },
    "1767": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1768": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "KECCAK256",
      "path": "0"
    },
    "1769": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP6",
      "path": "0"
    },
    "1770": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "MLOAD",
      "path": "0"
    },
    "1771": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1773": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1774": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP8",
      "path": "0"
    },
    "1775": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "MUL",
      "path": "0"
    },
    "1776": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "ADD",
      "path": "0"
    },
    "1777": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP1",
      "path": "0"
    },
    "1778": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SLOAD",
      "path": "0"
    },
    "1779": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP2",
      "path": "0"
    },
    "1780": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP7",
      "path": "0"
    },
    "1781": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "ADD",
      "path": "0"
    },
    "1782": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "MLOAD",
      "path": "0"
    },
    "1783": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "ISZERO",
      "path": "0"
    },
    "1784": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "ISZERO",
      "path": "0"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1789": {
      "op": "SHL"
    },
    "1790": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "MUL",
      "path": "0"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "op": "NOT"
    },
    "1800": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1801": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP3",
      "path": "0"
    },
    "1802": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "AND",
      "path": "0"
    },
    "1803": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP7",
      "path": "0"
    },
    "1804": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1805": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP4",
      "path": "0"
    },
    "1806": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "AND",
      "path": "0"
    },
    "1807": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP6",
      "path": "0"
    },
    "1808": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1809": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP6",
      "path": "0"
    },
    "1810": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "OR",
      "path": "0"
    },
    "1811": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP5",
      "path": "0"
    },
    "1812": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1813": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP5",
      "path": "0"
    },
    "1814": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "OR",
      "path": "0"
    },
    "1815": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "DUP2",
      "path": "0"
    },
    "1816": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SSTORE",
      "path": "0"
    },
    "1817": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP2",
      "path": "0"
    },
    "1818": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP1",
      "path": "0"
    },
    "1819": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP3",
      "path": "0"
    },
    "1820": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "ADD",
      "path": "0"
    },
    "1821": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "MLOAD",
      "path": "0"
    },
    "1822": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SWAP2",
      "path": "0"
    },
    "1823": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "ADD",
      "path": "0"
    },
    "1824": {
      "fn": "President.tallyResults",
      "offset": [3505, 3712],
      "op": "SSTORE",
      "path": "0"
    },
    "1825": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "DUP1",
      "path": "0",
      "statement": 18
    },
    "1826": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72A"
    },
    "1829": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "DUP2",
      "path": "0"
    },
    "1830": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF40"
    },
    "1833": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3486, 3489],
      "op": "JUMP",
      "path": "0"
    },
    "1834": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1835": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "SWAP2",
      "path": "0"
    },
    "1836": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "POP",
      "path": "0"
    },
    "1837": {
      "fn": "President.tallyResults",
      "offset": [3486, 3489],
      "op": "POP",
      "path": "0"
    },
    "1838": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E7"
    },
    "1841": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "JUMP",
      "path": "0"
    },
    "1842": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1843": {
      "fn": "President.tallyResults",
      "offset": [3437, 3723],
      "op": "POP",
      "path": "0"
    },
    "1844": {
      "fn": "President.tallyResults",
      "offset": [3746, 3755],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1846": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1847": {
      "fn": "President.tallyResults",
      "offset": [3765, 3775],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1849": {
      "fn": "President.tallyResults",
      "offset": [3765, 3782],
      "op": "SLOAD",
      "path": "0"
    },
    "1850": {
      "fn": "President.tallyResults",
      "offset": [3761, 3782],
      "op": "DUP2",
      "path": "0"
    },
    "1851": {
      "fn": "President.tallyResults",
      "offset": [3761, 3782],
      "op": "LT",
      "path": "0"
    },
    "1852": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "ISZERO",
      "path": "0"
    },
    "1853": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B7"
    },
    "1856": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "JUMPI",
      "path": "0"
    },
    "1857": {
      "fn": "President.tallyResults",
      "offset": [3864, 3875],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x1"
    },
    "1859": {
      "fn": "President.tallyResults",
      "offset": [3864, 3875],
      "op": "SLOAD",
      "path": "0"
    },
    "1860": {
      "fn": "President.tallyResults",
      "offset": [3831, 3841],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1862": {
      "fn": "President.tallyResults",
      "offset": [3842, 3843],
      "op": "DUP3",
      "path": "0"
    },
    "1863": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "DUP2",
      "path": "0"
    },
    "1864": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "SLOAD",
      "path": "0"
    },
    "1865": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "DUP2",
      "path": "0"
    },
    "1866": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "LT",
      "path": "0"
    },
    "1867": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "PUSH2",
      "path": "0",
      "value": "0x756"
    },
    "1870": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "JUMPI",
      "path": "0"
    },
    "1871": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "PUSH2",
      "path": "0",
      "value": "0x756"
    },
    "1874": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "1877": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3831, 3844],
      "op": "JUMP",
      "path": "0"
    },
    "1878": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1879": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "SWAP1",
      "path": "0"
    },
    "1880": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1882": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "MSTORE",
      "path": "0"
    },
    "1883": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1885": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1887": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "KECCAK256",
      "path": "0"
    },
    "1888": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "SWAP1",
      "path": "0"
    },
    "1889": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1891": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "MUL",
      "path": "0"
    },
    "1892": {
      "fn": "President.tallyResults",
      "offset": [3831, 3844],
      "op": "ADD",
      "path": "0"
    },
    "1893": {
      "fn": "President.tallyResults",
      "offset": [3831, 3854],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1895": {
      "fn": "President.tallyResults",
      "offset": [3831, 3854],
      "op": "ADD",
      "path": "0"
    },
    "1896": {
      "fn": "President.tallyResults",
      "offset": [3831, 3854],
      "op": "SLOAD",
      "path": "0"
    },
    "1897": {
      "fn": "President.tallyResults",
      "offset": [3857, 3860],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1899": {
      "fn": "President.tallyResults",
      "offset": [3831, 3860],
      "op": "PUSH2",
      "path": "0",
      "value": "0x774"
    },
    "1902": {
      "fn": "President.tallyResults",
      "offset": [3831, 3860],
      "op": "SWAP2",
      "path": "0"
    },
    "1903": {
      "fn": "President.tallyResults",
      "offset": [3831, 3860],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "fn": "President.tallyResults",
      "offset": [3831, 3860],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5B"
    },
    "1907": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3831, 3860],
      "op": "JUMP",
      "path": "0"
    },
    "1908": {
      "fn": "President.tallyResults",
      "offset": [3831, 3860],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1909": {
      "fn": "President.tallyResults",
      "offset": [3830, 3875],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77E"
    },
    "1912": {
      "fn": "President.tallyResults",
      "offset": [3830, 3875],
      "op": "SWAP2",
      "path": "0"
    },
    "1913": {
      "fn": "President.tallyResults",
      "offset": [3830, 3875],
      "op": "SWAP1",
      "path": "0"
    },
    "1914": {
      "fn": "President.tallyResults",
      "offset": [3830, 3875],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7A"
    },
    "1917": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3830, 3875],
      "op": "JUMP",
      "path": "0"
    },
    "1918": {
      "fn": "President.tallyResults",
      "offset": [3830, 3875],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1919": {
      "fn": "President.tallyResults",
      "offset": [3799, 3809],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1921": {
      "fn": "President.tallyResults",
      "offset": [3810, 3811],
      "op": "DUP3",
      "path": "0"
    },
    "1922": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "DUP2",
      "path": "0"
    },
    "1923": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "SLOAD",
      "path": "0"
    },
    "1924": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "DUP2",
      "path": "0"
    },
    "1925": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "LT",
      "path": "0"
    },
    "1926": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "PUSH2",
      "path": "0",
      "value": "0x791"
    },
    "1929": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "JUMPI",
      "path": "0"
    },
    "1930": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "PUSH2",
      "path": "0",
      "value": "0x791"
    },
    "1933": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "1936": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3799, 3812],
      "op": "JUMP",
      "path": "0"
    },
    "1937": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1938": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1940": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "SWAP2",
      "path": "0"
    },
    "1941": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "DUP3",
      "path": "0"
    },
    "1942": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "MSTORE",
      "path": "0"
    },
    "1943": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1945": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "SWAP1",
      "path": "0"
    },
    "1946": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "SWAP2",
      "path": "0"
    },
    "1947": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "KECCAK256",
      "path": "0"
    },
    "1948": {
      "fn": "President.tallyResults",
      "offset": [3799, 3827],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1950": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1952": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "SWAP1",
      "path": "0"
    },
    "1953": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "SWAP3",
      "path": "0"
    },
    "1954": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "MUL",
      "path": "0"
    },
    "1955": {
      "fn": "President.tallyResults",
      "offset": [3799, 3812],
      "op": "ADD",
      "path": "0"
    },
    "1956": {
      "fn": "President.tallyResults",
      "offset": [3799, 3827],
      "op": "ADD",
      "path": "0"
    },
    "1957": {
      "fn": "President.tallyResults",
      "offset": [3799, 3875],
      "op": "SSTORE",
      "path": "0"
    },
    "1958": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "DUP1",
      "path": "0",
      "statement": 20
    },
    "1959": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AF"
    },
    "1962": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "DUP2",
      "path": "0"
    },
    "1963": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF40"
    },
    "1966": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3784, 3787],
      "op": "JUMP",
      "path": "0"
    },
    "1967": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1968": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "SWAP2",
      "path": "0"
    },
    "1969": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "POP",
      "path": "0"
    },
    "1970": {
      "fn": "President.tallyResults",
      "offset": [3784, 3787],
      "op": "POP",
      "path": "0"
    },
    "1971": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "PUSH2",
      "path": "0",
      "value": "0x736"
    },
    "1974": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "JUMP",
      "path": "0"
    },
    "1975": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1976": {
      "fn": "President.tallyResults",
      "offset": [3741, 3886],
      "op": "POP",
      "path": "0"
    },
    "1977": {
      "fn": "President.tallyResults",
      "offset": [3903, 3916],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x6"
    },
    "1979": {
      "fn": "President.tallyResults",
      "offset": [3918, 3928],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1981": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "1982": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "1983": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "1984": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "1985": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1987": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MUL",
      "path": "0"
    },
    "1988": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1990": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "1991": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1993": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MLOAD",
      "path": "0"
    },
    "1994": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "1995": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "1996": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "1997": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1999": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2000": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2001": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP3",
      "path": "0"
    },
    "2002": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2003": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2004": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2005": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2006": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2007": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2009": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2010": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2012": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2013": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2014": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2015": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2016": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "LT",
      "path": "0"
    },
    "2017": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ISZERO",
      "path": "0"
    },
    "2018": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x839"
    },
    "2021": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPI",
      "path": "0"
    },
    "2022": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2024": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP5",
      "path": "0"
    },
    "2025": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2026": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2027": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2029": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2030": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2031": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2032": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "KECCAK256",
      "path": "0"
    },
    "2033": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2035": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2036": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MLOAD",
      "path": "0"
    },
    "2037": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2039": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2040": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2041": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2042": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2043": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2045": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP7",
      "path": "0"
    },
    "2046": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MUL",
      "path": "0"
    },
    "2047": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2048": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP3",
      "path": "0"
    },
    "2049": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2050": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2051": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "op": "SUB"
    },
    "2060": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2061": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "AND",
      "path": "0"
    },
    "2062": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP5",
      "path": "0"
    },
    "2063": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2068": {
      "op": "SHL"
    },
    "2069": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2070": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DIV",
      "path": "0"
    },
    "2071": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2073": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "AND",
      "path": "0"
    },
    "2074": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ISZERO",
      "path": "0"
    },
    "2075": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ISZERO",
      "path": "0"
    },
    "2076": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP4",
      "path": "0"
    },
    "2077": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP6",
      "path": "0"
    },
    "2078": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2079": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2080": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2082": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2083": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2084": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2085": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2086": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2087": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP4",
      "path": "0"
    },
    "2088": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2089": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2090": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2091": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2092": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2093": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2094": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP4",
      "path": "0"
    },
    "2095": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2096": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2097": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP3",
      "path": "0"
    },
    "2098": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2099": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2100": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2101": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DD"
    },
    "2104": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMP",
      "path": "0"
    },
    "2105": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2106": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2107": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2108": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2109": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2110": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2111": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2112": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2113": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2114": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2115": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2116": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2118": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MUL",
      "path": "0"
    },
    "2119": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2121": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2122": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2124": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MLOAD",
      "path": "0"
    },
    "2125": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2126": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2127": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2128": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2130": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2131": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2132": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP3",
      "path": "0"
    },
    "2133": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2134": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2135": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2136": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2137": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2138": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2140": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2141": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2143": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2144": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2145": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2146": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2147": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "LT",
      "path": "0"
    },
    "2148": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ISZERO",
      "path": "0"
    },
    "2149": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x938"
    },
    "2152": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPI",
      "path": "0"
    },
    "2153": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP4",
      "path": "0"
    },
    "2154": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2155": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2156": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2158": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2159": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2161": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2163": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "KECCAK256",
      "path": "0"
    },
    "2164": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2165": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2167": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MUL",
      "path": "0"
    },
    "2168": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2169": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2171": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MLOAD",
      "path": "0"
    },
    "2172": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2173": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2175": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2176": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2178": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2179": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2180": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2181": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2183": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2184": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2185": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2186": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2187": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x893"
    },
    "2190": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2191": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDC"
    },
    "2194": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3896, 3929],
      "op": "JUMP",
      "path": "0"
    },
    "2195": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2196": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2197": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2199": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2200": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2202": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2203": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2204": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DIV",
      "path": "0"
    },
    "2205": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MUL",
      "path": "0"
    },
    "2206": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2208": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2209": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2211": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MLOAD",
      "path": "0"
    },
    "2212": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2213": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2214": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2215": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2217": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2218": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2219": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP3",
      "path": "0"
    },
    "2220": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2221": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2222": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2223": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2224": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2225": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2227": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2228": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2229": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2230": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2231": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8BF"
    },
    "2234": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2235": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDC"
    },
    "2238": {
      "fn": "President.tallyResults",
      "jump": "i",
      "offset": [3896, 3929],
      "op": "JUMP",
      "path": "0"
    },
    "2239": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2240": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2241": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ISZERO",
      "path": "0"
    },
    "2242": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90C"
    },
    "2245": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPI",
      "path": "0"
    },
    "2246": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2247": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2249": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "LT",
      "path": "0"
    },
    "2250": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E1"
    },
    "2253": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPI",
      "path": "0"
    },
    "2254": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2257": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2258": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP4",
      "path": "0"
    },
    "2259": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2260": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DIV",
      "path": "0"
    },
    "2261": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MUL",
      "path": "0"
    },
    "2262": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP4",
      "path": "0"
    },
    "2263": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2264": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2265": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2267": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2268": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2269": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x90C"
    },
    "2272": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMP",
      "path": "0"
    },
    "2273": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2274": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2275": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2276": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2277": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2278": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2280": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2281": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2283": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2285": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "KECCAK256",
      "path": "0"
    },
    "2286": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2287": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2288": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2289": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2290": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2291": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2292": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2293": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2295": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2296": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2297": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2299": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2300": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP1",
      "path": "0"
    },
    "2301": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP4",
      "path": "0"
    },
    "2302": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "GT",
      "path": "0"
    },
    "2303": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EF"
    },
    "2306": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPI",
      "path": "0"
    },
    "2307": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2308": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2309": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SUB",
      "path": "0"
    },
    "2310": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2312": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "AND",
      "path": "0"
    },
    "2313": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2314": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2315": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2316": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2317": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2318": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2319": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2320": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2321": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2322": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2323": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2324": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2326": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2327": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2329": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2330": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2331": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2332": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2333": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2334": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2336": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2337": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2339": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP3",
      "path": "0"
    },
    "2340": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2341": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SLOAD",
      "path": "0"
    },
    "2342": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2343": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2344": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2345": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2346": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "DUP2",
      "path": "0"
    },
    "2347": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "MSTORE",
      "path": "0"
    },
    "2348": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2350": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2351": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2352": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2354": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "ADD",
      "path": "0"
    },
    "2355": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2356": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "PUSH2",
      "path": "0",
      "value": "0x860"
    },
    "2359": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMP",
      "path": "0"
    },
    "2360": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2361": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2362": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2363": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2364": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2365": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP1",
      "path": "0"
    },
    "2366": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2367": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2368": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2369": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "SWAP2",
      "path": "0"
    },
    "2370": {
      "fn": "President.tallyResults",
      "offset": [3896, 3929],
      "op": "POP",
      "path": "0"
    },
    "2371": {
      "fn": "President.tallyResults",
      "offset": [3274, 3937],
      "op": "SWAP1",
      "path": "0"
    },
    "2372": {
      "fn": "President.tallyResults",
      "offset": [3274, 3937],
      "op": "SWAP2",
      "path": "0"
    },
    "2373": {
      "fn": "President.tallyResults",
      "jump": "o",
      "offset": [3274, 3937],
      "op": "JUMP",
      "path": "0"
    },
    "2374": {
      "fn": "President.announceWinner",
      "offset": [4346, 5428],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2375": {
      "fn": "President.announceWinner",
      "offset": [4389, 4402],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2377": {
      "fn": "President.announceWinner",
      "offset": [4404, 4411],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2379": {
      "fn": "President.announceWinner",
      "offset": [4413, 4420],
      "op": "DUP1",
      "path": "0"
    },
    "2380": {
      "fn": "President.announceWinner",
      "offset": [4431, 4445],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2382": {
      "fn": "President.announceWinner",
      "offset": [4448, 4459],
      "op": "PUSH2",
      "path": "0",
      "value": "0x955"
    },
    "2385": {
      "fn": "President.announceWinner",
      "offset": [4448, 4457],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3A"
    },
    "2388": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [4448, 4459],
      "op": "JUMP",
      "path": "0"
    },
    "2389": {
      "fn": "President.announceWinner",
      "offset": [4448, 4459],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2390": {
      "fn": "President.announceWinner",
      "offset": [4431, 4459],
      "op": "SWAP1",
      "path": "0"
    },
    "2391": {
      "fn": "President.announceWinner",
      "offset": [4431, 4459],
      "op": "POP",
      "path": "0"
    },
    "2392": {
      "fn": "President.announceWinner",
      "offset": [4473, 4503],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2394": {
      "fn": "President.announceWinner",
      "offset": [4507, 4521],
      "op": "PUSH2",
      "path": "0",
      "value": "0x961"
    },
    "2397": {
      "fn": "President.announceWinner",
      "offset": [4507, 4519],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CF"
    },
    "2400": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [4507, 4521],
      "op": "JUMP",
      "path": "0"
    },
    "2401": {
      "fn": "President.announceWinner",
      "offset": [4507, 4521],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2402": {
      "fn": "President.announceWinner",
      "offset": [4469, 4521],
      "op": "SWAP2",
      "path": "0"
    },
    "2403": {
      "fn": "President.announceWinner",
      "offset": [4469, 4521],
      "op": "POP",
      "path": "0"
    },
    "2404": {
      "fn": "President.announceWinner",
      "offset": [4469, 4521],
      "op": "POP",
      "path": "0"
    },
    "2405": {
      "fn": "President.announceWinner",
      "offset": [4531, 4552],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2407": {
      "fn": "President.announceWinner",
      "offset": [4562, 4586],
      "op": "DUP1",
      "path": "0"
    },
    "2408": {
      "fn": "President.announceWinner",
      "offset": [4596, 4615],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2410": {
      "fn": "President.announceWinner",
      "offset": [4625, 4646],
      "op": "DUP1",
      "path": "0"
    },
    "2411": {
      "fn": "President.announceWinner",
      "offset": [4661, 4667],
      "op": "DUP6",
      "path": "0"
    },
    "2412": {
      "fn": "President.announceWinner",
      "offset": [4671, 4672],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2414": {
      "branch": 47,
      "fn": "President.announceWinner",
      "offset": [4661, 4672],
      "op": "EQ",
      "path": "0"
    },
    "2415": {
      "fn": "President.announceWinner",
      "offset": [4657, 5422],
      "op": "ISZERO",
      "path": "0"
    },
    "2416": {
      "fn": "President.announceWinner",
      "offset": [4657, 5422],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E7"
    },
    "2419": {
      "branch": 47,
      "fn": "President.announceWinner",
      "offset": [4657, 5422],
      "op": "JUMPI",
      "path": "0"
    },
    "2420": {
      "fn": "President.announceWinner",
      "offset": [4701, 4712],
      "op": "DUP5",
      "path": "0",
      "statement": 22
    },
    "2421": {
      "fn": "President.announceWinner",
      "offset": [4713, 4714],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2423": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "DUP2",
      "path": "0"
    },
    "2424": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "MLOAD",
      "path": "0"
    },
    "2425": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "DUP2",
      "path": "0"
    },
    "2426": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "LT",
      "path": "0"
    },
    "2427": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "PUSH2",
      "path": "0",
      "value": "0x986"
    },
    "2430": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "JUMPI",
      "path": "0"
    },
    "2431": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "PUSH2",
      "path": "0",
      "value": "0x986"
    },
    "2434": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2437": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [4701, 4715],
      "op": "JUMP",
      "path": "0"
    },
    "2438": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2439": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2441": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "MUL",
      "path": "0"
    },
    "2442": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2444": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "ADD",
      "path": "0"
    },
    "2445": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "ADD",
      "path": "0"
    },
    "2446": {
      "fn": "President.announceWinner",
      "offset": [4701, 4715],
      "op": "MLOAD",
      "path": "0"
    },
    "2447": {
      "fn": "President.announceWinner",
      "offset": [4701, 4720],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2449": {
      "fn": "President.announceWinner",
      "offset": [4701, 4720],
      "op": "ADD",
      "path": "0"
    },
    "2450": {
      "fn": "President.announceWinner",
      "offset": [4701, 4720],
      "op": "MLOAD",
      "path": "0"
    },
    "2451": {
      "fn": "President.announceWinner",
      "offset": [4688, 4720],
      "op": "SWAP3",
      "path": "0"
    },
    "2452": {
      "fn": "President.announceWinner",
      "offset": [4688, 4720],
      "op": "POP",
      "path": "0"
    },
    "2453": {
      "fn": "President.announceWinner",
      "offset": [4748, 4759],
      "op": "DUP5",
      "path": "0",
      "statement": 23
    },
    "2454": {
      "fn": "President.announceWinner",
      "offset": [4760, 4761],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2456": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "DUP2",
      "path": "0"
    },
    "2457": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "MLOAD",
      "path": "0"
    },
    "2458": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "DUP2",
      "path": "0"
    },
    "2459": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "LT",
      "path": "0"
    },
    "2460": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "2463": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "JUMPI",
      "path": "0"
    },
    "2464": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A7"
    },
    "2467": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2470": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [4748, 4762],
      "op": "JUMP",
      "path": "0"
    },
    "2471": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2472": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2474": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "MUL",
      "path": "0"
    },
    "2475": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2477": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "ADD",
      "path": "0"
    },
    "2478": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "ADD",
      "path": "0"
    },
    "2479": {
      "fn": "President.announceWinner",
      "offset": [4748, 4762],
      "op": "MLOAD",
      "path": "0"
    },
    "2480": {
      "fn": "President.announceWinner",
      "offset": [4748, 4772],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2482": {
      "fn": "President.announceWinner",
      "offset": [4748, 4772],
      "op": "ADD",
      "path": "0"
    },
    "2483": {
      "fn": "President.announceWinner",
      "offset": [4748, 4772],
      "op": "MLOAD",
      "path": "0"
    },
    "2484": {
      "fn": "President.announceWinner",
      "offset": [4734, 4772],
      "op": "SWAP2",
      "path": "0"
    },
    "2485": {
      "fn": "President.announceWinner",
      "offset": [4734, 4772],
      "op": "POP",
      "path": "0"
    },
    "2486": {
      "fn": "President.announceWinner",
      "offset": [4802, 4813],
      "op": "DUP5",
      "path": "0",
      "statement": 24
    },
    "2487": {
      "fn": "President.announceWinner",
      "offset": [4814, 4815],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2489": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "DUP2",
      "path": "0"
    },
    "2490": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "MLOAD",
      "path": "0"
    },
    "2491": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "DUP2",
      "path": "0"
    },
    "2492": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "LT",
      "path": "0"
    },
    "2493": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C8"
    },
    "2496": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "JUMPI",
      "path": "0"
    },
    "2497": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C8"
    },
    "2500": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2503": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [4802, 4816],
      "op": "JUMP",
      "path": "0"
    },
    "2504": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2505": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2507": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "SWAP1",
      "path": "0"
    },
    "2508": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "DUP2",
      "path": "0"
    },
    "2509": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "MUL",
      "path": "0"
    },
    "2510": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "SWAP2",
      "path": "0"
    },
    "2511": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "SWAP1",
      "path": "0"
    },
    "2512": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "SWAP2",
      "path": "0"
    },
    "2513": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "ADD",
      "path": "0"
    },
    "2514": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "ADD",
      "path": "0"
    },
    "2515": {
      "fn": "President.announceWinner",
      "offset": [4802, 4816],
      "op": "MLOAD",
      "path": "0"
    },
    "2516": {
      "fn": "President.announceWinner",
      "offset": [4802, 4831],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2518": {
      "fn": "President.announceWinner",
      "offset": [4802, 4831],
      "op": "ADD",
      "path": "0"
    },
    "2519": {
      "fn": "President.announceWinner",
      "offset": [4802, 4831],
      "op": "MLOAD",
      "path": "0"
    },
    "2520": {
      "fn": "President.announceWinner",
      "offset": [4866, 4876],
      "op": "SWAP3",
      "path": "0",
      "statement": 25
    },
    "2521": {
      "fn": "President.announceWinner",
      "offset": [4866, 4876],
      "op": "SWAP10",
      "path": "0"
    },
    "2522": {
      "fn": "President.announceWinner",
      "offset": [4878, 4889],
      "op": "SWAP2",
      "path": "0"
    },
    "2523": {
      "fn": "President.announceWinner",
      "offset": [4878, 4889],
      "op": "SWAP9",
      "path": "0"
    },
    "2524": {
      "op": "POP"
    },
    "2525": {
      "fn": "President.announceWinner",
      "offset": [4802, 4831],
      "op": "SWAP2",
      "path": "0"
    },
    "2526": {
      "fn": "President.announceWinner",
      "offset": [4802, 4831],
      "op": "SWAP7",
      "path": "0"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "fn": "President.announceWinner",
      "offset": [4346, 5428],
      "op": "SWAP5",
      "path": "0"
    },
    "2529": {
      "op": "POP"
    },
    "2530": {
      "op": "POP"
    },
    "2531": {
      "op": "POP"
    },
    "2532": {
      "op": "POP"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "fn": "President.announceWinner",
      "jump": "o",
      "offset": [4346, 5428],
      "op": "JUMP",
      "path": "0"
    },
    "2535": {
      "fn": "President.announceWinner",
      "offset": [4657, 5422],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2536": {
      "fn": "President.announceWinner",
      "offset": [4926, 4932],
      "op": "DUP6",
      "path": "0"
    },
    "2537": {
      "fn": "President.announceWinner",
      "offset": [4936, 4937],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2539": {
      "branch": 48,
      "fn": "President.announceWinner",
      "offset": [4926, 4937],
      "op": "EQ",
      "path": "0"
    },
    "2540": {
      "fn": "President.announceWinner",
      "offset": [4922, 5422],
      "op": "ISZERO",
      "path": "0"
    },
    "2541": {
      "fn": "President.announceWinner",
      "offset": [4922, 5422],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA45"
    },
    "2544": {
      "branch": 48,
      "fn": "President.announceWinner",
      "offset": [4922, 5422],
      "op": "JUMPI",
      "path": "0"
    },
    "2545": {
      "fn": "President.announceWinner",
      "offset": [4966, 4977],
      "op": "DUP5",
      "path": "0",
      "statement": 26
    },
    "2546": {
      "fn": "President.announceWinner",
      "offset": [4978, 4979],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2548": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "DUP2",
      "path": "0"
    },
    "2549": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "MLOAD",
      "path": "0"
    },
    "2550": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "DUP2",
      "path": "0"
    },
    "2551": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "LT",
      "path": "0"
    },
    "2552": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA03"
    },
    "2555": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "JUMPI",
      "path": "0"
    },
    "2556": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA03"
    },
    "2559": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2562": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [4966, 4980],
      "op": "JUMP",
      "path": "0"
    },
    "2563": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2564": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2566": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "MUL",
      "path": "0"
    },
    "2567": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2569": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "ADD",
      "path": "0"
    },
    "2570": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "ADD",
      "path": "0"
    },
    "2571": {
      "fn": "President.announceWinner",
      "offset": [4966, 4980],
      "op": "MLOAD",
      "path": "0"
    },
    "2572": {
      "fn": "President.announceWinner",
      "offset": [4966, 4985],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2574": {
      "fn": "President.announceWinner",
      "offset": [4966, 4985],
      "op": "ADD",
      "path": "0"
    },
    "2575": {
      "fn": "President.announceWinner",
      "offset": [4966, 4985],
      "op": "MLOAD",
      "path": "0"
    },
    "2576": {
      "fn": "President.announceWinner",
      "offset": [4953, 4985],
      "op": "SWAP3",
      "path": "0"
    },
    "2577": {
      "fn": "President.announceWinner",
      "offset": [4953, 4985],
      "op": "POP",
      "path": "0"
    },
    "2578": {
      "fn": "President.announceWinner",
      "offset": [5013, 5024],
      "op": "DUP5",
      "path": "0",
      "statement": 27
    },
    "2579": {
      "fn": "President.announceWinner",
      "offset": [5025, 5026],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2581": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "DUP2",
      "path": "0"
    },
    "2582": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "MLOAD",
      "path": "0"
    },
    "2583": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "DUP2",
      "path": "0"
    },
    "2584": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "LT",
      "path": "0"
    },
    "2585": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA24"
    },
    "2588": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "JUMPI",
      "path": "0"
    },
    "2589": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA24"
    },
    "2592": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2595": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [5013, 5027],
      "op": "JUMP",
      "path": "0"
    },
    "2596": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2597": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2599": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "MUL",
      "path": "0"
    },
    "2600": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2602": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "ADD",
      "path": "0"
    },
    "2603": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "ADD",
      "path": "0"
    },
    "2604": {
      "fn": "President.announceWinner",
      "offset": [5013, 5027],
      "op": "MLOAD",
      "path": "0"
    },
    "2605": {
      "fn": "President.announceWinner",
      "offset": [5013, 5037],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2607": {
      "fn": "President.announceWinner",
      "offset": [5013, 5037],
      "op": "ADD",
      "path": "0"
    },
    "2608": {
      "fn": "President.announceWinner",
      "offset": [5013, 5037],
      "op": "MLOAD",
      "path": "0"
    },
    "2609": {
      "fn": "President.announceWinner",
      "offset": [4999, 5037],
      "op": "SWAP2",
      "path": "0"
    },
    "2610": {
      "fn": "President.announceWinner",
      "offset": [4999, 5037],
      "op": "POP",
      "path": "0"
    },
    "2611": {
      "fn": "President.announceWinner",
      "offset": [5067, 5078],
      "op": "DUP5",
      "path": "0",
      "statement": 28
    },
    "2612": {
      "fn": "President.announceWinner",
      "offset": [5079, 5080],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2614": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "DUP2",
      "path": "0"
    },
    "2615": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "MLOAD",
      "path": "0"
    },
    "2616": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "DUP2",
      "path": "0"
    },
    "2617": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "LT",
      "path": "0"
    },
    "2618": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C8"
    },
    "2621": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "JUMPI",
      "path": "0"
    },
    "2622": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C8"
    },
    "2625": {
      "fn": "President.announceWinner",
      "offset": [5067, 5081],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2628": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [5067, 5081],
      "op": "JUMP",
      "path": "0"
    },
    "2629": {
      "fn": "President.announceWinner",
      "offset": [4922, 5422],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2630": {
      "fn": "President.announceWinner",
      "offset": [5193, 5199],
      "op": "DUP6",
      "path": "0"
    },
    "2631": {
      "fn": "President.announceWinner",
      "offset": [5203, 5204],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2633": {
      "branch": 49,
      "fn": "President.announceWinner",
      "offset": [5193, 5204],
      "op": "EQ",
      "path": "0"
    },
    "2634": {
      "fn": "President.announceWinner",
      "offset": [5189, 5422],
      "op": "ISZERO",
      "path": "0"
    },
    "2635": {
      "fn": "President.announceWinner",
      "offset": [5189, 5422],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC5"
    },
    "2638": {
      "branch": 49,
      "fn": "President.announceWinner",
      "offset": [5189, 5422],
      "op": "JUMPI",
      "path": "0"
    },
    "2639": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x40"
    },
    "2641": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "MLOAD",
      "path": "0"
    },
    "2642": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "DUP1",
      "path": "0"
    },
    "2643": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2645": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "ADD",
      "path": "0"
    },
    "2646": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2648": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "MSTORE",
      "path": "0"
    },
    "2649": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "DUP1",
      "path": "0"
    },
    "2650": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2652": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "DUP2",
      "path": "0"
    },
    "2653": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "MSTORE",
      "path": "0"
    },
    "2654": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2656": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "ADD",
      "path": "0"
    },
    "2657": {
      "op": "PUSH9",
      "value": "0x497473206120746965"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "DUP2",
      "path": "0"
    },
    "2671": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "MSTORE",
      "path": "0"
    },
    "2672": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "POP",
      "path": "0"
    },
    "2673": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "SWAP4",
      "path": "0"
    },
    "2674": {
      "fn": "President.announceWinner",
      "offset": [5220, 5241],
      "op": "POP",
      "path": "0"
    },
    "2675": {
      "fn": "President.announceWinner",
      "offset": [5269, 5280],
      "op": "DUP5",
      "path": "0",
      "statement": 30
    },
    "2676": {
      "fn": "President.announceWinner",
      "offset": [5281, 5282],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2678": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "DUP2",
      "path": "0"
    },
    "2679": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "MLOAD",
      "path": "0"
    },
    "2680": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "DUP2",
      "path": "0"
    },
    "2681": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "LT",
      "path": "0"
    },
    "2682": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA85"
    },
    "2685": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "JUMPI",
      "path": "0"
    },
    "2686": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA85"
    },
    "2689": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2692": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [5269, 5283],
      "op": "JUMP",
      "path": "0"
    },
    "2693": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2694": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2696": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "MUL",
      "path": "0"
    },
    "2697": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2699": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "ADD",
      "path": "0"
    },
    "2700": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "ADD",
      "path": "0"
    },
    "2701": {
      "fn": "President.announceWinner",
      "offset": [5269, 5283],
      "op": "MLOAD",
      "path": "0"
    },
    "2702": {
      "fn": "President.announceWinner",
      "offset": [5269, 5293],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2704": {
      "fn": "President.announceWinner",
      "offset": [5269, 5293],
      "op": "ADD",
      "path": "0"
    },
    "2705": {
      "fn": "President.announceWinner",
      "offset": [5269, 5293],
      "op": "MLOAD",
      "path": "0"
    },
    "2706": {
      "fn": "President.announceWinner",
      "offset": [5255, 5293],
      "op": "SWAP2",
      "path": "0"
    },
    "2707": {
      "fn": "President.announceWinner",
      "offset": [5255, 5293],
      "op": "POP",
      "path": "0"
    },
    "2708": {
      "fn": "President.announceWinner",
      "offset": [5323, 5334],
      "op": "DUP5",
      "path": "0",
      "statement": 31
    },
    "2709": {
      "fn": "President.announceWinner",
      "offset": [5335, 5336],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2711": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "DUP2",
      "path": "0"
    },
    "2712": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "MLOAD",
      "path": "0"
    },
    "2713": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "DUP2",
      "path": "0"
    },
    "2714": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "LT",
      "path": "0"
    },
    "2715": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA6"
    },
    "2718": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "JUMPI",
      "path": "0"
    },
    "2719": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA6"
    },
    "2722": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2725": {
      "fn": "President.announceWinner",
      "jump": "i",
      "offset": [5323, 5337],
      "op": "JUMP",
      "path": "0"
    },
    "2726": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2727": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2729": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "SWAP1",
      "path": "0"
    },
    "2730": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "DUP2",
      "path": "0"
    },
    "2731": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "MUL",
      "path": "0"
    },
    "2732": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "SWAP2",
      "path": "0"
    },
    "2733": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "SWAP1",
      "path": "0"
    },
    "2734": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "SWAP2",
      "path": "0"
    },
    "2735": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "ADD",
      "path": "0"
    },
    "2736": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "ADD",
      "path": "0"
    },
    "2737": {
      "fn": "President.announceWinner",
      "offset": [5323, 5337],
      "op": "MLOAD",
      "path": "0"
    },
    "2738": {
      "fn": "President.announceWinner",
      "offset": [5323, 5352],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2740": {
      "fn": "President.announceWinner",
      "offset": [5323, 5352],
      "op": "ADD",
      "path": "0"
    },
    "2741": {
      "fn": "President.announceWinner",
      "offset": [5323, 5352],
      "op": "MLOAD",
      "path": "0"
    },
    "2742": {
      "fn": "President.announceWinner",
      "offset": [5375, 5382],
      "op": "SWAP4",
      "path": "0",
      "statement": 32
    },
    "2743": {
      "fn": "President.announceWinner",
      "offset": [5375, 5382],
      "op": "SWAP10",
      "path": "0"
    },
    "2744": {
      "fn": "President.announceWinner",
      "offset": [5384, 5395],
      "op": "SWAP2",
      "path": "0"
    },
    "2745": {
      "fn": "President.announceWinner",
      "offset": [5384, 5395],
      "op": "SWAP9",
      "path": "0"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "fn": "President.announceWinner",
      "offset": [5323, 5352],
      "op": "SWAP3",
      "path": "0"
    },
    "2748": {
      "fn": "President.announceWinner",
      "offset": [5323, 5352],
      "op": "SWAP7",
      "path": "0"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "fn": "President.announceWinner",
      "offset": [4346, 5428],
      "op": "SWAP5",
      "path": "0"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "op": "POP"
    },
    "2753": {
      "op": "POP"
    },
    "2754": {
      "op": "POP"
    },
    "2755": {
      "op": "POP"
    },
    "2756": {
      "fn": "President.announceWinner",
      "jump": "o",
      "offset": [4346, 5428],
      "op": "JUMP",
      "path": "0"
    },
    "2757": {
      "fn": "President.announceWinner",
      "offset": [5189, 5422],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2758": {
      "fn": "President.announceWinner",
      "offset": [4421, 5428],
      "op": "POP",
      "path": "0"
    },
    "2759": {
      "fn": "President.announceWinner",
      "offset": [4421, 5428],
      "op": "POP",
      "path": "0"
    },
    "2760": {
      "fn": "President.announceWinner",
      "offset": [4421, 5428],
      "op": "POP",
      "path": "0"
    },
    "2761": {
      "fn": "President.announceWinner",
      "offset": [4421, 5428],
      "op": "POP",
      "path": "0"
    },
    "2762": {
      "fn": "President.announceWinner",
      "offset": [4421, 5428],
      "op": "POP",
      "path": "0"
    },
    "2763": {
      "fn": "President.announceWinner",
      "offset": [4421, 5428],
      "op": "POP",
      "path": "0"
    },
    "2764": {
      "fn": "President.announceWinner",
      "offset": [4346, 5428],
      "op": "SWAP1",
      "path": "0"
    },
    "2765": {
      "fn": "President.announceWinner",
      "offset": [4346, 5428],
      "op": "SWAP2",
      "path": "0"
    },
    "2766": {
      "fn": "President.announceWinner",
      "offset": [4346, 5428],
      "op": "SWAP3",
      "path": "0"
    },
    "2767": {
      "fn": "President.announceWinner",
      "jump": "o",
      "offset": [4346, 5428],
      "op": "JUMP",
      "path": "0"
    },
    "2768": {
      "fn": "President.exist",
      "offset": [997, 1265],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2769": {
      "fn": "President.exist",
      "offset": [1056, 1060],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2771": {
      "fn": "President.exist",
      "offset": [1056, 1060],
      "op": "DUP1",
      "path": "0"
    },
    "2772": {
      "fn": "President.exist",
      "offset": [1072, 1236],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2773": {
      "fn": "President.exist",
      "offset": [1096, 1112],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2775": {
      "fn": "President.exist",
      "offset": [1096, 1119],
      "op": "SLOAD",
      "path": "0"
    },
    "2776": {
      "fn": "President.exist",
      "offset": [1092, 1119],
      "op": "DUP2",
      "path": "0"
    },
    "2777": {
      "fn": "President.exist",
      "offset": [1092, 1119],
      "op": "LT",
      "path": "0"
    },
    "2778": {
      "fn": "President.exist",
      "offset": [1072, 1236],
      "op": "ISZERO",
      "path": "0"
    },
    "2779": {
      "fn": "President.exist",
      "offset": [1072, 1236],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB31"
    },
    "2782": {
      "fn": "President.exist",
      "offset": [1072, 1236],
      "op": "JUMPI",
      "path": "0"
    },
    "2783": {
      "fn": "President.exist",
      "offset": [1167, 1179],
      "op": "DUP3",
      "path": "0"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2790": {
      "op": "SHL"
    },
    "2791": {
      "op": "SUB"
    },
    "2792": {
      "fn": "President.exist",
      "offset": [1144, 1179],
      "op": "AND",
      "path": "0"
    },
    "2793": {
      "fn": "President.exist",
      "offset": [1144, 1160],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2795": {
      "fn": "President.exist",
      "offset": [1161, 1162],
      "op": "DUP3",
      "path": "0"
    },
    "2796": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "DUP2",
      "path": "0"
    },
    "2797": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "SLOAD",
      "path": "0"
    },
    "2798": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "DUP2",
      "path": "0"
    },
    "2799": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "LT",
      "path": "0"
    },
    "2800": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFB"
    },
    "2803": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "JUMPI",
      "path": "0"
    },
    "2804": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFB"
    },
    "2807": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2A"
    },
    "2810": {
      "fn": "President.exist",
      "jump": "i",
      "offset": [1144, 1163],
      "op": "JUMP",
      "path": "0"
    },
    "2811": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2812": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2814": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "SWAP2",
      "path": "0"
    },
    "2815": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "DUP3",
      "path": "0"
    },
    "2816": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "MSTORE",
      "path": "0"
    },
    "2817": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2819": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "SWAP1",
      "path": "0"
    },
    "2820": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "SWAP2",
      "path": "0"
    },
    "2821": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "KECCAK256",
      "path": "0"
    },
    "2822": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "ADD",
      "path": "0"
    },
    "2823": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "SLOAD",
      "path": "0"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2830": {
      "op": "SHL"
    },
    "2831": {
      "op": "SUB"
    },
    "2832": {
      "fn": "President.exist",
      "offset": [1144, 1163],
      "op": "AND",
      "path": "0"
    },
    "2833": {
      "branch": 50,
      "fn": "President.exist",
      "offset": [1144, 1179],
      "op": "EQ",
      "path": "0"
    },
    "2834": {
      "fn": "President.exist",
      "offset": [1140, 1225],
      "op": "ISZERO",
      "path": "0"
    },
    "2835": {
      "fn": "President.exist",
      "offset": [1140, 1225],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB1F"
    },
    "2838": {
      "branch": 50,
      "fn": "President.exist",
      "offset": [1140, 1225],
      "op": "JUMPI",
      "path": "0"
    },
    "2839": {
      "op": "POP"
    },
    "2840": {
      "fn": "President.exist",
      "offset": [1206, 1210],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x1"
    },
    "2842": {
      "fn": "President.exist",
      "offset": [1206, 1210],
      "op": "SWAP3",
      "path": "0"
    },
    "2843": {
      "fn": "President.exist",
      "offset": [997, 1265],
      "op": "SWAP2",
      "path": "0"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "op": "POP"
    },
    "2846": {
      "fn": "President.exist",
      "jump": "o",
      "offset": [997, 1265],
      "op": "JUMP",
      "path": "0"
    },
    "2847": {
      "fn": "President.exist",
      "offset": [1140, 1225],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2848": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "DUP1",
      "path": "0",
      "statement": 34
    },
    "2849": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB29"
    },
    "2852": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "DUP2",
      "path": "0"
    },
    "2853": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF40"
    },
    "2856": {
      "fn": "President.exist",
      "jump": "i",
      "offset": [1121, 1124],
      "op": "JUMP",
      "path": "0"
    },
    "2857": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2858": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "SWAP2",
      "path": "0"
    },
    "2859": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "POP",
      "path": "0"
    },
    "2860": {
      "fn": "President.exist",
      "offset": [1121, 1124],
      "op": "POP",
      "path": "0"
    },
    "2861": {
      "fn": "President.exist",
      "offset": [1072, 1236],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD4"
    },
    "2864": {
      "fn": "President.exist",
      "offset": [1072, 1236],
      "op": "JUMP",
      "path": "0"
    },
    "2865": {
      "fn": "President.exist",
      "offset": [1072, 1236],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2866": {
      "op": "POP"
    },
    "2867": {
      "fn": "President.exist",
      "offset": [1253, 1258],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x0"
    },
    "2869": {
      "fn": "President.exist",
      "offset": [1253, 1258],
      "op": "SWAP3",
      "path": "0"
    },
    "2870": {
      "fn": "President.exist",
      "offset": [997, 1265],
      "op": "SWAP2",
      "path": "0"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "fn": "President.exist",
      "jump": "o",
      "offset": [997, 1265],
      "op": "JUMP",
      "path": "0"
    },
    "2874": {
      "fn": "President.getWinner",
      "offset": [3944, 4311],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2875": {
      "fn": "President.getWinner",
      "offset": [3982, 3989],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2877": {
      "fn": "President.getWinner",
      "offset": [4032, 4042],
      "op": "DUP1",
      "path": "0",
      "statement": 36
    },
    "2878": {
      "fn": "President.getWinner",
      "offset": [4032, 4042],
      "op": "SLOAD",
      "path": "0"
    },
    "2879": {
      "fn": "President.getWinner",
      "offset": [4020, 4025],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2881": {
      "fn": "President.getWinner",
      "offset": [4020, 4028],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2883": {
      "fn": "President.getWinner",
      "offset": [4020, 4028],
      "op": "MSTORE",
      "path": "0"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2886": {
      "op": "DUP1"
    },
    "2887": {
      "op": "MLOAD"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2890": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "2893": {
      "op": "DUP4"
    },
    "2894": {
      "op": "CODECOPY"
    },
    "2895": {
      "op": "DUP2"
    },
    "2896": {
      "op": "MLOAD"
    },
    "2897": {
      "op": "SWAP2"
    },
    "2898": {
      "op": "MSTORE"
    },
    "2899": {
      "fn": "President.getWinner",
      "offset": [4020, 4028],
      "op": "SLOAD",
      "path": "0"
    },
    "2900": {
      "fn": "President.getWinner",
      "offset": [4015, 4016],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2902": {
      "fn": "President.getWinner",
      "offset": [4009, 4017],
      "op": "DUP4",
      "path": "0"
    },
    "2903": {
      "fn": "President.getWinner",
      "offset": [4009, 4017],
      "op": "MSTORE",
      "path": "0"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2906": {
      "op": "DUP1"
    },
    "2907": {
      "op": "MLOAD"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2910": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "2913": {
      "op": "DUP4"
    },
    "2914": {
      "op": "CODECOPY"
    },
    "2915": {
      "op": "DUP2"
    },
    "2916": {
      "op": "MLOAD"
    },
    "2917": {
      "op": "SWAP2"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "fn": "President.getWinner",
      "offset": [4009, 4017],
      "op": "SLOAD",
      "path": "0"
    },
    "2920": {
      "fn": "President.getWinner",
      "offset": [4009, 4028],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB71"
    },
    "2923": {
      "fn": "President.getWinner",
      "offset": [4009, 4028],
      "op": "SWAP2",
      "path": "0"
    },
    "2924": {
      "fn": "President.getWinner",
      "offset": [4020, 4028],
      "op": "SWAP1",
      "path": "0"
    },
    "2925": {
      "fn": "President.getWinner",
      "offset": [4009, 4028],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF12"
    },
    "2928": {
      "fn": "President.getWinner",
      "jump": "i",
      "offset": [4009, 4028],
      "op": "JUMP",
      "path": "0"
    },
    "2929": {
      "fn": "President.getWinner",
      "offset": [4009, 4028],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2930": {
      "branch": 51,
      "fn": "President.getWinner",
      "offset": [4009, 4042],
      "op": "EQ",
      "path": "0"
    },
    "2931": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB2"
    },
    "2934": {
      "branch": 51,
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "JUMPI",
      "path": "0"
    },
    "2935": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2937": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "MLOAD",
      "path": "0"
    },
    "2938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "DUP2",
      "path": "0"
    },
    "2946": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "MSTORE",
      "path": "0"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2949": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2951": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "DUP3",
      "path": "0"
    },
    "2952": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "ADD",
      "path": "0"
    },
    "2953": {
      "op": "MSTORE"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2958": {
      "op": "DUP3"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "PUSH17",
      "value": "0x22B632B1BA34B7B7103737BA103330B4B9"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2981": {
      "op": "SHL"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2984": {
      "op": "DUP3"
    },
    "2985": {
      "op": "ADD"
    },
    "2986": {
      "op": "MSTORE"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2989": {
      "op": "ADD"
    },
    "2990": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40C"
    },
    "2993": {
      "op": "JUMP"
    },
    "2994": {
      "fn": "President.getWinner",
      "offset": [4001, 4064],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2995": {
      "fn": "President.getWinner",
      "offset": [4100, 4102],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x3C"
    },
    "2997": {
      "fn": "President.getWinner",
      "offset": [4082, 4096],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBBC"
    },
    "3000": {
      "fn": "President.getWinner",
      "offset": [4082, 4094],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC70"
    },
    "3003": {
      "fn": "President.getWinner",
      "jump": "i",
      "offset": [4082, 4096],
      "op": "JUMP",
      "path": "0"
    },
    "3004": {
      "fn": "President.getWinner",
      "offset": [4082, 4096],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3005": {
      "fn": "President.getWinner",
      "offset": [4082, 4102],
      "op": "LT",
      "path": "0"
    },
    "3006": {
      "branch": 52,
      "fn": "President.getWinner",
      "offset": [4082, 4102],
      "op": "ISZERO",
      "path": "0"
    },
    "3007": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFE"
    },
    "3010": {
      "branch": 52,
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "JUMPI",
      "path": "0"
    },
    "3011": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3013": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "MLOAD",
      "path": "0"
    },
    "3014": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "DUP2",
      "path": "0"
    },
    "3022": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "MSTORE",
      "path": "0"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3025": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3027": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "DUP3",
      "path": "0"
    },
    "3028": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "ADD",
      "path": "0"
    },
    "3029": {
      "op": "MSTORE"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3034": {
      "op": "DUP3"
    },
    "3035": {
      "op": "ADD"
    },
    "3036": {
      "op": "MSTORE"
    },
    "3037": {
      "op": "PUSH17",
      "value": "0x4E6F7420456E6F75676820766F74657273"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3060": {
      "op": "DUP3"
    },
    "3061": {
      "op": "ADD"
    },
    "3062": {
      "op": "MSTORE"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3065": {
      "op": "ADD"
    },
    "3066": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40C"
    },
    "3069": {
      "op": "JUMP"
    },
    "3070": {
      "fn": "President.getWinner",
      "offset": [4074, 4124],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3071": {
      "fn": "President.getWinner",
      "offset": [4159, 4164],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3073": {
      "fn": "President.getWinner",
      "offset": [4159, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3075": {
      "fn": "President.getWinner",
      "offset": [4159, 4167],
      "op": "MSTORE",
      "path": "0"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3078": {
      "op": "DUP1"
    },
    "3079": {
      "op": "MLOAD"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3082": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "3085": {
      "op": "DUP4"
    },
    "3086": {
      "op": "CODECOPY"
    },
    "3087": {
      "op": "DUP2"
    },
    "3088": {
      "op": "MLOAD"
    },
    "3089": {
      "op": "SWAP2"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "fn": "President.getWinner",
      "offset": [4159, 4167],
      "op": "SLOAD",
      "path": "0"
    },
    "3092": {
      "fn": "President.getWinner",
      "offset": [4154, 4155],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3094": {
      "fn": "President.getWinner",
      "offset": [4159, 4167],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3096": {
      "fn": "President.getWinner",
      "offset": [4148, 4156],
      "op": "MSTORE",
      "path": "0"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3099": {
      "op": "DUP1"
    },
    "3100": {
      "op": "MLOAD"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3103": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "3106": {
      "op": "DUP4"
    },
    "3107": {
      "op": "CODECOPY"
    },
    "3108": {
      "op": "DUP2"
    },
    "3109": {
      "op": "MLOAD"
    },
    "3110": {
      "op": "SWAP2"
    },
    "3111": {
      "op": "MSTORE"
    },
    "3112": {
      "fn": "President.getWinner",
      "offset": [4148, 4156],
      "op": "SLOAD",
      "path": "0"
    },
    "3113": {
      "branch": 53,
      "fn": "President.getWinner",
      "offset": [4148, 4167],
      "op": "GT",
      "path": "0"
    },
    "3114": {
      "fn": "President.getWinner",
      "offset": [4144, 4305],
      "op": "ISZERO",
      "path": "0"
    },
    "3115": {
      "fn": "President.getWinner",
      "offset": [4144, 4305],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC34"
    },
    "3118": {
      "branch": 53,
      "fn": "President.getWinner",
      "offset": [4144, 4305],
      "op": "JUMPI",
      "path": "0"
    },
    "3119": {
      "op": "POP"
    },
    "3120": {
      "fn": "President.getWinner",
      "offset": [4190, 4191],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x1"
    },
    "3122": {
      "fn": "President.getWinner",
      "offset": [4190, 4191],
      "op": "SWAP1",
      "path": "0"
    },
    "3123": {
      "fn": "President.getWinner",
      "jump": "o",
      "offset": [3944, 4311],
      "op": "JUMP",
      "path": "0"
    },
    "3124": {
      "fn": "President.getWinner",
      "offset": [4144, 4305],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3125": {
      "fn": "President.getWinner",
      "offset": [4223, 4228],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3127": {
      "fn": "President.getWinner",
      "offset": [4223, 4231],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3129": {
      "fn": "President.getWinner",
      "offset": [4223, 4231],
      "op": "MSTORE",
      "path": "0"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3132": {
      "op": "DUP1"
    },
    "3133": {
      "op": "MLOAD"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3136": {
      "op": "PUSH2",
      "value": "0xF9D"
    },
    "3139": {
      "op": "DUP4"
    },
    "3140": {
      "op": "CODECOPY"
    },
    "3141": {
      "op": "DUP2"
    },
    "3142": {
      "op": "MLOAD"
    },
    "3143": {
      "op": "SWAP2"
    },
    "3144": {
      "op": "MSTORE"
    },
    "3145": {
      "fn": "President.getWinner",
      "offset": [4223, 4231],
      "op": "SLOAD",
      "path": "0"
    },
    "3146": {
      "fn": "President.getWinner",
      "offset": [4218, 4219],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3148": {
      "fn": "President.getWinner",
      "offset": [4223, 4231],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3150": {
      "fn": "President.getWinner",
      "offset": [4212, 4220],
      "op": "MSTORE",
      "path": "0"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3153": {
      "op": "DUP1"
    },
    "3154": {
      "op": "MLOAD"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "op": "PUSH2",
      "value": "0xFBD"
    },
    "3160": {
      "op": "DUP4"
    },
    "3161": {
      "op": "CODECOPY"
    },
    "3162": {
      "op": "DUP2"
    },
    "3163": {
      "op": "MLOAD"
    },
    "3164": {
      "op": "SWAP2"
    },
    "3165": {
      "op": "MSTORE"
    },
    "3166": {
      "fn": "President.getWinner",
      "offset": [4212, 4220],
      "op": "SLOAD",
      "path": "0"
    },
    "3167": {
      "branch": 54,
      "fn": "President.getWinner",
      "offset": [4212, 4231],
      "op": "GT",
      "path": "0"
    },
    "3168": {
      "fn": "President.getWinner",
      "offset": [4208, 4305],
      "op": "ISZERO",
      "path": "0"
    },
    "3169": {
      "fn": "President.getWinner",
      "offset": [4208, 4305],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6A"
    },
    "3172": {
      "branch": 54,
      "fn": "President.getWinner",
      "offset": [4208, 4305],
      "op": "JUMPI",
      "path": "0"
    },
    "3173": {
      "op": "POP"
    },
    "3174": {
      "fn": "President.getWinner",
      "offset": [4254, 4255],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x2"
    },
    "3176": {
      "fn": "President.getWinner",
      "offset": [4254, 4255],
      "op": "SWAP1",
      "path": "0"
    },
    "3177": {
      "fn": "President.getWinner",
      "jump": "o",
      "offset": [3944, 4311],
      "op": "JUMP",
      "path": "0"
    },
    "3178": {
      "fn": "President.getWinner",
      "offset": [4208, 4305],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3179": {
      "op": "POP"
    },
    "3180": {
      "fn": "President.getWinner",
      "offset": [4293, 4294],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x3"
    },
    "3182": {
      "fn": "President.getWinner",
      "offset": [4293, 4294],
      "op": "SWAP1",
      "path": "0"
    },
    "3183": {
      "fn": "President.getWinner",
      "jump": "o",
      "offset": [3944, 4311],
      "op": "JUMP",
      "path": "0"
    },
    "3184": {
      "fn": "President.voterTurnout",
      "offset": [2919, 3167],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3185": {
      "fn": "President.voterTurnout",
      "offset": [3027, 3043],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x5"
    },
    "3187": {
      "fn": "President.voterTurnout",
      "offset": [3027, 3050],
      "op": "SLOAD",
      "path": "0"
    },
    "3188": {
      "fn": "President.voterTurnout",
      "offset": [3013, 3024],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3190": {
      "fn": "President.voterTurnout",
      "offset": [3013, 3050],
      "op": "DUP2",
      "path": "0"
    },
    "3191": {
      "fn": "President.voterTurnout",
      "offset": [3013, 3050],
      "op": "SWAP1",
      "path": "0"
    },
    "3192": {
      "fn": "President.voterTurnout",
      "offset": [3013, 3050],
      "op": "SSTORE",
      "path": "0"
    },
    "3193": {
      "fn": "President.voterTurnout",
      "offset": [2960, 2967],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3195": {
      "fn": "President.voterTurnout",
      "offset": [3082, 3092],
      "op": "DUP1",
      "path": "0",
      "statement": 42
    },
    "3196": {
      "fn": "President.voterTurnout",
      "offset": [3082, 3092],
      "op": "SLOAD",
      "path": "0"
    },
    "3197": {
      "fn": "President.voterTurnout",
      "offset": [2960, 2967],
      "op": "SWAP1",
      "path": "0"
    },
    "3198": {
      "fn": "President.voterTurnout",
      "offset": [2960, 2967],
      "op": "SWAP2",
      "path": "0"
    },
    "3199": {
      "fn": "President.voterTurnout",
      "offset": [2960, 2967],
      "op": "DUP3",
      "path": "0"
    },
    "3200": {
      "fn": "President.voterTurnout",
      "offset": [2960, 2967],
      "op": "SWAP2",
      "path": "0"
    },
    "3201": {
      "fn": "President.voterTurnout",
      "offset": [3082, 3098],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8B"
    },
    "3204": {
      "fn": "President.voterTurnout",
      "offset": [3082, 3098],
      "op": "SWAP1",
      "path": "0"
    },
    "3205": {
      "fn": "President.voterTurnout",
      "offset": [3095, 3098],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3207": {
      "fn": "President.voterTurnout",
      "offset": [3082, 3098],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5B"
    },
    "3210": {
      "fn": "President.voterTurnout",
      "jump": "i",
      "offset": [3082, 3098],
      "op": "JUMP",
      "path": "0"
    },
    "3211": {
      "fn": "President.voterTurnout",
      "offset": [3082, 3098],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3212": {
      "fn": "President.voterTurnout",
      "offset": [3081, 3113],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC95"
    },
    "3215": {
      "fn": "President.voterTurnout",
      "offset": [3081, 3113],
      "op": "SWAP2",
      "path": "0"
    },
    "3216": {
      "fn": "President.voterTurnout",
      "offset": [3081, 3113],
      "op": "SWAP1",
      "path": "0"
    },
    "3217": {
      "fn": "President.voterTurnout",
      "offset": [3081, 3113],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7A"
    },
    "3220": {
      "fn": "President.voterTurnout",
      "jump": "i",
      "offset": [3081, 3113],
      "op": "JUMP",
      "path": "0"
    },
    "3221": {
      "fn": "President.voterTurnout",
      "offset": [3081, 3113],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3222": {
      "fn": "President.voterTurnout",
      "offset": [3061, 3113],
      "op": "SWAP3",
      "path": "0"
    },
    "3223": {
      "fn": "President.voterTurnout",
      "offset": [2919, 3167],
      "op": "SWAP2",
      "path": "0"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "op": "POP"
    },
    "3226": {
      "fn": "President.voterTurnout",
      "jump": "o",
      "offset": [2919, 3167],
      "op": "JUMP",
      "path": "0"
    },
    "3227": {
      "op": "JUMPDEST"
    },
    "3228": {
      "op": "POP"
    },
    "3229": {
      "op": "DUP1"
    },
    "3230": {
      "op": "SLOAD"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3233": {
      "op": "DUP3"
    },
    "3234": {
      "op": "SSTORE"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3237": {
      "op": "MUL"
    },
    "3238": {
      "op": "SWAP1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3241": {
      "op": "MSTORE"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3246": {
      "op": "KECCAK256"
    },
    "3247": {
      "op": "SWAP1"
    },
    "3248": {
      "op": "DUP2"
    },
    "3249": {
      "op": "ADD"
    },
    "3250": {
      "op": "SWAP1"
    },
    "3251": {
      "op": "PUSH2",
      "value": "0xCBC"
    },
    "3254": {
      "op": "SWAP2"
    },
    "3255": {
      "op": "SWAP1"
    },
    "3256": {
      "op": "PUSH2",
      "value": "0xCBF"
    },
    "3259": {
      "jump": "i",
      "op": "JUMP"
    },
    "3260": {
      "op": "JUMPDEST"
    },
    "3261": {
      "op": "POP"
    },
    "3262": {
      "jump": "o",
      "op": "JUMP"
    },
    "3263": {
      "op": "JUMPDEST"
    },
    "3264": {
      "op": "JUMPDEST"
    },
    "3265": {
      "op": "DUP1"
    },
    "3266": {
      "op": "DUP3"
    },
    "3267": {
      "op": "GT"
    },
    "3268": {
      "op": "ISZERO"
    },
    "3269": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3272": {
      "op": "JUMPI"
    },
    "3273": {
      "op": "DUP1"
    },
    "3274": {
      "op": "SLOAD"
    },
    "3275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3281": {
      "op": "SHL"
    },
    "3282": {
      "op": "SUB"
    },
    "3283": {
      "op": "NOT"
    },
    "3284": {
      "op": "AND"
    },
    "3285": {
      "op": "DUP2"
    },
    "3286": {
      "op": "SSTORE"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "DUP3"
    },
    "3292": {
      "op": "ADD"
    },
    "3293": {
      "op": "SSTORE"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "3300": {
      "op": "JUMP"
    },
    "3301": {
      "op": "JUMPDEST"
    },
    "3302": {
      "op": "POP"
    },
    "3303": {
      "op": "SWAP1"
    },
    "3304": {
      "jump": "o",
      "op": "JUMP"
    },
    "3305": {
      "op": "JUMPDEST"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3310": {
      "op": "DUP3"
    },
    "3311": {
      "op": "DUP5"
    },
    "3312": {
      "op": "SUB"
    },
    "3313": {
      "op": "SLT"
    },
    "3314": {
      "op": "ISZERO"
    },
    "3315": {
      "op": "PUSH2",
      "value": "0xCFB"
    },
    "3318": {
      "op": "JUMPI"
    },
    "3319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3321": {
      "op": "DUP1"
    },
    "3322": {
      "op": "REVERT"
    },
    "3323": {
      "op": "JUMPDEST"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "op": "CALLDATALOAD"
    },
    "3326": {
      "op": "SWAP2"
    },
    "3327": {
      "op": "SWAP1"
    },
    "3328": {
      "op": "POP"
    },
    "3329": {
      "jump": "o",
      "op": "JUMP"
    },
    "3330": {
      "op": "JUMPDEST"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3333": {
      "op": "DUP2"
    },
    "3334": {
      "op": "MLOAD"
    },
    "3335": {
      "op": "DUP1"
    },
    "3336": {
      "op": "DUP5"
    },
    "3337": {
      "op": "MSTORE"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3340": {
      "op": "JUMPDEST"
    },
    "3341": {
      "op": "DUP2"
    },
    "3342": {
      "op": "DUP2"
    },
    "3343": {
      "op": "LT"
    },
    "3344": {
      "op": "ISZERO"
    },
    "3345": {
      "op": "PUSH2",
      "value": "0xD28"
    },
    "3348": {
      "op": "JUMPI"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3351": {
      "op": "DUP2"
    },
    "3352": {
      "op": "DUP6"
    },
    "3353": {
      "op": "ADD"
    },
    "3354": {
      "op": "DUP2"
    },
    "3355": {
      "op": "ADD"
    },
    "3356": {
      "op": "MLOAD"
    },
    "3357": {
      "op": "DUP7"
    },
    "3358": {
      "op": "DUP4"
    },
    "3359": {
      "op": "ADD"
    },
    "3360": {
      "op": "DUP3"
    },
    "3361": {
      "op": "ADD"
    },
    "3362": {
      "op": "MSTORE"
    },
    "3363": {
      "op": "ADD"
    },
    "3364": {
      "op": "PUSH2",
      "value": "0xD0C"
    },
    "3367": {
      "op": "JUMP"
    },
    "3368": {
      "op": "JUMPDEST"
    },
    "3369": {
      "op": "DUP2"
    },
    "3370": {
      "op": "DUP2"
    },
    "3371": {
      "op": "GT"
    },
    "3372": {
      "op": "ISZERO"
    },
    "3373": {
      "op": "PUSH2",
      "value": "0xD3A"
    },
    "3376": {
      "op": "JUMPI"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3381": {
      "op": "DUP4"
    },
    "3382": {
      "op": "DUP8"
    },
    "3383": {
      "op": "ADD"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "op": "JUMPDEST"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3393": {
      "op": "NOT"
    },
    "3394": {
      "op": "AND"
    },
    "3395": {
      "op": "SWAP3"
    },
    "3396": {
      "op": "SWAP1"
    },
    "3397": {
      "op": "SWAP3"
    },
    "3398": {
      "op": "ADD"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "SWAP3"
    },
    "3403": {
      "op": "SWAP2"
    },
    "3404": {
      "op": "POP"
    },
    "3405": {
      "op": "POP"
    },
    "3406": {
      "jump": "o",
      "op": "JUMP"
    },
    "3407": {
      "op": "JUMPDEST"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3410": {
      "op": "DUP2"
    },
    "3411": {
      "op": "MSTORE"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3414": {
      "op": "PUSH2",
      "value": "0xD62"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3419": {
      "op": "DUP4"
    },
    "3420": {
      "op": "ADD"
    },
    "3421": {
      "op": "DUP7"
    },
    "3422": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3425": {
      "jump": "i",
      "op": "JUMP"
    },
    "3426": {
      "op": "JUMPDEST"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3429": {
      "op": "DUP4"
    },
    "3430": {
      "op": "ADD"
    },
    "3431": {
      "op": "SWAP5"
    },
    "3432": {
      "op": "SWAP1"
    },
    "3433": {
      "op": "SWAP5"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3438": {
      "op": "ADD"
    },
    "3439": {
      "op": "MSTORE"
    },
    "3440": {
      "op": "SWAP2"
    },
    "3441": {
      "op": "SWAP1"
    },
    "3442": {
      "op": "POP"
    },
    "3443": {
      "jump": "o",
      "op": "JUMP"
    },
    "3444": {
      "op": "JUMPDEST"
    },
    "3445": {
      "op": "DUP1"
    },
    "3446": {
      "op": "CALLDATALOAD"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3453": {
      "op": "SHL"
    },
    "3454": {
      "op": "SUB"
    },
    "3455": {
      "op": "DUP2"
    },
    "3456": {
      "op": "AND"
    },
    "3457": {
      "op": "DUP2"
    },
    "3458": {
      "op": "EQ"
    },
    "3459": {
      "op": "PUSH2",
      "value": "0xD8B"
    },
    "3462": {
      "op": "JUMPI"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3465": {
      "op": "DUP1"
    },
    "3466": {
      "op": "REVERT"
    },
    "3467": {
      "op": "JUMPDEST"
    },
    "3468": {
      "op": "SWAP2"
    },
    "3469": {
      "op": "SWAP1"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "jump": "o",
      "op": "JUMP"
    },
    "3472": {
      "op": "JUMPDEST"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "DUP5"
    },
    "3479": {
      "op": "SUB"
    },
    "3480": {
      "op": "SLT"
    },
    "3481": {
      "op": "ISZERO"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xDA2"
    },
    "3485": {
      "op": "JUMPI"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3488": {
      "op": "DUP1"
    },
    "3489": {
      "op": "REVERT"
    },
    "3490": {
      "op": "JUMPDEST"
    },
    "3491": {
      "op": "PUSH2",
      "value": "0xDAB"
    },
    "3494": {
      "op": "DUP3"
    },
    "3495": {
      "op": "PUSH2",
      "value": "0xD74"
    },
    "3498": {
      "jump": "i",
      "op": "JUMP"
    },
    "3499": {
      "op": "JUMPDEST"
    },
    "3500": {
      "op": "SWAP4"
    },
    "3501": {
      "op": "SWAP3"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "jump": "o",
      "op": "JUMP"
    },
    "3506": {
      "op": "JUMPDEST"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3509": {
      "op": "DUP1"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3512": {
      "op": "DUP4"
    },
    "3513": {
      "op": "DUP6"
    },
    "3514": {
      "op": "SUB"
    },
    "3515": {
      "op": "SLT"
    },
    "3516": {
      "op": "ISZERO"
    },
    "3517": {
      "op": "PUSH2",
      "value": "0xDC5"
    },
    "3520": {
      "op": "JUMPI"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3523": {
      "op": "DUP1"
    },
    "3524": {
      "op": "REVERT"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "PUSH2",
      "value": "0xDCE"
    },
    "3529": {
      "op": "DUP4"
    },
    "3530": {
      "op": "PUSH2",
      "value": "0xD74"
    },
    "3533": {
      "jump": "i",
      "op": "JUMP"
    },
    "3534": {
      "op": "JUMPDEST"
    },
    "3535": {
      "op": "SWAP5"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3538": {
      "op": "SWAP4"
    },
    "3539": {
      "op": "SWAP1"
    },
    "3540": {
      "op": "SWAP4"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "op": "CALLDATALOAD"
    },
    "3543": {
      "op": "SWAP4"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "op": "POP"
    },
    "3547": {
      "jump": "o",
      "op": "JUMP"
    },
    "3548": {
      "op": "JUMPDEST"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3551": {
      "op": "DUP2"
    },
    "3552": {
      "op": "DUP2"
    },
    "3553": {
      "op": "SHR"
    },
    "3554": {
      "op": "SWAP1"
    },
    "3555": {
      "op": "DUP3"
    },
    "3556": {
      "op": "AND"
    },
    "3557": {
      "op": "DUP1"
    },
    "3558": {
      "op": "PUSH2",
      "value": "0xDF0"
    },
    "3561": {
      "op": "JUMPI"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3564": {
      "op": "DUP3"
    },
    "3565": {
      "op": "AND"
    },
    "3566": {
      "op": "SWAP2"
    },
    "3567": {
      "op": "POP"
    },
    "3568": {
      "op": "JUMPDEST"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3571": {
      "op": "DUP3"
    },
    "3572": {
      "op": "LT"
    },
    "3573": {
      "op": "DUP2"
    },
    "3574": {
      "op": "EQ"
    },
    "3575": {
      "op": "ISZERO"
    },
    "3576": {
      "op": "PUSH2",
      "value": "0xE11"
    },
    "3579": {
      "op": "JUMPI"
    },
    "3580": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3590": {
      "op": "MSTORE"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3595": {
      "op": "MSTORE"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3600": {
      "op": "REVERT"
    },
    "3601": {
      "op": "JUMPDEST"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "op": "SWAP2"
    },
    "3604": {
      "op": "SWAP1"
    },
    "3605": {
      "op": "POP"
    },
    "3606": {
      "jump": "o",
      "op": "JUMP"
    },
    "3607": {
      "op": "JUMPDEST"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3612": {
      "op": "DUP1"
    },
    "3613": {
      "op": "DUP4"
    },
    "3614": {
      "op": "ADD"
    },
    "3615": {
      "op": "DUP2"
    },
    "3616": {
      "op": "DUP5"
    },
    "3617": {
      "op": "MSTORE"
    },
    "3618": {
      "op": "DUP1"
    },
    "3619": {
      "op": "DUP6"
    },
    "3620": {
      "op": "MLOAD"
    },
    "3621": {
      "op": "DUP1"
    },
    "3622": {
      "op": "DUP4"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3626": {
      "op": "SWAP3"
    },
    "3627": {
      "op": "POP"
    },
    "3628": {
      "op": "DUP3"
    },
    "3629": {
      "op": "DUP7"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "SWAP2"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "op": "DUP3"
    },
    "3634": {
      "op": "DUP2"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3637": {
      "op": "SHL"
    },
    "3638": {
      "op": "DUP8"
    },
    "3639": {
      "op": "ADD"
    },
    "3640": {
      "op": "ADD"
    },
    "3641": {
      "op": "DUP5"
    },
    "3642": {
      "op": "DUP9"
    },
    "3643": {
      "op": "ADD"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "DUP4"
    },
    "3648": {
      "op": "DUP2"
    },
    "3649": {
      "op": "LT"
    },
    "3650": {
      "op": "ISZERO"
    },
    "3651": {
      "op": "PUSH2",
      "value": "0xE8A"
    },
    "3654": {
      "op": "JUMPI"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3657": {
      "op": "NOT"
    },
    "3658": {
      "op": "DUP10"
    },
    "3659": {
      "op": "DUP5"
    },
    "3660": {
      "op": "SUB"
    },
    "3661": {
      "op": "ADD"
    },
    "3662": {
      "op": "DUP6"
    },
    "3663": {
      "op": "MSTORE"
    },
    "3664": {
      "op": "DUP2"
    },
    "3665": {
      "op": "MLOAD"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3668": {
      "op": "DUP2"
    },
    "3669": {
      "op": "MLOAD"
    },
    "3670": {
      "op": "DUP2"
    },
    "3671": {
      "op": "DUP7"
    },
    "3672": {
      "op": "MSTORE"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE64"
    },
    "3676": {
      "op": "DUP3"
    },
    "3677": {
      "op": "DUP8"
    },
    "3678": {
      "op": "ADD"
    },
    "3679": {
      "op": "DUP3"
    },
    "3680": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3683": {
      "jump": "i",
      "op": "JUMP"
    },
    "3684": {
      "op": "JUMPDEST"
    },
    "3685": {
      "op": "DUP4"
    },
    "3686": {
      "op": "DUP12"
    },
    "3687": {
      "op": "ADD"
    },
    "3688": {
      "op": "MLOAD"
    },
    "3689": {
      "op": "DUP8"
    },
    "3690": {
      "op": "DUP13"
    },
    "3691": {
      "op": "ADD"
    },
    "3692": {
      "op": "MSTORE"
    },
    "3693": {
      "op": "SWAP3"
    },
    "3694": {
      "op": "DUP10"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "MLOAD"
    },
    "3697": {
      "op": "SWAP6"
    },
    "3698": {
      "op": "DUP10"
    },
    "3699": {
      "op": "ADD"
    },
    "3700": {
      "op": "SWAP6"
    },
    "3701": {
      "op": "SWAP1"
    },
    "3702": {
      "op": "SWAP6"
    },
    "3703": {
      "op": "MSTORE"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "op": "SWAP5"
    },
    "3706": {
      "op": "DUP8"
    },
    "3707": {
      "op": "ADD"
    },
    "3708": {
      "op": "SWAP5"
    },
    "3709": {
      "op": "SWAP3"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "op": "SWAP1"
    },
    "3712": {
      "op": "DUP7"
    },
    "3713": {
      "op": "ADD"
    },
    "3714": {
      "op": "SWAP1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3717": {
      "op": "ADD"
    },
    "3718": {
      "op": "PUSH2",
      "value": "0xE3E"
    },
    "3721": {
      "op": "JUMP"
    },
    "3722": {
      "op": "JUMPDEST"
    },
    "3723": {
      "op": "POP"
    },
    "3724": {
      "op": "SWAP1"
    },
    "3725": {
      "op": "SWAP9"
    },
    "3726": {
      "op": "SWAP8"
    },
    "3727": {
      "op": "POP"
    },
    "3728": {
      "op": "POP"
    },
    "3729": {
      "op": "POP"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "op": "POP"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "jump": "o",
      "op": "JUMP"
    },
    "3736": {
      "op": "JUMPDEST"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3739": {
      "op": "DUP1"
    },
    "3740": {
      "op": "DUP3"
    },
    "3741": {
      "op": "MSTORE"
    },
    "3742": {
      "op": "DUP3"
    },
    "3743": {
      "op": "MLOAD"
    },
    "3744": {
      "op": "DUP3"
    },
    "3745": {
      "op": "DUP3"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "op": "DUP2"
    },
    "3748": {
      "op": "SWAP1"
    },
    "3749": {
      "op": "MSTORE"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3752": {
      "op": "SWAP2"
    },
    "3753": {
      "op": "SWAP1"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3756": {
      "op": "SWAP1"
    },
    "3757": {
      "op": "DUP2"
    },
    "3758": {
      "op": "DUP6"
    },
    "3759": {
      "op": "ADD"
    },
    "3760": {
      "op": "SWAP1"
    },
    "3761": {
      "op": "DUP7"
    },
    "3762": {
      "op": "DUP5"
    },
    "3763": {
      "op": "ADD"
    },
    "3764": {
      "op": "DUP6"
    },
    "3765": {
      "op": "JUMPDEST"
    },
    "3766": {
      "op": "DUP3"
    },
    "3767": {
      "op": "DUP2"
    },
    "3768": {
      "op": "LT"
    },
    "3769": {
      "op": "ISZERO"
    },
    "3770": {
      "op": "PUSH2",
      "value": "0xEEF"
    },
    "3773": {
      "op": "JUMPI"
    },
    "3774": {
      "op": "DUP2"
    },
    "3775": {
      "op": "MLOAD"
    },
    "3776": {
      "op": "DUP1"
    },
    "3777": {
      "op": "MLOAD"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3784": {
      "op": "SHL"
    },
    "3785": {
      "op": "SUB"
    },
    "3786": {
      "op": "AND"
    },
    "3787": {
      "op": "DUP6"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "op": "DUP7"
    },
    "3790": {
      "op": "DUP2"
    },
    "3791": {
      "op": "ADD"
    },
    "3792": {
      "op": "MLOAD"
    },
    "3793": {
      "op": "ISZERO"
    },
    "3794": {
      "op": "ISZERO"
    },
    "3795": {
      "op": "DUP8"
    },
    "3796": {
      "op": "DUP7"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "MSTORE"
    },
    "3799": {
      "op": "DUP6"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "MLOAD"
    },
    "3802": {
      "op": "DUP6"
    },
    "3803": {
      "op": "DUP6"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "op": "MSTORE"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3808": {
      "op": "SWAP1"
    },
    "3809": {
      "op": "SWAP4"
    },
    "3810": {
      "op": "ADD"
    },
    "3811": {
      "op": "SWAP3"
    },
    "3812": {
      "op": "SWAP1"
    },
    "3813": {
      "op": "DUP6"
    },
    "3814": {
      "op": "ADD"
    },
    "3815": {
      "op": "SWAP1"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3818": {
      "op": "ADD"
    },
    "3819": {
      "op": "PUSH2",
      "value": "0xEB5"
    },
    "3822": {
      "op": "JUMP"
    },
    "3823": {
      "op": "JUMPDEST"
    },
    "3824": {
      "op": "POP"
    },
    "3825": {
      "op": "SWAP2"
    },
    "3826": {
      "op": "SWAP8"
    },
    "3827": {
      "op": "SWAP7"
    },
    "3828": {
      "op": "POP"
    },
    "3829": {
      "op": "POP"
    },
    "3830": {
      "op": "POP"
    },
    "3831": {
      "op": "POP"
    },
    "3832": {
      "op": "POP"
    },
    "3833": {
      "op": "POP"
    },
    "3834": {
      "op": "POP"
    },
    "3835": {
      "jump": "o",
      "op": "JUMP"
    },
    "3836": {
      "op": "JUMPDEST"
    },
    "3837": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3844": {
      "op": "SHL"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "MSTORE"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3852": {
      "op": "MSTORE"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3857": {
      "op": "REVERT"
    },
    "3858": {
      "op": "JUMPDEST"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3861": {
      "op": "DUP3"
    },
    "3862": {
      "op": "NOT"
    },
    "3863": {
      "op": "DUP3"
    },
    "3864": {
      "op": "GT"
    },
    "3865": {
      "op": "ISZERO"
    },
    "3866": {
      "op": "PUSH2",
      "value": "0xF25"
    },
    "3869": {
      "op": "JUMPI"
    },
    "3870": {
      "op": "PUSH2",
      "value": "0xF25"
    },
    "3873": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3876": {
      "jump": "i",
      "op": "JUMP"
    },
    "3877": {
      "op": "JUMPDEST"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "SWAP1"
    },
    "3881": {
      "jump": "o",
      "op": "JUMP"
    },
    "3882": {
      "op": "JUMPDEST"
    },
    "3883": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3890": {
      "op": "SHL"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3893": {
      "op": "MSTORE"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3898": {
      "op": "MSTORE"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "REVERT"
    },
    "3904": {
      "op": "JUMPDEST"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3909": {
      "op": "NOT"
    },
    "3910": {
      "op": "DUP3"
    },
    "3911": {
      "op": "EQ"
    },
    "3912": {
      "op": "ISZERO"
    },
    "3913": {
      "op": "PUSH2",
      "value": "0xF54"
    },
    "3916": {
      "op": "JUMPI"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xF54"
    },
    "3920": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3923": {
      "jump": "i",
      "op": "JUMP"
    },
    "3924": {
      "op": "JUMPDEST"
    },
    "3925": {
      "op": "POP"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3928": {
      "op": "ADD"
    },
    "3929": {
      "op": "SWAP1"
    },
    "3930": {
      "jump": "o",
      "op": "JUMP"
    },
    "3931": {
      "op": "JUMPDEST"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3934": {
      "op": "DUP2"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3937": {
      "op": "NOT"
    },
    "3938": {
      "op": "DIV"
    },
    "3939": {
      "op": "DUP4"
    },
    "3940": {
      "op": "GT"
    },
    "3941": {
      "op": "DUP3"
    },
    "3942": {
      "op": "ISZERO"
    },
    "3943": {
      "op": "ISZERO"
    },
    "3944": {
      "op": "AND"
    },
    "3945": {
      "op": "ISZERO"
    },
    "3946": {
      "op": "PUSH2",
      "value": "0xF75"
    },
    "3949": {
      "op": "JUMPI"
    },
    "3950": {
      "op": "PUSH2",
      "value": "0xF75"
    },
    "3953": {
      "op": "PUSH2",
      "value": "0xEFC"
    },
    "3956": {
      "jump": "i",
      "op": "JUMP"
    },
    "3957": {
      "op": "JUMPDEST"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "op": "MUL"
    },
    "3960": {
      "op": "SWAP1"
    },
    "3961": {
      "jump": "o",
      "op": "JUMP"
    },
    "3962": {
      "op": "JUMPDEST"
    },
    "3963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "3969": {
      "op": "JUMPI"
    },
    "3970": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3980": {
      "op": "MSTORE"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3985": {
      "op": "MSTORE"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3990": {
      "op": "REVERT"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "op": "DIV"
    },
    "3994": {
      "op": "SWAP1"
    },
    "3995": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d95ff4878afd9ca57d85202b120b3255e5bbb043",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract President {\n    uint256 totalVotes;\n    uint256 totalVoters;\n    Candidate[] public candidates;\n    mapping(address => Voter) public voters;\n    mapping(uint256 => uint256) public tally;\n    address [] public registeredVoters;\n    Voter[] public voterRegister;\n   \n\n    struct Candidate {\n        string name;\n        uint256 voteCount;\n        uint256 votePercentage;\n    }\n\n    struct Voter {\n        address votersAddress;\n        bool voted;\n        uint256 vote;\n    }\n\n    event AnnounceWinner(string, uint256, uint256);\n    // event voteCast(address voter, uint256 candidateChosen);\n    event ShowVoters(Voter[]);\n    event ShowCandidates(Candidate[]);\n\n    // Get a voter address from the passed in array of voter address and map them to a Voter object with\n    // their vote satus being false\n\n\n    function addVoter(address voter) private {\n        voters[voter].voted = false;\n        voters[voter].vote = 0;\n    }\n\n    function exist(address voterAddress) private view returns (bool) {\n        for (uint256 i = 0; i < registeredVoters.length; i++) {\n            if (registeredVoters[i] == voterAddress) {\n                return true;\n            } \n        }\n\n        return false;\n    }\n\n    constructor(string [] memory candidatesNames, address [] memory voterAddresses) {\n        for (uint256 i = 0; i < candidatesNames.length; i++) {\n            candidates.push(Candidate({\n                name: candidatesNames[i],\n                voteCount: 0,\n                votePercentage: 0\n            }));\n        }\n        for (uint256 j = 0; j < voterAddresses.length; j++) {\n            addVoter(voterAddresses[j]);\n            registeredVoters.push(voterAddresses[j]);\n        }\n    }\n\n    function getVotersResults() public {\n        Voter[] memory updatedRegister;\n        (updatedRegister, ) = tallyResults();\n\n        emit ShowVoters(updatedRegister);\n    }\n\n      function getCandidatesResults() public {\n        Candidate[] memory updatedResults;\n        ( ,updatedResults) = tallyResults();\n\n        emit ShowCandidates(updatedResults);\n    }\n\n    // Enable voters to vote on their candidate of choice\n\n    function castVote(address _voter, uint256 _candidate) public {\n        require(exist(_voter), \"Not an eligible voter\");\n        require(!voters[_voter].voted, \"Already voted\");\n\n        voters[_voter].voted = true;\n        voters[_voter].vote = _candidate;\n\n        // emit voteCast(_voter, _candidate);\n\n\n        if (voters[_voter].vote == 1) {\n            tally[1] += 1;\n            totalVotes = totalVotes + 1;\n            candidates[0].voteCount = tally[1];\n\n        } else if (voters[_voter].vote == 2) {\n            tally[2] += 1;\n            totalVotes = totalVotes + 1;\n            candidates[1].voteCount = tally[2];\n\n        } else {\n            revert();\n        }\n    }\n\n    // Get the percentage Voter Turnout\n\n    function voterTurnout() private returns (uint256){\n        uint256 percentageTurnout;\n        totalVoters = registeredVoters.length;\n\n        percentageTurnout = (totalVotes * 100) / totalVoters;\n\n        \n        return (percentageTurnout);\n\n    }\n\n    // Make Sure that at least 60% of registered voters cast their votes to make the election valid\n\n    function tallyResults() private returns(Voter[] memory, Candidate[] memory){\n        delete voterRegister;\n        totalVoters = registeredVoters.length;\n\n        for (uint256 x = 0; x < registeredVoters.length; x++) {\n            voterRegister.push(Voter({\n                votersAddress: registeredVoters[x],\n                voted: voters[registeredVoters[x]].voted,\n                vote: voters[registeredVoters[x]].vote\n            }));\n        }\n        \n        for (uint256 y = 0; y < candidates.length; y++) {\n        candidates[y].votePercentage = (candidates[y].voteCount * 100) / totalVoters;\n        }\n\n        return(voterRegister, candidates);\n\n    }\n\n\n    function getWinner() private returns (uint256) {\n        require(tally[1] + tally[2] == totalVotes, \"Election not fair\");\n        require(voterTurnout() >= 60, \"Not Enough voters\");\n        \n\n        if (tally[1] > tally[2]) {\n            return 1;\n        } else if (tally[2] > tally[1]) {\n            return 2;\n        } else {\n            return 3;\n        }\n    }\n\n    // Announce the winner \n\n    function announceWinner() private returns (string memory, uint256, uint256){\n        uint256 result = getWinner();\n        ( , Candidate[] memory _candidates) = tallyResults();\n        string memory message;\n        string memory winnerName;\n        uint256 winnerVotes;\n        uint256 winningMargin;\n\n        if (result == 1) {\n            winnerName = _candidates[0].name;\n            winnerVotes = _candidates[0].voteCount;\n            winningMargin = _candidates[0].votePercentage;\n            \n            return (winnerName, winnerVotes, winningMargin);\n        } else if (result == 2) {\n            winnerName = _candidates[1].name;\n            winnerVotes = _candidates[1].voteCount;\n            winningMargin = _candidates[1].votePercentage;\n            \n            return (winnerName, winnerVotes, winningMargin);  \n        } else if (result == 3) {\n            message = \"Its a tie\";\n            winnerVotes = _candidates[0].voteCount;\n            winningMargin = _candidates[0].votePercentage;\n\n            return (message, winnerVotes, winningMargin);\n        }\n    }\n\n    function sendData() public {\n        (string memory Name, uint256 voteGot, uint256 margin) = announceWinner();\n        emit AnnounceWinner(Name, voteGot, margin);\n        \n    }\n}",
  "sourceMap": "57:5556:0:-:0;;;1271:490;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1366:9;1361:227;1385:15;:22;1381:1;:26;1361:227;;;1428:10;1444:132;;;;;;;;1478:15;1494:1;1478:18;;;;;;;;:::i;:::-;;;;;;;;;;;;1444:132;;1525:1;1444:132;;;;;;;;;;;;;1428:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1428:149:0;;;;;;;;;;;;;;;;;;1409:3;;;;:::i;:::-;;;;1361:227;;;;1602:9;1597:158;1621:14;:21;1617:1;:25;1597:158;;;1663:27;1672:14;1687:1;1672:17;;;;;;;;:::i;:::-;;;;;;;1663:8;;;:27;;:::i;:::-;1704:16;1726:14;1741:1;1726:17;;;;;;;;:::i;:::-;;;;;;;;;;;;1704:40;;;;;;;-1:-1:-1;1704:40:0;;;;;;;;;;-1:-1:-1;;;;;;1704:40:0;-1:-1:-1;;;;;1704:40:0;;;;;;;;;1644:3;;;;:::i;:::-;;;;1597:158;;;;1271:490;;57:5556;;874:117;-1:-1:-1;;;;;925:13:0;947:5;925:13;;;:6;:13;;;;;:27;;-1:-1:-1;;;;925:27:0;;;;962:18;:22;874:117::o;57:5556::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:5556:0;;;-1:-1:-1;57:5556:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:1;247:40;;-1:-1:-1;;;;;302:34:1;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:1:o;426:182::-;485:4;-1:-1:-1;;;;;507:30:1;;504:56;;;540:18;;:::i;:::-;-1:-1:-1;585:1:1;581:14;597:4;577:25;;426:182::o;613:842::-;678:5;731:3;724:4;716:6;712:17;708:27;698:55;;749:1;746;739:12;698:55;778:6;772:13;804:4;828:59;844:42;883:2;844:42;:::i;:::-;828:59;:::i;:::-;921:15;;;1007:1;1003:10;;;;991:23;;987:32;;;952:12;;;;1031:15;;;1028:35;;;1059:1;1056;1049:12;1028:35;1095:2;1087:6;1083:15;1107:319;1123:6;1118:3;1115:15;1107:319;;;1190:10;;-1:-1:-1;;;;;1233:31:1;;1223:42;;1213:140;;1307:1;1336:2;1332;1325:14;1213:140;1366:18;;1404:12;;;;1140;;1107:319;;;-1:-1:-1;1444:5:1;613:842;-1:-1:-1;;;;;;613:842:1:o;1460:2147::-;1599:6;1607;1638:2;1681;1669:9;1660:7;1656:23;1652:32;1649:52;;;1697:1;1694;1687:12;1649:52;1724:16;;-1:-1:-1;;;;;1789:14:1;;;1786:34;;;1816:1;1813;1806:12;1786:34;1854:6;1843:9;1839:22;1829:32;;1880:4;1920:7;1915:2;1911;1907:11;1903:25;1893:53;;1942:1;1939;1932:12;1893:53;1971:2;1965:9;1993:4;2017:59;2033:42;2072:2;2033:42;:::i;2017:59::-;2110:15;;;2192:1;2188:10;;;;2180:19;;2176:28;;;2141:12;;;;2216:19;;;2213:39;;;2248:1;2245;2238:12;2213:39;2280:2;2276;2272:11;2292:1097;2308:6;2303:3;2300:15;2292:1097;;;2387:3;2381:10;2423:2;2410:11;2407:19;2404:109;;;2467:1;2496:2;2492;2485:14;2404:109;2536:20;;2591:2;2583:11;;2579:25;-1:-1:-1;2569:123:1;;2646:1;2675:2;2671;2664:14;2569:123;2730:2;2726;2722:11;2716:18;2758:2;2753:3;2750:11;2747:37;;;2764:18;;:::i;:::-;2810:52;2834:12;;;-1:-1:-1;;2830:26:1;2826:35;;2810:52;:::i;:::-;2889:3;2882:5;2875:18;2935:7;2930:2;2924:3;2920:2;2916:12;2912:21;2909:34;2906:127;;;2985:1;3015:3;3010;3003:16;2906:127;3055:1;3069:141;3083:3;3080:1;3077:10;3069:141;;;3179:10;;;3175:19;;3169:26;3149:13;;;3145:22;;3138:58;3095:10;;3069:141;;;3232:3;3229:1;3226:10;3223:93;;;3300:1;3295:2;3289:3;3282:5;3278:15;3274:24;3267:35;3223:93;-1:-1:-1;3329:18:1;;-1:-1:-1;;3367:12:1;;;;2325;;2292:1097;;;-1:-1:-1;3444:18:1;;;3438:25;3408:5;;-1:-1:-1;3438:25:1;;-1:-1:-1;;;;3475:16:1;;;3472:36;;;3504:1;3501;3494:12;3472:36;;;3527:74;3593:7;3582:8;3571:9;3567:24;3527:74;:::i;:::-;3517:84;;;1460:2147;;;;;:::o;3612:127::-;3673:10;3668:3;3664:20;3661:1;3654:31;3704:4;3701:1;3694:15;3728:4;3725:1;3718:15;3744:232;3783:3;-1:-1:-1;;3804:17:1;;3801:140;;;3863:10;3858:3;3854:20;3851:1;3844:31;3898:4;3895:1;3888:15;3926:4;3923:1;3916:15;3801:140;-1:-1:-1;3968:1:1;3957:13;;3744:232::o;3981:380::-;4060:1;4056:12;;;;4103;;;4124:61;;4178:4;4170:6;4166:17;4156:27;;4124:61;4231:2;4223:6;4220:14;4200:18;4197:38;4194:161;;;4277:10;4272:3;4268:20;4265:1;4258:31;4312:4;4309:1;4302:15;4340:4;4337:1;4330:15;4194:161;;3981:380;;;:::o;:::-;57:5556:0;;;;;;",
  "sourcePath": "contracts/Voting.sol",
  "type": "contract"
}
